<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='all'>
      <format attr='color' value='#1b1b1b' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='ipl_match_ball_by_ball_data' inline='true' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ipl_match_ball_by_ball_data' name='textscan.0s1y3m3056shoo0zjam1u1irapof'>
            <connection class='textscan' directory='C:/Users/safet/Downloads/archive (5)' filename='ipl_match_ball_by_ball_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.0s1y3m3056shoo0zjam1u1irapof' name='ipl_match_info_data.csv' table='[ipl_match_info_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='match_id' ordinal='0' />
              <column datatype='string' name='season' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='city' ordinal='3' />
              <column datatype='string' name='venue' ordinal='4' />
              <column datatype='string' name='team1' ordinal='5' />
              <column datatype='string' name='team2' ordinal='6' />
              <column datatype='string' name='toss_winner' ordinal='7' />
              <column datatype='string' name='toss_decision' ordinal='8' />
              <column datatype='string' name='player_of_match' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='integer' name='winner_wickets' ordinal='11' />
              <column datatype='integer' name='winner_runs' ordinal='12' />
              <column datatype='string' name='outcome' ordinal='13' />
              <column datatype='string' name='result_type' ordinal='14' />
              <column datatype='integer' name='results' ordinal='15' />
              <column datatype='string' name='gender' ordinal='16' />
              <column datatype='string' name='event' ordinal='17' />
              <column datatype='integer' name='match_number' ordinal='18' />
              <column datatype='string' name='umpire1' ordinal='19' />
              <column datatype='string' name='umpire2' ordinal='20' />
              <column datatype='string' name='reserve_umpire' ordinal='21' />
              <column datatype='string' name='tv_umpire' ordinal='22' />
              <column datatype='string' name='match_referee' ordinal='23' />
              <column datatype='string' name='eliminator' ordinal='24' />
              <column datatype='string' name='method' ordinal='25' />
              <column datatype='date' name='date_1' ordinal='26' />
            </columns>
          </relation>
          <relation connection='textscan.0s1y3m3056shoo0zjam1u1irapof' name='ipl_match_ball_by_ball_data.csv' table='[ipl_match_ball_by_ball_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='match_id' ordinal='0' />
              <column datatype='string' name='season' ordinal='1' />
              <column datatype='date' name='start_date' ordinal='2' />
              <column datatype='string' name='venue' ordinal='3' />
              <column datatype='integer' name='innings' ordinal='4' />
              <column datatype='real' name='ball' ordinal='5' />
              <column datatype='string' name='batting_team' ordinal='6' />
              <column datatype='string' name='bowling_team' ordinal='7' />
              <column datatype='string' name='striker' ordinal='8' />
              <column datatype='string' name='non_striker' ordinal='9' />
              <column datatype='string' name='bowler' ordinal='10' />
              <column datatype='integer' name='runs_off_bat' ordinal='11' />
              <column datatype='integer' name='extras' ordinal='12' />
              <column datatype='integer' name='wides' ordinal='13' />
              <column datatype='integer' name='noballs' ordinal='14' />
              <column datatype='integer' name='byes' ordinal='15' />
              <column datatype='integer' name='legbyes' ordinal='16' />
              <column datatype='string' name='penalty' ordinal='17' />
              <column datatype='string' name='wicket_type' ordinal='18' />
              <column datatype='string' name='player_dismissed' ordinal='19' />
              <column datatype='string' name='other_wicket_type' ordinal='20' />
              <column datatype='string' name='other_player_dismissed' ordinal='21' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ball]' value='[ipl_match_ball_by_ball_data.csv].[ball]' />
          <map key='[batting_team]' value='[ipl_match_ball_by_ball_data.csv].[batting_team]' />
          <map key='[bowler]' value='[ipl_match_ball_by_ball_data.csv].[bowler]' />
          <map key='[bowling_team]' value='[ipl_match_ball_by_ball_data.csv].[bowling_team]' />
          <map key='[byes]' value='[ipl_match_ball_by_ball_data.csv].[byes]' />
          <map key='[city]' value='[ipl_match_info_data.csv].[city]' />
          <map key='[date]' value='[ipl_match_info_data.csv].[date]' />
          <map key='[date_1]' value='[ipl_match_info_data.csv].[date_1]' />
          <map key='[eliminator]' value='[ipl_match_info_data.csv].[eliminator]' />
          <map key='[event]' value='[ipl_match_info_data.csv].[event]' />
          <map key='[extras]' value='[ipl_match_ball_by_ball_data.csv].[extras]' />
          <map key='[gender]' value='[ipl_match_info_data.csv].[gender]' />
          <map key='[innings]' value='[ipl_match_ball_by_ball_data.csv].[innings]' />
          <map key='[legbyes]' value='[ipl_match_ball_by_ball_data.csv].[legbyes]' />
          <map key='[match_id (ipl_match_ball_by_ball_data.csv)]' value='[ipl_match_ball_by_ball_data.csv].[match_id]' />
          <map key='[match_id]' value='[ipl_match_info_data.csv].[match_id]' />
          <map key='[match_number]' value='[ipl_match_info_data.csv].[match_number]' />
          <map key='[match_referee]' value='[ipl_match_info_data.csv].[match_referee]' />
          <map key='[method]' value='[ipl_match_info_data.csv].[method]' />
          <map key='[noballs]' value='[ipl_match_ball_by_ball_data.csv].[noballs]' />
          <map key='[non_striker]' value='[ipl_match_ball_by_ball_data.csv].[non_striker]' />
          <map key='[other_player_dismissed]' value='[ipl_match_ball_by_ball_data.csv].[other_player_dismissed]' />
          <map key='[other_wicket_type]' value='[ipl_match_ball_by_ball_data.csv].[other_wicket_type]' />
          <map key='[outcome]' value='[ipl_match_info_data.csv].[outcome]' />
          <map key='[penalty]' value='[ipl_match_ball_by_ball_data.csv].[penalty]' />
          <map key='[player_dismissed]' value='[ipl_match_ball_by_ball_data.csv].[player_dismissed]' />
          <map key='[player_of_match]' value='[ipl_match_info_data.csv].[player_of_match]' />
          <map key='[reserve_umpire]' value='[ipl_match_info_data.csv].[reserve_umpire]' />
          <map key='[result_type]' value='[ipl_match_info_data.csv].[result_type]' />
          <map key='[results]' value='[ipl_match_info_data.csv].[results]' />
          <map key='[runs_off_bat]' value='[ipl_match_ball_by_ball_data.csv].[runs_off_bat]' />
          <map key='[season (ipl_match_ball_by_ball_data.csv)]' value='[ipl_match_ball_by_ball_data.csv].[season]' />
          <map key='[season]' value='[ipl_match_info_data.csv].[season]' />
          <map key='[start_date]' value='[ipl_match_ball_by_ball_data.csv].[start_date]' />
          <map key='[striker]' value='[ipl_match_ball_by_ball_data.csv].[striker]' />
          <map key='[team1]' value='[ipl_match_info_data.csv].[team1]' />
          <map key='[team2]' value='[ipl_match_info_data.csv].[team2]' />
          <map key='[toss_decision]' value='[ipl_match_info_data.csv].[toss_decision]' />
          <map key='[toss_winner]' value='[ipl_match_info_data.csv].[toss_winner]' />
          <map key='[tv_umpire]' value='[ipl_match_info_data.csv].[tv_umpire]' />
          <map key='[umpire1]' value='[ipl_match_info_data.csv].[umpire1]' />
          <map key='[umpire2]' value='[ipl_match_info_data.csv].[umpire2]' />
          <map key='[venue (ipl_match_ball_by_ball_data.csv)]' value='[ipl_match_ball_by_ball_data.csv].[venue]' />
          <map key='[venue]' value='[ipl_match_info_data.csv].[venue]' />
          <map key='[wicket_type]' value='[ipl_match_ball_by_ball_data.csv].[wicket_type]' />
          <map key='[wides]' value='[ipl_match_ball_by_ball_data.csv].[wides]' />
          <map key='[winner]' value='[ipl_match_info_data.csv].[winner]' />
          <map key='[winner_runs]' value='[ipl_match_info_data.csv].[winner_runs]' />
          <map key='[winner_wickets]' value='[ipl_match_info_data.csv].[winner_wickets]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_id]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[winner_wickets]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>winner_wickets</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[winner_runs]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>winner_runs</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>outcome</remote-name>
            <remote-type>129</remote-type>
            <local-name>[outcome]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>outcome</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result_type]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>result_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results</remote-name>
            <remote-type>20</remote-type>
            <local-name>[results]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>results</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[event]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>event</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_number]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>match_number</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reserve_umpire</remote-name>
            <remote-type>129</remote-type>
            <local-name>[reserve_umpire]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>reserve_umpire</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tv_umpire</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tv_umpire]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>tv_umpire</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_referee</remote-name>
            <remote-type>129</remote-type>
            <local-name>[match_referee]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>match_referee</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eliminator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[eliminator]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>eliminator</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method</remote-name>
            <remote-type>129</remote-type>
            <local-name>[method]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>method</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_1</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_1]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>date_1</remote-alias>
            <ordinal>26</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_id (ipl_match_ball_by_ball_data.csv)]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[season (ipl_match_ball_by_ball_data.csv)]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue (ipl_match_ball_by_ball_data.csv)]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>innings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[innings]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>innings</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[striker]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>striker</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>runs_off_bat</remote-name>
            <remote-type>20</remote-type>
            <local-name>[runs_off_bat]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>runs_off_bat</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extras</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extras]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>extras</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wides</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wides]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>wides</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noballs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[noballs]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>noballs</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>byes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[byes]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>byes</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>legbyes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[legbyes]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>legbyes</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>penalty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[penalty]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>penalty</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wicket_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[wicket_type]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>wicket_type</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_wicket_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[other_wicket_type]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>other_wicket_type</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[other_player_dismissed]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>other_player_dismissed</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='INDEX' datatype='integer' name='[Calculation_1089308200261566464]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='MaxDate' datatype='boolean' name='[Calculation_849491538872586240]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[date]= { FIXED : MAX([date])}' />
      </column>
      <column aggregation='Sum' caption='Runs Off Bat (copy)' datatype='integer' name='[Runs Off Bat (copy)_1089308200272740353]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[runs_off_bat]' />
      </column>
      <column caption='ipl_match_ball_by_ball_data.csv' datatype='table' name='[__tableau_internal_object_id__].[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]' role='measure' type='quantitative' />
      <column caption='ipl_match_info_data.csv' datatype='table' name='[__tableau_internal_object_id__].[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]' role='measure' type='quantitative' />
      <column caption='Ball' datatype='real' name='[ball]' role='measure' type='quantitative' />
      <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
      <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
      <column caption='Byes' datatype='integer' name='[byes]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date 1' datatype='date' name='[date_1]' role='dimension' type='ordinal' />
      <column caption='Eliminator' datatype='string' name='[eliminator]' role='dimension' type='nominal' />
      <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
      <column caption='Extras' datatype='integer' name='[extras]' role='measure' type='quantitative' />
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column caption='Innings' datatype='integer' name='[innings]' role='measure' type='quantitative' />
      <column caption='Legbyes' datatype='integer' name='[legbyes]' role='measure' type='quantitative' />
      <column caption='Match Id (Ipl Match Ball By Ball Data.Csv)' datatype='integer' name='[match_id (ipl_match_ball_by_ball_data.csv)]' role='dimension' type='ordinal' />
      <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
      <column caption='Match Number' datatype='integer' name='[match_number]' role='dimension' type='ordinal' />
      <column caption='Match Referee' datatype='string' name='[match_referee]' role='dimension' type='nominal' />
      <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal' />
      <column caption='Noballs' datatype='integer' name='[noballs]' role='measure' type='quantitative' />
      <column caption='Non Striker' datatype='string' name='[non_striker]' role='dimension' type='nominal' />
      <column caption='Other Player Dismissed' datatype='string' name='[other_player_dismissed]' role='dimension' type='nominal' />
      <column caption='Other Wicket Type' datatype='string' name='[other_wicket_type]' role='dimension' type='nominal' />
      <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal' />
      <column caption='Penalty' datatype='string' name='[penalty]' role='dimension' type='nominal' />
      <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Reserve Umpire' datatype='string' name='[reserve_umpire]' role='dimension' type='nominal' />
      <column caption='Result Type' datatype='string' name='[result_type]' role='dimension' type='nominal' />
      <column caption='Results' datatype='integer' name='[results]' role='measure' type='quantitative' />
      <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
      <column caption='Season (Ipl Match Ball By Ball Data.Csv)' datatype='string' name='[season (ipl_match_ball_by_ball_data.csv)]' role='dimension' type='nominal' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
      <column caption='Striker' datatype='string' name='[striker]' role='dimension' type='nominal' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Tv Umpire' datatype='string' name='[tv_umpire]' role='dimension' type='nominal' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Venue (Ipl Match Ball By Ball Data.Csv)' datatype='string' name='[venue (ipl_match_ball_by_ball_data.csv)]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Wicket Type' datatype='string' name='[wicket_type]' role='dimension' type='nominal' />
      <column caption='Wides' datatype='integer' name='[wides]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column caption='Winner Runs' datatype='integer' name='[winner_runs]' role='measure' type='quantitative' />
      <column caption='Winner Wickets' datatype='integer' name='[winner_wickets]' role='measure' type='quantitative' />
      <column-instance column='[player_dismissed]' derivation='None' name='[none:player_dismissed:nk]' pivot='key' type='nominal' />
      <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Bowler)' hidden='true' name='[Action (Bowler)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[bowler]' />
        </groupfilter>
      </group>
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city]' />
        </groupfilter>
      </group>
      <group caption='Action (Player Of Match)' hidden='true' name='[Action (Player Of Match)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[player_of_match]' />
        </groupfilter>
      </group>
      <group caption='Action (Runs Off Bat (copy),Striker)' hidden='true' name='[Action (Runs Off Bat (copy),Striker)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Runs Off Bat (copy)_1089308200272740353]' />
          <groupfilter function='level-members' level='[striker]' />
        </groupfilter>
      </group>
      <group caption='Action (Striker)' hidden='true' name='[Action (Striker)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[striker]' />
        </groupfilter>
      </group>
      <group caption='Action (Venue)' hidden='true' name='[Action (Venue)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[venue]' />
        </groupfilter>
      </group>
      <group caption='Action (Winner)' hidden='true' name='[Action (Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date))' hidden='true' name='[Action (YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),Winner)' hidden='true' name='[Action (YEAR(Date),Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:date:ok]' />
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:player_dismissed:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Abdul Samad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AM Nayar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AS Yadav&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BB Sran&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CJ Ferguson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DB Ravi Teja&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DPMD Jayawardene&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GC Smith&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HM Amla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jaskaran Singh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LA Pomersbach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MJ Clarke&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mohsin Khan (2)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NLTC Perera&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PBB Rajapaksa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RD Gaikwad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RT Ponting&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S Sohal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SE Marsh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunny Gupta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AA Chavan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AG Murtaza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AP Majumdar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B Sai Sudharsan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;C Nanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;D Kalyankrishna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DJ Willey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ER Dwivedi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;J Arunkumar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JJ van der Wath&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kamran Akmal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KS Sharma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;M Jansen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;N Pooran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PVD Chameera&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RA Bawa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RR Bhatkal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;S Kaul&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Simarjeet Singh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TA Boult&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A Choudhary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AB Barath&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AJ Tye&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AS Joseph&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Basil Thampi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CA Pujara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;D Wiese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FH Edwards&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harshit Rana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JM Kemp&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KB Arun Karthik&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KW Richardson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;M Manhas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MEK Hussey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mohammad Hafeez&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ND Doshi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PA Patel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rashid Khan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RR Rossouw&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SS Shaikh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tilak Varma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VG Arora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Y Venugopal Rao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A Nel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AC Thomas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AN Ghosh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Avesh Khan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BJ Haddin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CK Langeveldt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DJ Harris&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;I Udana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JR Philippe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KK Nair&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;M Theekshana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MJ Santner&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MS Dhoni&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NV Ojha&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PJ Sangwan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;R Rampaul&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S Anirudha&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S Vidyut&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SO Hetmyer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SW Tait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TS Mills&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VS Yeligati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;YV Takawale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A Mithun&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Abhishek Sharma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AT Carey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CJ Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DR Martyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GC Viljoen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HR Shokeen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JC Archer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KJ Abbott&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lalit Yadav&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;M Prasidh Krishna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MJ Guptill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;R Ninan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RE Levi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RV Gomez&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SE Rutherford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SMSM Senanayake&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunny Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TM Head&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VR Iyer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Younis Khan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Flintoff&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AK Markram&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AS Rajpoot&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BAW Mendis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DA Miller&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DNT Zoysa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FY Fazal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HE van der Dussen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;J Yadav&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JM Sharma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KC Cariappa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;M Markande&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mohammad Nabi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niraj Patel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PA Reddy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;R Bishnoi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rasikh Salam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RR Sarwan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S Narwal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SD Chitnis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SS Tiwary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TK Curran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VH Zol&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yash Dayal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Anureet Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B Laughlin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;C Madan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;D Brevis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DJ Muthuswami&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E Lewis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;H Das&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;IS Sodhi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JJ Bumrah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;M Ashwin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MA Wood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MV Boucher&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;P Dogra&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PSP Handscomb&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;R Tewatia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RN ten Doeschate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Dube&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shoaib Malik&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T Taibu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UT Khawaja&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WD Parnell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Ashish Reddy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AG Paunikar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AP Tare&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B Sumanth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;C Sakariya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;D Padikkal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;F Behardien&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JL Denly&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kamran Khan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KS Williamson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;M Kaif&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MC Juneja&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MN van Wyk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;N Rana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;P Ray Barman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PWH de Silva&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RR Pant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;S Kaushik&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SB Joshi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SJ Srivastava&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SS Cottrell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TD Paine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;V Pratap Singh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;X Thalaivan Sargunam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;A Tomar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Anmolpreet Singh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B Indrajith&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BR Dunk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CR Woakes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DJ Malan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DT Patil&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GR Napier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;K Rabada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KMA Paul&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MA Khote&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ML Hayden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mukesh Choudhary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;P Awana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PP Shaw&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;R Shepherd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RK Singh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S Chanderpaul&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sachin Baby&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shoaib Ahmed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SP Jackson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T Kohli&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WA Mota&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Akash Deep&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AS Raut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BB McCullum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DA Warner&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DP Conway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;G Gambhir&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HH Gibbs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JO Holder&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KC Sangakkara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;L Ronchi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NJ Maddinson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pankaj Singh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;R Dhawan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ravi Bishnoi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S Rana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SD Lad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SM Curran&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TL Seifert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Virat Singh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yashpal Singh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;A Nortje&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anirudh Singh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DS Kulkarni&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GHS Garton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IC Pandey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;K Goel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KL Nagarkoti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MK Lomror&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OA Shah&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PK Garg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;R Sanjay Yadav&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RJ Peterson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SA Abbott&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shashank Singh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Swapnil Singh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TU Deshpande&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VVS Laxman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AD Hales&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ankit Sharma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B Akhil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BJ Rohrer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CM Gautam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DS Lehmann&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GJ Bailey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JDS Neesham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;K Gowtham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KL Rahul&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LPC Silva&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;M Vohra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MK Pandey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MS Wade&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OC McCoy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;R Sathish&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RJ Quiney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S Badree&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SA Asnodkar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shivam Mavi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SP Fleming&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T Banton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UA Birla&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VY Mahesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;A Uniyal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AD Nath&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anuj Rawat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;C de Grandhomme&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CV Varun&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DJ Mitchell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gurkeerat Singh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IR Jaggi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KA Jamieson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KP Appanna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LS Livingstone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MM Ali&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mustafizur Rahman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;P Chopra&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PR Shah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;R Shukla&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RM Patidar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Salman Butt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T Stubbs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Umran Malik&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Sundar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AA Bilakhia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AF Milne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AP Dole&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;C Munro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;D du Preez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DJ Thornely&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EJG Morgan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;H Klaasen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ishan Kishan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JJ Roy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KAJ Roach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KS Bharat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;M de Lange&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mandeep Singh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;N Jagadeesan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S Gopal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SB Bangar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shubman Gill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T Thushara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WP Saha&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A Mukund&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AC Blizzard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aman Hakim Khan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AT Rayudu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BE Hendricks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CJ McKay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DH Yagnik&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DR Sams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HV Patel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JC Buttler&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JPR Scantlebury-Searles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KK Ahmed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LE Plunkett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;M Rawat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MJ Lumb&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NS Naik&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;R Parag&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RE van der Merwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RV Patel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S Sriram&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shahbaz Ahmed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SN Khan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SV Samson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TM Srivastava&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VRV Singh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Manohar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AB McDonald&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AL Menaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AS Roy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BB Samantray&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DB Das&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GB Hogg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JA Richardson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Joginder Sharma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KD Karthik&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LA Carseldine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Misbah-ul-Haq&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mohammed Siraj&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NL McCullum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Parvez Rasool&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;R Dravid&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RD Chahar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RS Gavaskar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S Randiv&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SE Bond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SM Katich&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;STR Binny&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vishnu Vinod&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;YBK Jaiswal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A Badoni&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AA Noffke&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CA Ingram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;D Pretorius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DJM Short&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harpreet Brar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;J Suchith&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JL Pattinson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Karanveer Singh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuldeep Yadav&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MD Mishra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mohammad Ashraful&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;N Saini&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;P Sahu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q de Kock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RA Tripathi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RR Powar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S Ladda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SB Styris&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SS Iyer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TG Southee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Y Gnaneswara Rao&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ankit Soni&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B Chipli&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BMAJ Mendis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DJ Jacobs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DT Christian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Imran Tahir&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JE Taylor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;K Kartikeya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KM Jadhav&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MA Agarwal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mujeeb Ur Rahman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OF Smith&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RK Bhui&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S Badrinath&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shivam Sharma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SP Goswami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T Henderson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UBT Chand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W Jaffer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AN Ahmed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AUK Pathan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bipul Sharma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CK Kapugedera&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DR Shorey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GD Phillips&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JR Hopes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LH Ferguson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;M Shahrukh Khan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MS Bisla&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NT Ellis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PJ Cummins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;R Powell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RV Uthappa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S Tyagi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shahid Afridi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SN Thakur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SW Billings&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TR Birt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VS Malik&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A Chopra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AB Agarkar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AJ Turner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arshdeep Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BA Stokes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CA Lynn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;D Salunkhe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DL Chahar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FA Allen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harpreet Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;J Syed Mohammad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JM Bairstow&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kartik Tyagi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KV Sharma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;M Klinger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MDKJ Perera&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mohammad Asif&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NA Saini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;P Simran Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ramandeep Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RR Raje&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S Lamichhane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SS Prabhudessai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TH David&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;V Shankar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Y Nagar&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:winner:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Punjab Kings&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lucknow Super Giants&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gujarat Titans&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>%null%</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='ipl_match_ball_by_ball_data.csv' id='ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68'>
            <properties context=''>
              <relation connection='textscan.0s1y3m3056shoo0zjam1u1irapof' name='ipl_match_ball_by_ball_data.csv' table='[ipl_match_ball_by_ball_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='match_id' ordinal='0' />
                  <column datatype='string' name='season' ordinal='1' />
                  <column datatype='date' name='start_date' ordinal='2' />
                  <column datatype='string' name='venue' ordinal='3' />
                  <column datatype='integer' name='innings' ordinal='4' />
                  <column datatype='real' name='ball' ordinal='5' />
                  <column datatype='string' name='batting_team' ordinal='6' />
                  <column datatype='string' name='bowling_team' ordinal='7' />
                  <column datatype='string' name='striker' ordinal='8' />
                  <column datatype='string' name='non_striker' ordinal='9' />
                  <column datatype='string' name='bowler' ordinal='10' />
                  <column datatype='integer' name='runs_off_bat' ordinal='11' />
                  <column datatype='integer' name='extras' ordinal='12' />
                  <column datatype='integer' name='wides' ordinal='13' />
                  <column datatype='integer' name='noballs' ordinal='14' />
                  <column datatype='integer' name='byes' ordinal='15' />
                  <column datatype='integer' name='legbyes' ordinal='16' />
                  <column datatype='string' name='penalty' ordinal='17' />
                  <column datatype='string' name='wicket_type' ordinal='18' />
                  <column datatype='string' name='player_dismissed' ordinal='19' />
                  <column datatype='string' name='other_wicket_type' ordinal='20' />
                  <column datatype='string' name='other_player_dismissed' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='ipl_match_info_data.csv' id='ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95'>
            <properties context=''>
              <relation connection='textscan.0s1y3m3056shoo0zjam1u1irapof' name='ipl_match_info_data.csv' table='[ipl_match_info_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='match_id' ordinal='0' />
                  <column datatype='string' name='season' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='city' ordinal='3' />
                  <column datatype='string' name='venue' ordinal='4' />
                  <column datatype='string' name='team1' ordinal='5' />
                  <column datatype='string' name='team2' ordinal='6' />
                  <column datatype='string' name='toss_winner' ordinal='7' />
                  <column datatype='string' name='toss_decision' ordinal='8' />
                  <column datatype='string' name='player_of_match' ordinal='9' />
                  <column datatype='string' name='winner' ordinal='10' />
                  <column datatype='integer' name='winner_wickets' ordinal='11' />
                  <column datatype='integer' name='winner_runs' ordinal='12' />
                  <column datatype='string' name='outcome' ordinal='13' />
                  <column datatype='string' name='result_type' ordinal='14' />
                  <column datatype='integer' name='results' ordinal='15' />
                  <column datatype='string' name='gender' ordinal='16' />
                  <column datatype='string' name='event' ordinal='17' />
                  <column datatype='integer' name='match_number' ordinal='18' />
                  <column datatype='string' name='umpire1' ordinal='19' />
                  <column datatype='string' name='umpire2' ordinal='20' />
                  <column datatype='string' name='reserve_umpire' ordinal='21' />
                  <column datatype='string' name='tv_umpire' ordinal='22' />
                  <column datatype='string' name='match_referee' ordinal='23' />
                  <column datatype='string' name='eliminator' ordinal='24' />
                  <column datatype='string' name='method' ordinal='25' />
                  <column datatype='date' name='date_1' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[match_id]' />
              <expression op='[match_id (ipl_match_ball_by_ball_data.csv)]' />
            </expression>
            <first-end-point object-id='ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95' />
            <second-end-point object-id='ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 10 (generated)' name='[Action10_88F32DDD8B1A4C61943932ADB8E89F9B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Match Analysis' type='sheet' worksheet='TOSS/WINNER' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Match Analysis' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action11_EF334747D64840D0877926EC856E9A3B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Match Analysis' type='sheet' worksheet='Title_Winner' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Match Analysis' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1_7840136EEBE44DC6BDE61C82DE135AC4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Match Analysis' type='sheet' worksheet='MATCHES/YEAR' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Match Analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_828D1879CA3546B494A4E54020376F46]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Match Analysis' type='sheet' worksheet='WINNER/TEAM' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Match Analysis' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_FC7E7CC5970D4D90BA2F46187364DA4A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Match Analysis' type='sheet' worksheet='MATCHES/CITIES' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Match Analysis' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_BE0DC0AEF6B7470EB050B8776C49C884]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Match Analysis' type='sheet' worksheet='WINNER/VENUE' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Match Analysis' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_064A7F21A6114048B949CD4C8D26F6A5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Player Analysis' type='sheet' worksheet='MOST RUNS' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Player Analysis' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_378444BA1F9E4641B5956D9D840C19F0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Player Analysis' type='sheet' worksheet='MOST WICKETS' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Player Analysis' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_DA770283FC924C0D915BDB9AADF6EB51]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Player Analysis' type='sheet' worksheet='MOST POTM' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Player Analysis' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_D92BBC59FD524479BFE43139AF37BF7D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Player Analysis' type='sheet' worksheet='MOST SIXES' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Player Analysis' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_E374624B66D44E0183857D6BFFCD3FA9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Player Analysis' type='sheet' worksheet='MOST FOURS' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Player Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='MATCHES/CITIES'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='14'>NUMBER OF MATCHES PLAYED IN EVERY CITY</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[match_number]' derivation='Count' name='[cnt:match_number:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Match Number' datatype='integer' name='[match_number]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Venue)]'>
            <groupfilter function='level-members' level='[venue]' user:ui-action-filter='[Action4_BE0DC0AEF6B7470EB050B8776C49C884]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Winner)]'>
            <groupfilter function='level-members' level='[winner]' user:ui-action-filter='[Action2_828D1879CA3546B494A4E54020376F46]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-action-filter='[Action1_7840136EEBE44DC6BDE61C82DE135AC4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date),Winner)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_EF334747D64840D0877926EC856E9A3B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[winner]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:city:nk]' />
              <groupfilter function='member' level='[none:city:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Latitude (generated)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Longitude (generated)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date))]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Winner)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Venue)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date),Winner)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Longitude (generated)]' field-type='quantitative' max='11214248.181428662' min='5562277.333717118' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Latitude (generated)]' field-type='quantitative' max='4040021.8136749985' min='774003.93498775479' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' />
              <lod column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]' />
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Latitude (generated)]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4B5C89DE-800B-42DB-8D32-55E81EC7AB69}' />
    </worksheet>
    <worksheet name='MATCHES/YEAR'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='14'>NUMBER OF MATCHES PLAYED EVERY YEAR</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[match_number]' derivation='Count' name='[cnt:match_number:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Match Number' datatype='integer' name='[match_number]' role='dimension' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (City)]'>
            <groupfilter function='level-members' level='[city]' user:ui-action-filter='[Action3_FC7E7CC5970D4D90BA2F46187364DA4A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Venue)]'>
            <groupfilter function='level-members' level='[venue]' user:ui-action-filter='[Action4_BE0DC0AEF6B7470EB050B8776C49C884]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Winner)]'>
            <groupfilter function='level-members' level='[winner]' user:ui-action-filter='[Action2_828D1879CA3546B494A4E54020376F46]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date),Winner)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_EF334747D64840D0877926EC856E9A3B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[winner]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:season:nk]'>
            <groupfilter function='level-members' level='[none:season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:season:nk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Winner)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (City)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Venue)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date),Winner)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' value='52' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{DA959D91-920F-474D-9226-7814AB664749}' />
    </worksheet>
    <worksheet name='MOST FOURS'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='14'>TOP 10 FOURS HITTERS </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='INDEX' datatype='integer' name='[Calculation_1089308200261566464]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' caption='Runs Off Bat (copy)' datatype='integer' name='[Runs Off Bat (copy)_1089308200272740353]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[runs_off_bat]' />
            </column>
            <column-instance column='[__tableau_internal_object_id__].[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' pivot='key' type='quantitative' />
            <column caption='ipl_match_ball_by_ball_data.csv' datatype='table' name='[__tableau_internal_object_id__].[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]' role='measure' type='quantitative' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[Runs Off Bat (copy)_1089308200272740353]' derivation='None' name='[none:Runs Off Bat (copy)_1089308200272740353:ok]' pivot='key' type='ordinal' />
            <column-instance column='[striker]' derivation='None' name='[none:striker:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
            <column caption='Striker' datatype='string' name='[striker]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1089308200261566464]' derivation='User' name='[usr:Calculation_1089308200261566464:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Bowler)]'>
            <groupfilter function='level-members' level='[bowler]' user:ui-action-filter='[Action6_378444BA1F9E4641B5956D9D840C19F0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Player Of Match)]'>
            <groupfilter function='level-members' level='[player_of_match]' user:ui-action-filter='[Action7_DA770283FC924C0D915BDB9AADF6EB51]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Runs Off Bat (copy),Striker)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8_D92BBC59FD524479BFE43139AF37BF7D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Runs Off Bat (copy)_1089308200272740353]' />
              <groupfilter function='level-members' level='[striker]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Striker)]'>
            <groupfilter function='level-members' level='[striker]' user:ui-action-filter='[Action5_064A7F21A6114048B949CD4C8D26F6A5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Runs Off Bat (copy)_1089308200272740353:ok]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Runs Off Bat (copy)_1089308200272740353:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' direction='DESC' using='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' />
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Runs Off Bat (copy)_1089308200272740353:ok]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Runs Off Bat (copy),Striker)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Player Of Match)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Striker)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Bowler)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' value='39' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' value='50' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' value='140' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Runs Off Bat (copy)_1089308200272740353:ok] / [federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk])</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]</cols>
      </table>
      <simple-id uuid='{E70F7A8B-E202-4D50-AABE-42A6C2E37587}' />
    </worksheet>
    <worksheet name='MOST POTM'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='14'>MOST PLAYER OF THE MATCH</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column aggregation='Sum' caption='Runs Off Bat (copy)' datatype='integer' name='[Runs Off Bat (copy)_1089308200272740353]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[runs_off_bat]' />
            </column>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[player_of_match]' derivation='Count' name='[cnt:player_of_match:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
            <column caption='Striker' datatype='string' name='[striker]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Bowler)]'>
            <groupfilter function='level-members' level='[bowler]' user:ui-action-filter='[Action6_378444BA1F9E4641B5956D9D840C19F0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Runs Off Bat (copy),Striker)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8_D92BBC59FD524479BFE43139AF37BF7D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Runs Off Bat (copy)_1089308200272740353]' />
              <groupfilter function='level-members' level='[striker]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Striker)]'>
            <groupfilter function='level-members' level='[striker]' user:ui-action-filter='[Action5_064A7F21A6114048B949CD4C8D26F6A5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:player_of_match:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:player_of_match:nk]' />
              <groupfilter function='member' level='[none:player_of_match:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:player_of_match:nk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Runs Off Bat (copy),Striker)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Striker)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Bowler)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:player_of_match:qk]' />
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:winner:qk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:player_of_match:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2EAD0DCA-50D0-4BD5-BC3F-E27B0843282D}' />
    </worksheet>
    <worksheet name='MOST RUNS'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='14'>TOP 10 RUNS SCORER IN IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='INDEX' datatype='integer' name='[Calculation_1089308200261566464]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' caption='Runs Off Bat (copy)' datatype='integer' name='[Runs Off Bat (copy)_1089308200272740353]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[runs_off_bat]' />
            </column>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[striker]' derivation='None' name='[none:striker:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
            <column caption='Striker' datatype='string' name='[striker]' role='dimension' type='nominal' />
            <column-instance column='[runs_off_bat]' derivation='Sum' name='[sum:runs_off_bat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1089308200261566464]' derivation='User' name='[usr:Calculation_1089308200261566464:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Bowler)]'>
            <groupfilter function='level-members' level='[bowler]' user:ui-action-filter='[Action6_378444BA1F9E4641B5956D9D840C19F0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Player Of Match)]'>
            <groupfilter function='level-members' level='[player_of_match]' user:ui-action-filter='[Action7_DA770283FC924C0D915BDB9AADF6EB51]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Runs Off Bat (copy),Striker)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8_D92BBC59FD524479BFE43139AF37BF7D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Runs Off Bat (copy)_1089308200272740353]' />
              <groupfilter function='level-members' level='[striker]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]'>
            <groupfilter function='level-members' level='[none:striker:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' direction='DESC' using='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk]' />
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Runs Off Bat (copy),Striker)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Player Of Match)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Bowler)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='187' />
            <format attr='height' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' value='56' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' value='136' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{D9FFE860-8683-460F-B461-F9EB39D89AE1}' />
    </worksheet>
    <worksheet name='MOST SIXES'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='14'>TOP 10 SIX HITTERS </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='INDEX' datatype='integer' name='[Calculation_1089308200261566464]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' caption='Runs Off Bat (copy)' datatype='integer' name='[Runs Off Bat (copy)_1089308200272740353]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[runs_off_bat]' />
            </column>
            <column-instance column='[__tableau_internal_object_id__].[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' pivot='key' type='quantitative' />
            <column caption='ipl_match_ball_by_ball_data.csv' datatype='table' name='[__tableau_internal_object_id__].[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]' role='measure' type='quantitative' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[Runs Off Bat (copy)_1089308200272740353]' derivation='None' name='[none:Runs Off Bat (copy)_1089308200272740353:ok]' pivot='key' type='ordinal' />
            <column-instance column='[striker]' derivation='None' name='[none:striker:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
            <column caption='Striker' datatype='string' name='[striker]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1089308200261566464]' derivation='User' name='[usr:Calculation_1089308200261566464:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Bowler)]'>
            <groupfilter function='level-members' level='[bowler]' user:ui-action-filter='[Action6_378444BA1F9E4641B5956D9D840C19F0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Player Of Match)]'>
            <groupfilter function='level-members' level='[player_of_match]' user:ui-action-filter='[Action7_DA770283FC924C0D915BDB9AADF6EB51]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Runs Off Bat (copy),Striker)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9_E374624B66D44E0183857D6BFFCD3FA9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Runs Off Bat (copy)_1089308200272740353]' />
              <groupfilter function='level-members' level='[striker]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Striker)]'>
            <groupfilter function='level-members' level='[striker]' user:ui-action-filter='[Action5_064A7F21A6114048B949CD4C8D26F6A5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Runs Off Bat (copy)_1089308200272740353:ok]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Runs Off Bat (copy)_1089308200272740353:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' direction='DESC' using='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' />
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Runs Off Bat (copy)_1089308200272740353:ok]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Player Of Match)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Striker)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Bowler)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Runs Off Bat (copy),Striker)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' value='36' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' value='50' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' value='140' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Runs Off Bat (copy)_1089308200272740353:ok] / [federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk])</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]</cols>
      </table>
      <simple-id uuid='{07135C8D-E2A8-4F2C-B3E3-991A6FA03175}' />
    </worksheet>
    <worksheet name='MOST WICKETS'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='14'>TOP 10 WICKET TAKERS IN IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='INDEX' datatype='integer' name='[Calculation_1089308200261566464]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' caption='Runs Off Bat (copy)' datatype='integer' name='[Runs Off Bat (copy)_1089308200272740353]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[runs_off_bat]' />
            </column>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[wicket_type]' derivation='Count' name='[cnt:wicket_type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[wicket_type]' derivation='None' name='[none:wicket_type:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
            <column caption='Striker' datatype='string' name='[striker]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1089308200261566464]' derivation='User' name='[usr:Calculation_1089308200261566464:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column caption='Wicket Type' datatype='string' name='[wicket_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Player Of Match)]'>
            <groupfilter function='level-members' level='[player_of_match]' user:ui-action-filter='[Action7_DA770283FC924C0D915BDB9AADF6EB51]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Runs Off Bat (copy),Striker)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8_D92BBC59FD524479BFE43139AF37BF7D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Runs Off Bat (copy)_1089308200272740353]' />
              <groupfilter function='level-members' level='[striker]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Striker)]'>
            <groupfilter function='level-members' level='[striker]' user:ui-action-filter='[Action5_064A7F21A6114048B949CD4C8D26F6A5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:bowler:nk]' direction='DESC' using='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:wicket_type:qk]' />
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:wicket_type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:wicket_type:nk]' member='%null%' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;bowled&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;caught&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;caught and bowled&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;hit wicket&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;lbw&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;obstructing the field&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;retired hurt&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;retired out&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;stumped&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:wicket_type:nk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Runs Off Bat (copy),Striker)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Player Of Match)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Striker)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:wicket_type:qk]' value='33' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='204' />
            <format attr='height' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:bowler:nk]' value='54' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:bowler:nk]' value='136' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:wicket_type:qk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:wicket_type:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:bowler:nk]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:wicket_type:qk]</cols>
      </table>
      <simple-id uuid='{339468B4-C44B-4A4A-B291-717FA9BBF079}' />
    </worksheet>
    <worksheet name='Prac5_1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='14'>Number of Players dismissed by different Wicket Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column-instance column='[player_dismissed]' derivation='Count' name='[cnt:player_dismissed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wicket_type]' derivation='None' name='[none:wicket_type:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
            <column caption='Wicket Type' datatype='string' name='[wicket_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:wicket_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:wicket_type:nk]' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:wicket_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:wicket_type:nk]' value='184' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:player_dismissed:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:wicket_type:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{9AFBBAFF-52CC-47F1-A3E4-E43D8D88B790}' />
    </worksheet>
    <worksheet name='RUNS &gt;= 1K'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='14'>PLAYER WITH MORE THAN 1K RUNS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column-instance column='[striker]' derivation='None' name='[none:striker:nk]' pivot='key' type='nominal' />
            <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
            <column caption='Striker' datatype='string' name='[striker]' role='dimension' type='nominal' />
            <column-instance column='[runs_off_bat]' derivation='Sum' name='[sum:runs_off_bat:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk]' included-values='in-range'>
            <min>1000</min>
            <max>6634</max>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk]</cols>
      </table>
      <simple-id uuid='{4820D0E6-58FC-4C05-BF9F-02B21A263108}' />
    </worksheet>
    <worksheet name='TOSS/WINNER'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='14'>TOSS WON</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[toss_decision]' derivation='Count' name='[cnt:toss_decision:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (City)]'>
            <groupfilter function='level-members' level='[city]' user:ui-action-filter='[Action3_FC7E7CC5970D4D90BA2F46187364DA4A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Venue)]'>
            <groupfilter function='level-members' level='[venue]' user:ui-action-filter='[Action4_BE0DC0AEF6B7470EB050B8776C49C884]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Winner)]'>
            <groupfilter function='level-members' level='[winner]' user:ui-action-filter='[Action2_828D1879CA3546B494A4E54020376F46]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-action-filter='[Action1_7840136EEBE44DC6BDE61C82DE135AC4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date),Winner)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_EF334747D64840D0877926EC856E9A3B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[winner]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date))]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Winner)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (City)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Venue)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date),Winner)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]' />
              <wedge-size column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:toss_decision:qk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:toss_decision:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{18CBB2C9-9DAD-4BF0-B326-D38667415295}' />
    </worksheet>
    <worksheet name='Title_Winner'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='20'>Title Winner</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='MaxDate' datatype='boolean' name='[Calculation_849491538872586240]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date]= { FIXED : MAX([date])}' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_849491538872586240]' derivation='None' name='[none:Calculation_849491538872586240:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Winner)]'>
            <groupfilter function='level-members' level='[winner]' user:ui-action-filter='[Action10_88F32DDD8B1A4C61943932ADB8E89F9B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Calculation_849491538872586240:nk]'>
            <groupfilter function='member' level='[none:Calculation_849491538872586240:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date:ok]' context='true'>
            <groupfilter function='member' level='[yr:date:ok]' member='2016' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date:ok]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Calculation_849491538872586240:nk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Winner)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='185' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]' value='548' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='10'>&lt;</run>
                <run fontsize='10'>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</run>
                <run fontsize='10'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{91FB7C4C-D390-4C28-B2F8-B74ADB8D26C2}' />
    </worksheet>
    <worksheet name='VIRAT RUNS'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='20'>VIRAT RUNS IN EVERY SEASON</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[striker]' derivation='None' name='[none:striker:nk]' pivot='key' type='nominal' />
            <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column caption='Striker' datatype='string' name='[striker]' role='dimension' type='nominal' />
            <column-instance column='[runs_off_bat]' derivation='Sum' name='[sum:runs_off_bat:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:striker:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Ashish Reddy&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Badoni&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Chandila&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Chopra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Choudhary&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Dananjaya&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Flintoff&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Kumble&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Manohar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Mishra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Mithun&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Mukund&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Nehra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Nortje&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Symonds&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Tomar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Uniyal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Zampa&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AA Bilakhia&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AA Chavan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AA Jhunjhunwala&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AA Noffke&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AB Agarkar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AB Barath&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AB de Villiers&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AB Dinda&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AB McDonald&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Abdul Samad&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Abdur Razzak&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Abhishek Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AC Blizzard&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AC Gilchrist&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AC Thomas&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AC Voges&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AD Hales&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AD Mascarenhas&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AD Mathews&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AD Nath&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AD Russell&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AF Milne&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AG Murtaza&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AG Paunikar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AJ Finch&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AJ Turner&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AJ Tye&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AK Markram&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Akash Deep&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AL Menaria&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AM Nayar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AM Rahane&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Aman Hakim Khan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AN Ahmed&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AN Ghosh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Anirudh Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Ankit Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Ankit Soni&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Anmolpreet Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Anuj Rawat&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Anureet Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AP Dole&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AP Majumdar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AP Tare&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AR Bawne&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AR Patel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Arshdeep Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AS Joseph&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AS Rajpoot&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AS Raut&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AS Roy&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AS Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AT Carey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AT Rayudu&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AUK Pathan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Avesh Khan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Azhar Mahmood&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Akhil&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Chipli&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Indrajith&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Kumar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Laughlin&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Lee&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Sai Sudharsan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Stanlake&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Sumanth&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BA Bhatt&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BA Stokes&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Basil Thampi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BAW Mendis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BB McCullum&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BB Samantray&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BB Sran&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BCJ Cutting&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BE Hendricks&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Bipul Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BJ Haddin&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BJ Hodge&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BJ Rohrer&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BMAJ Mendis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BR Dunk&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;C de Grandhomme&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;C Madan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;C Munro&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;C Nanda&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;C Sakariya&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CA Ingram&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CA Lynn&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CA Pujara&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CH Gayle&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CH Morris&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CJ Anderson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CJ Ferguson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CJ Jordan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CJ McKay&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CK Kapugedera&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CK Langeveldt&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CL White&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CM Gautam&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CR Brathwaite&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CR Woakes&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CRD Fernando&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CV Varun&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;D Brevis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;D du Preez&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;D Kalyankrishna&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;D Padikkal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;D Pretorius&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;D Salunkhe&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;D Wiese&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DA Miller&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DA Warner&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DAJ Bracewell&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DB Das&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DB Ravi Teja&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DE Bollinger&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DH Yagnik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Bravo&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Harris&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Hooda&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Hussey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Jacobs&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Malan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Mitchell&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Muthuswami&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Thornely&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Willey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJG Sammy&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJM Short&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DL Chahar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DL Vettori&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DM Bravo&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DNT Zoysa&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DP Conway&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DP Nannes&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DP Vijaykumar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DPMD Jayawardene&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DR Martyn&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DR Sams&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DR Shorey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DR Smith&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DS Kulkarni&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DS Lehmann&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DT Christian&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DT Patil&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DW Steyn&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;E Lewis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;EJG Morgan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;ER Dwivedi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;F Behardien&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;F du Plessis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;FA Allen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Fazalhaq Farooqi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;FH Edwards&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;FY Fazal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;G Gambhir&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GB Hogg&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GC Smith&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GC Viljoen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GD McGrath&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GD Phillips&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GH Vihari&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GHS Garton&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GJ Bailey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GJ Maxwell&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GR Napier&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Gurkeerat Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;H Das&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;H Klaasen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Harbhajan Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Harmeet Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Harpreet Brar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Harpreet Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Harshit Rana&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;HE van der Dussen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;HF Gurney&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;HH Gibbs&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;HH Pandya&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;HM Amla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;HR Shokeen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;HV Patel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;I Malhotra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;I Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;I Udana&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;IC Pandey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;IK Pathan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Imran Tahir&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Iqbal Abdulla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;IR Jaggi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;IS Sodhi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Ishan Kishan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;J Arunkumar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;J Botha&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;J Suchith&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;J Syed Mohammad&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;J Theron&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;J Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JA Morkel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JA Richardson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Jaskaran Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JC Archer&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JC Buttler&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JD Ryder&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JD Unadkat&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JDP Oram&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JDS Neesham&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JE Taylor&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JEC Franklin&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JH Kallis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JJ Bumrah&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JJ Roy&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JJ van der Wath&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JL Denly&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JL Pattinson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JM Bairstow&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JM Kemp&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JM Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JO Holder&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Joginder Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JP Duminy&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JP Faulkner&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JPR Scantlebury-Searles&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JR Hazlewood&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JR Hopes&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JR Philippe&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;K Goel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;K Gowtham&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;K Kartikeya&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;K Rabada&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;K Upadhyay&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;K Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KA Jamieson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KA Pollard&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KAJ Roach&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Kamran Akmal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Kamran Khan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Karanveer Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Kartik Tyagi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KB Arun Karthik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KC Cariappa&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KC Sangakkara&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KD Karthik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KH Pandya&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KJ Abbott&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KK Ahmed&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KK Cooper&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KK Nair&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KL Nagarkoti&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KL Rahul&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KM Jadhav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KMA Paul&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KMDN Kulasekara&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KP Appanna&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KP Pietersen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KR Sen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KS Bharat&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KS Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KS Williamson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Kuldeep Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KV Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KW Richardson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;L Ablish&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;L Balaji&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;L Ronchi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LA Carseldine&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LA Pomersbach&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Lalit Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LE Plunkett&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LH Ferguson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LJ Wright&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LMP Simmons&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LPC Silva&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LR Shukla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LRPL Taylor&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LS Livingstone&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Ashwin&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M de Lange&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Jansen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Kaif&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Kartik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Klinger&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Manhas&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Markande&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Morkel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Muralitharan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Ntini&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Prasidh Krishna&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Rawat&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Shahrukh Khan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Theekshana&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Vijay&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Vohra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MA Agarwal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MA Khote&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MA Starc&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MA Wood&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mandeep Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mashrafe Mortaza&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MC Henriques&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MC Juneja&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MD Mishra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MDKJ Perera&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MEK Hussey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MF Maharoof&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MG Johnson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Misbah-ul-Haq&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MJ Clarke&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MJ Guptill&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MJ Lumb&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MJ McClenaghan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MJ Santner&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MK Lomror&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MK Pandey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MK Tiwary&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;ML Hayden&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MM Ali&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MM Patel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MM Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MN Samuels&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MN van Wyk&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mohammad Ashraful&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mohammad Asif&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mohammad Hafeez&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mohammad Nabi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mohammed Shami&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mohammed Siraj&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mohsin Khan (2)&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MP Stoinis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MR Marsh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MS Bisla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MS Dhoni&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MS Gony&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MS Wade&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mujeeb Ur Rahman&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mukesh Choudhary&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mustafizur Rahman&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MV Boucher&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;N Jagadeesan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;N Pooran&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;N Rana&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;N Saini&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NA Saini&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;ND Doshi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Niraj Patel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NJ Maddinson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NJ Rimmington&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NL McCullum&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NLTC Perera&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NM Coulter-Nile&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NS Naik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NT Ellis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NV Ojha&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;OA Shah&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;OC McCoy&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;OF Smith&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Awana&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Chopra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Dogra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Dubey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Kumar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Negi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Parameswaran&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Ray Barman&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Sahu&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Simran Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PA Patel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PA Reddy&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Pankaj Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Parvez Rasool&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PBB Rajapaksa&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PC Valthaty&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PD Collingwood&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PJ Cummins&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PJ Sangwan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PK Garg&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PM Sarvesh Kumar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PN Mankad&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PP Chawla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PP Ojha&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PP Shaw&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PR Shah&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PSP Handscomb&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PV Tambe&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PVD Chameera&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PWH de Silva&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Q de Kock&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Ashwin&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Bhatia&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Bishnoi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Dhawan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Dravid&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R McLaren&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Ninan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Parag&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Powell&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Rampaul&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Sanjay Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Sathish&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Shepherd&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Shukla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Tewatia&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Vinay Kumar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RA Bawa&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RA Jadeja&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RA Tripathi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Ramandeep Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Rashid Khan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Rasikh Salam&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Ravi Bishnoi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RD Chahar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RD Gaikwad&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RE Levi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RE van der Merwe&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RG More&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RG Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RJ Harris&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RJ Peterson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RJ Quiney&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RK Bhui&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RK Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RM Patidar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RN ten Doeschate&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RP Meredith&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RP Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RR Bhatkal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RR Pant&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RR Powar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RR Raje&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RR Rossouw&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RR Sarwan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RS Bopara&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RS Gavaskar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RS Sodhi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RT Ponting&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RV Gomez&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RV Patel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RV Uthappa&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Anirudha&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Aravind&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Badree&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Badrinath&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Chanderpaul&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Dhawan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Dube&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Gopal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Kaul&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Kaushik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Ladda&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Lamichhane&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Nadeem&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Narwal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Rana&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Randiv&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Sohal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Sreesanth&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Sriram&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Tyagi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Vidyut&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SA Abbott&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SA Asnodkar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SA Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Sachin Baby&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Salman Butt&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Sandeep Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SB Bangar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SB Jakati&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SB Joshi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SB Styris&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SB Wagh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SC Ganguly&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SD Chitnis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SD Lad&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SE Bond&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SE Marsh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SE Rutherford&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shahbaz Ahmed&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shahid Afridi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shakib Al Hasan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shashank Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shivam Mavi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shivam Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shoaib Ahmed&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shoaib Akhtar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shoaib Malik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shubman Gill&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Simarjeet Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SJ Srivastava&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SK Raina&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SK Trivedi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SK Warne&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SL Malinga&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SM Curran&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SM Harwood&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SM Katich&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SM Pollock&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SMSM Senanayake&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SN Khan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SN Thakur&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SO Hetmyer&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Sohail Tanvir&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SP Fleming&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SP Goswami&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SP Jackson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SP Narine&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SPD Smith&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SR Tendulkar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SR Watson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SS Cottrell&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SS Iyer&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SS Prabhudessai&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SS Shaikh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SS Tiwary&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;ST Jayasuriya&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;STR Binny&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Sunny Gupta&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Sunny Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SV Samson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SW Billings&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SW Tait&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Swapnil Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Banton&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Henderson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Kohli&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Natarajan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Shamsi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Stubbs&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Taibu&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Thushara&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TA Boult&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TD Paine&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TG Southee&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TH David&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Tilak Varma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TK Curran&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TL Seifert&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TL Suman&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TM Dilshan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TM Head&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TM Srivastava&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TR Birt&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TS Mills&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TU Deshpande&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;U Kaul&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;UA Birla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;UBT Chand&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Umar Gul&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Umran Malik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;UT Khawaja&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;UT Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;V Pratap Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;V Sehwag&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;V Shankar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VG Arora&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VH Zol&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Virat Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Vishnu Vinod&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VR Aaron&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VR Iyer&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VRV Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VS Malik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VS Yeligati&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VVS Laxman&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VY Mahesh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;W Jaffer&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;WA Mota&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Washington Sundar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;WD Parnell&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;WP Saha&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;WPUJC Vaas&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;X Thalaivan Sargunam&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Y Gnaneswara Rao&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Y Nagar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Y Prithvi Raj&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Y Venugopal Rao&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;YA Abdulla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Yash Dayal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Yashpal Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;YBK Jaiswal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;YK Pathan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Younis Khan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;YS Chahal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Yuvraj Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;YV Takawale&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Z Khan&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='107' />
                <format attr='maxwidth' value='107' />
                <format attr='minheight' value='20' />
                <format attr='maxheight' value='20' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk] * [federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk])</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:season:nk]</cols>
      </table>
      <simple-id uuid='{49DF5FB4-2B7E-444C-BE73-279CDFE137E9}' />
    </worksheet>
    <worksheet name='WINNER/TEAM'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='14'>NUMBER OF MATCHES WIN BY EVERY TEAM</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[match_number]' derivation='Count' name='[cnt:match_number:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Match Number' datatype='integer' name='[match_number]' role='dimension' type='ordinal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (City)]'>
            <groupfilter function='level-members' level='[city]' user:ui-action-filter='[Action3_FC7E7CC5970D4D90BA2F46187364DA4A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Venue)]'>
            <groupfilter function='level-members' level='[venue]' user:ui-action-filter='[Action4_BE0DC0AEF6B7470EB050B8776C49C884]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Winner)]'>
            <groupfilter function='level-members' level='[winner]' user:ui-action-filter='[Action10_88F32DDD8B1A4C61943932ADB8E89F9B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-action-filter='[Action1_7840136EEBE44DC6BDE61C82DE135AC4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date),Winner)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_EF334747D64840D0877926EC856E9A3B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[winner]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date))]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (City)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Venue)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Winner)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date),Winner)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' field-type='quantitative' max='139' min='-3' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{57E99D41-65E5-4D25-B984-64F3D3AAA2EA}' />
    </worksheet>
    <worksheet name='WINNER/VENUE'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='14'>MATCH WIN AT EVERY VENUE</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (City)]'>
            <groupfilter function='level-members' level='[city]' user:ui-action-filter='[Action3_FC7E7CC5970D4D90BA2F46187364DA4A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Winner)]'>
            <groupfilter function='level-members' level='[winner]' user:ui-action-filter='[Action2_828D1879CA3546B494A4E54020376F46]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-action-filter='[Action1_7840136EEBE44DC6BDE61C82DE135AC4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date),Winner)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_EF334747D64840D0877926EC856E9A3B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[winner]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date))]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Winner)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (City)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (YEAR(Date),Winner)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:winner:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:winner:qk]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:venue:nk]</cols>
      </table>
      <simple-id uuid='{15EC450F-30B9-4871-A8DF-51B67B8CFBF5}' />
    </worksheet>
    <worksheet name='Year_Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='MaxDate' datatype='boolean' name='[Calculation_849491538872586240]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date]= { FIXED : MAX([date])}' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_849491538872586240]' derivation='None' name='[none:Calculation_849491538872586240:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Calculation_849491538872586240:nk]' context='true'>
            <groupfilter function='level-members' level='[none:Calculation_849491538872586240:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Calculation_849491538872586240:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='143' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date:ok]' value='176' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{635F564C-BBD5-49DC-8A5D-4A727507FDB7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Match Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='20'>IPL Match Analytics &amp; Venue Performance</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#00aaff' />
        </style-rule>
      </style>
      <size maxheight='900' maxwidth='1900' minheight='900' minwidth='1900' sizing-mode='fixed' />
      <datasources>
        <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
      </datasources>
      <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='11' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='47' param='horz' type-v2='layout-flow' w='99158' x='421' y='889'>
            <zone h='98222' id='14' param='vert' type-v2='layout-flow' w='97158' x='421' y='889'>
              <zone h='5889' id='15' type-v2='title' w='97158' x='421' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='92333' id='12' type-v2='layout-basic' w='97158' x='421' y='6778' />
            </zone>
            <zone fixed-size='38' h='98222' id='46' is-fixed='true' param='vert' type-v2='layout-flow' w='2000' x='97579' y='889' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='46000' id='9' name='MATCHES/CITIES' w='30474' x='368' y='48111' />
        <zone h='46000' id='10' name='MATCHES/YEAR' w='30000' x='31105' y='48000' />
        <zone h='40556' id='16' name='WINNER/TEAM' w='34474' x='38895' y='6889' />
        <zone h='40333' id='17' name='WINNER/VENUE' w='38158' x='368' y='7111' />
        <zone h='46000' id='18' name='TOSS/WINNER' w='34947' x='61579' y='48000' />
        <zone h='40444' id='45' name='Title_Winner' w='14263' x='73526' y='6778' />
        <zone h='40111' id='48' name='Title_Winner' param='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date:ok]' type-v2='filter' w='9684' x='87895' y='7333' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='20'>IPL Match Analytics &amp; Venue Performance</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1900' minheight='1900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='49' param='vert' type-v2='layout-flow' w='99158' x='421' y='889'>
                <zone h='5889' id='15' type-v2='title' w='97158' x='421' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='40111' id='48' mode='checkdropdown' name='Title_Winner' param='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date:ok]' type-v2='filter' w='9684' x='87895' y='7333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40444' id='45' is-fixed='true' name='Title_Winner' w='14263' x='73526' y='6778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40556' id='16' is-fixed='true' name='WINNER/TEAM' w='34474' x='38895' y='6889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40333' id='17' is-fixed='true' name='WINNER/VENUE' w='38158' x='368' y='7111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46000' id='10' is-fixed='true' name='MATCHES/YEAR' w='30000' x='31105' y='48000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46000' id='18' is-fixed='true' name='TOSS/WINNER' w='34947' x='61579' y='48000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46000' id='9' is-fixed='true' name='MATCHES/CITIES' w='30474' x='368' y='48111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{03F20B1B-BB38-414D-A5FA-D0E8EE314AD5}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Player Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='20'>Player Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#00aaff' />
        </style-rule>
      </style>
      <size maxheight='900' maxwidth='1900' minheight='900' minwidth='1900' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='9' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='12' param='vert' type-v2='layout-flow' w='99158' x='421' y='889'>
            <zone h='5889' id='13' type-v2='title' w='99158' x='421' y='889'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92333' id='10' type-v2='layout-basic' w='99158' x='421' y='6778' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='52222' id='3' name='MOST POTM' w='56579' x='11368' y='41667' />
        <zone h='86556' id='5' name='MOST RUNS' w='10474' x='632' y='7111' />
        <zone h='34333' id='6' name='MOST WICKETS' w='44000' x='11368' y='7000' />
        <zone h='52111' id='7' name='MOST SIXES' w='28789' x='68263' y='41778' />
        <zone h='34333' id='8' name='MOST FOURS' w='41421' x='55684' y='6889' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='20'>Player Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='40' param='vert' type-v2='layout-flow' w='99158' x='421' y='889'>
                <zone h='5889' id='13' type-v2='title' w='99158' x='421' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34333' id='8' is-fixed='true' name='MOST FOURS' w='41421' x='55684' y='6889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34333' id='6' is-fixed='true' name='MOST WICKETS' w='44000' x='11368' y='7000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='86556' id='5' is-fixed='true' name='MOST RUNS' w='10474' x='632' y='7111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52222' id='3' is-fixed='true' name='MOST POTM' w='56579' x='11368' y='41667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52111' id='7' is-fixed='true' name='MOST SIXES' w='28789' x='68263' y='41778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D1A213C9-E2B0-4762-9422-A4D1B711D794}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Indian Premier League</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='5187' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='6017' />
            <zone h='82676' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='16494'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{510190DE-7280-4BB5-95C0-3CF3C717DB95}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' show-side-pane='false' source-height='44'>
    <window class='worksheet' name='MATCHES/CITIES'>
      <cards>
        <edge name='left'>
          <strip size='156'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{7BBA1421-B2C4-4ECF-99BF-829301B777CD}' />
    </window>
    <window class='worksheet' name='MATCHES/YEAR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A65DB0E-AC4D-4472-86D1-B7E5C358B346}' />
    </window>
    <window class='worksheet' name='WINNER/TEAM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{6BE6E215-1581-4CE7-AF55-B107DB70B2EB}' />
    </window>
    <window class='worksheet' name='WINNER/VENUE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B5D51D15-2116-4173-87D0-B44F35BCD926}' />
    </window>
    <window class='worksheet' name='TOSS/WINNER'>
      <cards>
        <edge name='left'>
          <strip size='226'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B92D3BB7-B622-4535-9857-3F1A854CE9EC}' />
    </window>
    <window class='worksheet' name='MOST POTM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{E05CA4B7-0623-4D56-869E-012ACC985A9D}' />
    </window>
    <window class='worksheet' name='RUNS &gt;= 1K'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{D7540D12-1EE7-4E93-A184-7E37F64536AF}' />
    </window>
    <window class='worksheet' name='VIRAT RUNS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{2A1632C7-1D67-41E1-A34A-B25EC055410B}' />
    </window>
    <window class='worksheet' name='MOST RUNS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{622CFBE3-EF35-47E1-AE36-A80ED634CC65}' />
    </window>
    <window class='worksheet' name='MOST WICKETS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{2D57A30F-F988-48CC-8583-E11927F1201A}' />
    </window>
    <window class='worksheet' name='MOST SIXES'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{2C932115-F282-4D76-BE32-545A27A00858}' />
    </window>
    <window class='worksheet' name='MOST FOURS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{1635C28B-AAF4-4B15-9BD1-0F6671EBE857}' />
    </window>
    <window class='dashboard' name='Match Analysis'>
      <viewpoints>
        <viewpoint name='MATCHES/CITIES'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='MATCHES/YEAR'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TOSS/WINNER'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Title_Winner' />
        <viewpoint name='WINNER/TEAM'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='WINNER/VENUE'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='45' />
      <simple-id uuid='{DDA4A516-07DA-4CE3-9C02-F2DC8AA9481A}' />
    </window>
    <window class='dashboard' name='Player Analysis'>
      <viewpoints>
        <viewpoint name='MOST FOURS'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MOST POTM'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MOST RUNS'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MOST SIXES'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MOST WICKETS'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{352BC23B-E322-4174-94A3-4AC5474BA42D}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{3E8F5C23-2B62-4C4E-8424-0F8CD589C5A7}' />
    </window>
    <window class='worksheet' name='Prac5_1'>
      <cards>
        <edge name='left'>
          <strip size='182'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:player_dismissed:qk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:wicket_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{589F50CB-8189-46AA-A934-2EC721C0C338}' />
    </window>
    <window class='worksheet' name='Title_Winner'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Calculation_849491538872586240:nk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[qr:date:ok]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date:ok]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date_1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{361428F7-EA6B-4CEC-A8A3-CA58D2470234}' />
    </window>
    <window class='worksheet' name='Year_Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Calculation_849491538872586240:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Calculation_849491538872586240:nk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76E1133A-74B5-4FEF-AACF-7242AB405FE9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='MATCHES/CITIES' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='MATCHES/YEAR' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MOST FOURS' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MOST POTM' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29aXcV55qmecW8Y8/zoFlISIDBYAbj4yGPT1ZmZWZVZa9V2V+q/ld/qS/9
      B7p71erurFyV1ZUnM8+xfWxsY2aMBJqHPc9jjP1hC4FsMBgEklBca7HYETsi9IYUd7zjcz+C
      67ouHh7HFPGgC+DhcZB4AvA41shPb1x/sM5399cOqiz7jiSKjJwcJd/qHXRRXoqJRIhCt3/Q
      xXghk5EA5d7BlzMT0GkaxmtdY48Avr23yv/2f/zhtS54mFBkiQ//9jf8sFk56KK8FJ/Nj3Kr
      XD/oYryQ306luV9uHHQx+CAbZ73Veq1reE0gj2ONJwCPY81zBXByPMW5mREE4C+uzPPZhRmm
      cvHd732qwvuzI3vOycRDZOIhVEVifiJNMhpgfjJNNKRz5fQEiUgAQXhj9/KLnMvFEQV4Lxtj
      NhlGEgTOjyQAOJWOcnUyzZXx1J5z3svGALj8k/1vg+lokPlEGAH469lRABK6xqcTaQBm4yGu
      jCS4kI3vOe/9TIy3+SsuPbhDfW2ZfqPO6pf/zOqX/4zRadNv1Fj96l9Y/+YLHMt6qWtZ/R7l
      hXu/ugyu41BeegjA9v27lJcf4TgOjfwW3VoVgMU//gtLX39Js5Dfc678s6vtkIwGkSURQRAw
      TIvVfJV0LMTKdpXLpycI6hrdvsGfX55DEkW+uPmIUr3Np+dn2C43aPcGTGRi9AYmAgKiKDCW
      juK6LpdPT9LpDTAtm0QkQL7aJKhr3H60Rf0NdVi3m10+mszQNS18ssT50QSFnZ8VUGW+XSvx
      yXSGbEhnOh6iNTC5PJ7CdSGmq/xmMkOjbzCwbMZjQe4XalydSNM1Lb5aKdA1Xu6P/LLEdBVZ
      HL6fbMdlIhIgoWuIO28QnyxzI1/j0kiCkKowlwhjOQ4BRebSSIK+ZVPvG4yHA6w2OryXijKw
      be6V6pxJRbEcl683ijivMQvkui5mt4vZ6RAZnyI6eQIANRCkUyoQmzxBv9lg0GrS3Fyj36zj
      jyeJjE1SefgjkqqRnDtN8f5tBEHA7HaRdT/F+7fxJ1I4pkF4dOKlytIqFQimM7RKeXyhCIF4
      gna5RDA5fHmpfj8j773P1p0btIp5OtUKI++9/+waQFNlpnJxRlNRwkEf0ZCfaFDHdhxg2Ln8
      +u4KLjCaiiCKArGQH8dxcV2XXDLCVrmBpuzVl6rIzIwmsR2HWNiPpsr8z28fUKi0UGQJn6q8
      6t/ihZQ7fVJBH7e3qoiiQCqo07fs4f1IIh9OpNhqdInqGo4L6aDOcrXFvUKNRt/gm7UCfkUm
      EdAQBUgFdDbqHR6Vm/iV575HXglNEhkLB8gGdUKaQqnbJ+X3AWDtPLGqJPI3J0dpGyYhTUEU
      BNIBna5l8/1WBVUSiekaLpAJ+Ch1+zwoNxgN+QmpCn5FQpOk1yrnoFGnUyrQ2FjFsfe+AFzX
      ZfvmdzQ315B9Psxum161THh0nNLCXURFwTYMXBfswQDHssi8fxFRlrFNA9e2X7rmAOg1G9Q3
      NzB7PVzHob61QbtU2P2+sb3J1t1bpOdO02vU6beaGN3Os2uAsXSU//blXRzHZSIbw3FdwgGd
      Rru3e3NXTk/QaPdYzdewbIf6zneFSpNsMoLrQndgMjAtbMehNzBxXJfNYp1LpybYLNaxHQfL
      dpBEAdOy0bU3JwCAjXoHx3VpD0x+2Cjz0WSGL1fytPom94s1HBfOj8Rxga5p0TUszmZj9Ewb
      14WeZRHza1i2y8CysV0X03Z2Xwz7RTao8/vlbVwXRkJ++pZNQJHJt3tkgjoArYHJf3+4yeWR
      JKbtgDAsc88cirpn2gRUGcd16Vs2LkPxlLoDgqpC17Qw7Ncrd6dSZPrP/hKz36W9vYmkqDxu
      f0mywujl39Atl2gXtrEtC9mno/iD9KoVxj/8lPraMoXb1xEkCRAo3r2JFgozaPaoPPyR+ImT
      L12W2Ngk2fnTGN0Oqq6TPnkKLRhCkoePeOrELLkz57BNE9s0UXw+JEVFeHopxH/5r194w6AH
      yHEYBh20mhTv32LsyicIr9kh3I9h0P2tuz08XoAWCjP+4acHXYxdvGFQj2ONJwCPY40nAI9j
      jScAj2ONJwCPY40nAI9jjScAj2ONJwCPY40nAI9jjScAj2ONJwCPY40nAI9jjbcYzuPIossS
      c/HIa13DE4DHkaVn2d5y6HcJvyKR0LWDLsYLkYR3p+XsCeAQ4VdkkgH1oIvxQsbC/oMuAgCp
      gM+rAd4lmgODjWb3oIvxQnLBDvcOQeSaIg0jylzXpVXIE87mqK2vEhuf/NmxhYX7ZOZO/+yz
      JwCPo4/r0tjeJJzNUVlbQfb5qKwsER0Zp1OrYPX79FtNurUasbEJSksP6VSrZOZOecOghxHX
      dXEdZ8+/x9imgdXv4bp7A9oHjdozr/W8/e8a9c11Vr+/Rq9ewxoYCKJIaWmRVrHA+AeX8YUj
      TF35iNrGKuFUhpGz79MqFTwBHEbMdpPG6iPy3/+JbilPc2Nl97vta19QX16kcOM7jE6b2sMf
      cWyb2tICtaUFXMfG7LSx+j1s06CxuvRGyzpoNenVqzS3Ntj64Rr9ZgPXddj87k9sXf+GQWtv
      8HxjY3XP/+XF+/tSjujoOJOXPkSPxqhvbSCrGoIgoEeiiJKE2euyfvM6vnAEhKF5hes4XhPo
      MOIChR++IXv5EyTNhzV44sQsygpqMIxtDHCMAY5tU757A6PVIDw+TXXxPo5hogRDqMHgGy+r
      0W5h9Xu08puMf/TZsPCui6SqRCamqS4/RAtFCCRStEt5Nr/7E+NXP2P9mz8yfvVTzE5n6BRx
      7xb+ZBrXsenXKoxc+g3iy/oWCQKj5y8CcOKjTxEEAduyEOUn55/46FMcx0ZSVFzXQRBEsvNn
      3n0B+BWZ0Bv2G9ovpB0nOAFIvneB9vY6aii05xhBFGmsPiJ+8jS1Rw8IjYzT7rTwRRNokSjd
      4jYuDo5lvrVyP36wBEEEAVzHprG+itnrEsqN0qtWh29e1yU2NUNsaoZ2fovY1CzbN76jdP82
      oixTffgjWjjCyMWPXv7hBwRB2LVYeXyerO4dTRNlGXHncRcE6fGJ774AstEAzV/hMHaQ+JTh
      H0bSfAQyI+iJNK7t0C0VEASB8Pg04ckT+FNZGsuLBLKj9Os1grkxBElCECX86Ry9cgGz2yY0
      Ok4gO/KCn/rqtPKblBfuMXLpKp3CNts3vyM2OYMWDiOIIpKiMmi16DfrGD+2CKSz2IMBze0N
      XFzqO82z0MgYrfwm8Zk5jHYbWXt7cyHvvADW6m0elA7ey/5lyESH4+uSqiGpTx4CfzK9+zmQ
      zgEQPTH3zGv4k+k9xyv+N9cMCqZzBNM5BFFk/De/xXUchJ1abPbf/i0wrLFwXcAFQSQxMw9A
      KDsKrkNkYnq4nRsbvsVfwSzLcWzWvv8W13UYPXseazDAH4v//DjbZuvOTcZ2mktwDATg8eZ4
      /LDDTjPkqWbL05/3PNR7Pj/n+F+JY9l061VmPv4zJFWlsrLE1t1byKqGHonSazawTYNQKkN1
      fZVOrcrEB5eHHeRX/qnHAL8iIwkC4V/oQwhA8A2a+nq8GElRmPn4t6xd/5ZWsYhtmSi6n4lL
      HzLotBEliZGz53Fsm9jYBJmT8xi94YTjsRHA+ZE4Plni8xM5BODvzk4xFhk2OZIBH//+1Dh/
      NTdGUJUZDfsJqDLj0QC6IjOXiuBXZE7EQwg8XrLgQ5FE5lIRTibDB3pvxx3Hsti+dwtBFFF1
      HcXnR/UP/7ZaIIDjOGze+gHXsVF1P5KiIsnDl9axaQLJoshfz4/xPxY2CWoK9wp1RsMBNhrD
      N8F2s4smS8ylojT7BrPJMMX2k+FHvyLhV2QujCSYSYS5tl5iLhlhubr/9ugevw5JUZi68pvd
      7afb/+m50xQW7tPqdQlncwTiyT3nHpsawHIcbmxVmI6HmEmEiekq6aD+JOGEInO/WMdxHLaa
      XfqWg/RUe/VkKkLPsvHJEiu1Fmv1NrbrUO0ZOF6u8UOLIAhk589w8rPf/ezhh2NUAxRaPYrt
      HtPxMB3D5EatTTrgQ5NEuobFvWKNet/gbqHOB6MJyp0ejb6JYdtsN7uoskRM19hqdrF2libk
      Wz3OZWNHJg2rx8/ZI4CQ38do6vUibA4TylMzgY8f0keV5u6+YudJE6e7M29kOg7X1kt7rrO5
      s0Jzmb1Lb1drbVZr7X0ts8fbZY8AJFVBCR6Otd77gSy/Xgogj3efPQJodvusH5FJo5dBkURG
      D7oQHoeaY9MJ9vB4Fs/tBCuyiCrL9AYmLi64IIoC9k6WwqCuMjBtzJ1Miz8lHvJTbR3+6CaP
      o4uuSMwn3oArhKbI/PkHM6wXG3QGBgPDYmBajCYj3Fra5uP3Jmn3DPqGxUqhypnJDAvrJVRF
      pt7uEQvqnBxNcP3hgLmxJPdXi95Qoce+M7Acir3Xe8k+swk0nY1x4+EWd1by2LbDBydHuDQ3
      iiQKCAxHV4r1NmG/hibLGKbFp+em+WB2hFw8RCoaAOCTs5MUa20unvRa4h6Hk2cKoNrqkUuE
      kcThRNAPi1t8v7CJ7bi4gCpLlOptIgEfZ6YytHsGjuOwkq/y4alxVvLDMLxYQGduLEm7N3hr
      N+Th8Wt4pgCK9TadvsHFk6O0ugOa3T6dvsH2zhj6dwsbXJkfZ71U59FWhUwsyHK+xnK+huU4
      GJbNarHOH24vYzuu1xfweCt0atU9/5v9PsvfX6PwcAH3OU3w53aCH/xkMgigbwwDS2qtHl/f
      X9vdX250AJgbS/LlnWGsZ746nDSqNNfweDnSAR1JOvwDc9ohnV/ZuHuL+U8/Z/POLeY++5xO
      rUokk6NZzNMs5hElGds00QIBio8WcV13f5dCLGyU9/Nyx47NZpcbxcPv4vCfzk5xNhU76GKQ
      Dvhe0Al22bx7C2swIDU9Q317E6PTIZzOoocjNIr547MWyGP/2G53uV8++AlTTR7WlrZlMWi3
      kCQZo9vBMo2dIwRy86fpt9u0KyXMfp9mqUg4nUVSVGRF9QTgcfRxHZv61iYnrn5MefkR05eu
      AhCIJ8g/uIcvFCY5dYLyyhLhdIbQTshoIBbzBHAYUUSRE7EgDypNckEd23WJ+lSCqsxqvYMg
      QLU3IOX3Uej0Sfo1yt0BmcBw+7ghqxojZ84CkJ45ubtf0TTG3/9gdzs1PbPnPMXn8wRwGPHJ
      EuezcRaqTeYSYRoDE1GA69vD0Y2LuTij4QCr9eFK1PFwgHJ3wEx8GJlW6xuMhQMYtk0uqPOg
      snOdvkljYDAdDbJUa6MrEo2+gSyKVF5xqNrs93AdB8c08EVidKtl/PEkg1YTxe+nX6+hxxK7
      8cONjVX0eBKr3xsaV8US+/Abe3UO/5DDMWWj2WEmFqJrDpeaxHWNi7k4MZ9K0u8j5deo94dt
      3XRA52IuTsrvI+pTkUWRbFAnpCq4gO24hDSFvmVxIRunY1qcTUcZCwWYjYd3r/Mq9GtVOqU8
      teVHAFR2nN5a2xv0qmXqa8v06lW2frhGt1qmWy5hD/oYrSbWoE+7mGfrh2sYnYNZVu4J4JBS
      7PR5Px1nrTF8MPqWTbHTZ2A7lLt9Fnfe6sNje1zfrlLq9rFdl4lIgLiuUu0N6Jk2Y+EA640O
      07EQle4A03Z4UGmy3e4S1hTsfVim0treYPvGd/R3vEgdy2Llj78nfeb9XdOq8oO7u8e7QDu/
      RadU2LGBORhbeK8JdAhpGya9usVms0vfsqn2DHRFwidLOK7L7UId03HQdqxE7hSHVuXfbZUx
      bYeYrrFSb2M7LqbjUusNiPhUNppdDNsmrg9rj9GQn+X6q795jW6HdmGLyMQ0odwYuQuXWf/m
      j8DQie3E7/6Kre+/QZRlIhPT1Fce/uwaoewI/Wad6tIiqfn3Xrksr4ongEOIC1iOi+UMmz+m
      42AOHJqDvXaHA/vJ9wCGPfy/+lR7/vHnp5s55e5wX9+yX6vTbBsDQiPj+ONJFJ8OQOa9CwBE
      JqaRVZXs+xdBFOnXKmTev4TA0PhL8QcJpjIgCAzaTZInT79yOV6Hd14AI2H/zx6cw4rvLc+w
      vu6IkR594r6g+IcLINXg0Mv0sSAeb6s73z9GlGVg6H4Xm9w7OvM2eecF0DYsGq/RyXubWI63
      ZPxt884LoNk3qHaPxmpUy3FefJDHvuKNAnkca46NAAQg4ddQJRFlZ8Xl41WNuiKR2rE6fBrt
      CKzM9Hg9js1f+NJYkpiukQv5OZ+LE1QVLowMZyEvjCTwqzKfTWXRZJEPRhIEVJm434cqiUzH
      QkzHQ8iiwIWRBGGfZ4b7rnBsBFBq9xmNBOhbNroi85cnR7m2VgRAFAQCqoxhO8iCyMB2+Hgy
      Qy7sJ6QppIM+kn4fqiRhWDafTGYP+G489ot3vhP8mEq3z0ajw29ncjT7Btc3y5xKR7lfrGPa
      DgICzYHBe9kYy9UWqcCTBBXl7oCQpvBeNsZarU0mpB/gnXg8RhYFYr7XyyZzbASgKzKn0lFu
      7ywoK3X6jEeGY9PL1dbudt+yGY0EWKq06Fk2bcPCtB3qvQGG7TCbCLNcfb3s5B77g+PC4Dm2
      PC/LsRFAqdOn9JOJn/WdUM7H+3+6/Zinf8k/bFXeZDE9fgWW41Dpvd5k3rHpA3h4PItjUwN4
      vLu4rovRHdbeqj+ANejjWBZqILi7EvV5eALwOPq4Lktf/ZFgOoOsarSKeUKpNL1mgxMfffqL
      p3pNII93AkGSkBQFURLRgiFyZ84hSjKO/cs5oj0BeLwTKD4ftfU1wjuJwR3bxhr0EMRfXmHr
      NYEOEdmgzkXp1yeKfttor5HT940gCKRn5wgkklRWV9ACQTZuXmfk7AWvD3CUyLd7R8IY6z+e
      nmAq8uYy0L8sEZ/KemuYCC+UHs7Op07M/qpr7BHAaCrKR2en9q2AB43sLWZ7I3QMk/Jrjr/v
      B5mg77WvsUcA290+3x8Cx6/9QpFELo4erO3Gu8jAHs6QHzSPQ0ABzF6P/IN7JKZO4I8+sW3s
      VMqYgz7hTA7xGU03rwl0CAmqMufSMXqWzXary1wiguO6fL1RIqjKXMjG+XK9yGw8zI/PeGEN
      HSGORhTcfuDYNktff8HsZ58zaLVolQpUVpfJnDyFZRi0yyX80RjtShlRlHBdBzUQxOi0PQEc
      RoLqcLn1j+UGCV1jodJgJOTHJ0soO/EMcV0jpCpMRAKMhwOsNNpcyiVYrDRRJZHJSBBRFJAF
      gY5pEVQVSp0+j2r7t47JNs1hJ1MUsPp9Bs2hGH2RKKI8vAdRkrBNA1nb21zpVkr4E6l9KYdl
      DNAjURpbmzQL2ySnZxEQ2Lp7C8XnAwQW/vWfmPv8L9i8dQNZ06BSxrWtZw+DypLI1ZkRpp/K
      GXwy86RaSe6shnz8fTLorY7cT/LtHndLdT4ZT6NKImfTMRoDk445bHYsVlrM7rjApfw+HNcl
      uZPE+365gSgIuC78sF3BdFxGQ34M2yak7W8cQ3NzjU65iNFqUn30YPd/ANs0KNy5TuXRAwat
      JuXF+zS31nEdh/LifbZvfo/Z75G//QODdotutYxj2/Qb9V9dDlnT6Nar+KMxjF6X/IN7xCYm
      GYZBDQPwkydmaWxvDf2HBOjVa/ij8WfXAH5FptHto0gSc9k4jV6f9yfSrFeb9E2bUyMJbqwW
      +GRujI1qi/lcnGizSyqsc325wGwmxsCyiQd9iILADysFzo4l6QxMap0+uViQh/ka7SPi1vC2
      ifpUTsbDtIzhQ399u0JtJ7DftB36gsV2u0vUpyIAtusOxbETU982LFxcXHfoMVTrDUj4NfLt
      N5eoRJQVAukMtmWi6MNc04Io0atVSMzM06/X2Lr+Dcm5M+jxBINWE9dxEESRre+/RgkECOXG
      EAQRXyT66362KDH7yeeUVx4xefEq4NKpVRl7/wIIAoIgoPh0eo060dwotmXhWCZaKPzLTaBH
      xRpXTuQYiQZYKtY5mY1ze71EvTNgLhvn++U8F6eybNbbSIJA2Kcxk4kynY7yDzcekQzlWKs0
      OT+RJuBTyESD1No9Sq2u9/D/AvW+wbdbz8610BiYNAYmdJ5//mK1uft5YSerz+sYYD0P2efD
      aLew+j20HfuTp4lOnqC1vUm3WsI2B/iicWzTRFI0HNOk/OAu0ckTDJoN/PEktUcLTHz6u1cr
      i6aRnT+zu/2s8vhjQxuXp+vB544TBnwqZ8dSFBodHBe26i3igWE7brXc4PxEmoeFGmfHkmzV
      2kylIuQbHSRRZK3cwHXdYU4x16VvWvgUme1ai75ps1k9GB9Ij/0lmBkBXKxBn/DYJIruJ5R7
      khBR8Q/f6nosgeu4hHJjJE+eprGxQjCTIz4zRyu/SWxqhujECaKTJxBfMHO73zyzBugMTNp9
      g0q7R6Xdo9Do0DUsOoNhG7TVN/j7Hx5i2g7/9/VFDMvm5loRURBo7Yw+uMDdjTKmbVNu9Sg2
      h9Vvozugbx38EJrH6yMIAonZU7vbkqqhq08itGRVQ97Zzrx3fnf/Y/c4AN+ZJ82d6OSJN1nc
      Z/JMAdiuy4OdyCmA7s6Yb/spg6lSqwdA+Sf/P03XeNLMyTd+oc728DggvKlSj2PNOz8PcCod
      /Znfz2EluM/DlB4v5p0XwGKtxa3irx9bPgg+9ATw1nnnBeDx7qLLEnPxyIsP/AU8AXgcWXqW
      zXrr9ZZ2HI3G8T7weBmAT5aQRQFJENAkEV2WUMQnv4bcU6ZX2aCOJAgEVe898a5ybARwJhVB
      FgXOZWMICIQ1hfFokCtjSQQBLuTipAM+JiJBzqajZAI+ciEdQRiaanm8mxwbATystjgRCyEL
      wm5Koc8mMzystDibjrFQbnIyGUYQYLHaYiI6jHiSBIGst9jvUONYFg+/+BeWr31Fr9ng7j/+
      PYt/+D2tUvGF5x4bAVS7A2YSYUpPJcv4YrXAfCoCAqiSiCgIWI7LwLJx9iFzosfbwWXoCxQb
      HUfRfERHx0nNnKTXeHF46bGp213gdr7K1s6MddswGdgOWztLNCZjQW5uV3kcQ/2w2sR1hwno
      Vt7AQjKP/UMQRKY/+pT8/TvD5dZLDykDp/78377w3GMjAICN5pPlwKbjYjpP1iTd+8lcQaP/
      ZBlHy1u5ergRBOqb62ihMOHsCLOffY4vGKZZzD9zVejTHCsBeLybiKJI7vTZ3e1AbBgHHhsd
      f+G5ngAOEbmQjiQd/iB+7S2nc32TeAI4RJS7fe6XD/+yjSsjyYMuwh4GnTb5+3dxbJvM/Ok9
      rhBP47ou1bUVEpPTu/s8AXj8akZCfsQXOK69DdIBH+utFlogSGrmJPWtDbRgkJVvvyYQTyCI
      Ip1KmWAyhRYMUV5+iGUYiJJEOJOlWch7AvD49ZS7PZbqB+8f5Vd+PopfevQQ17HJP7hHJDvC
      +IVLrN+8TqtUZOLSVTZvXqdZyBNIJGkVC8dnHuAoYRsGhR+uUV9eHFbbi/cp3r6O2RkOxxrt
      FsXb1+lVSj871+y0sQZ9uqUCAI21pbda9oNGD4dxHYfk9AyCKDw2hgDXpb65jtHrYpsmtfVV
      bMv0aoDDiD3ooUVjiIpKfWkBq9clefp9Cje/JXf5Y0p3fyD7wdVhYPn9W1i9LoIgIvl8BLOj
      ON02a//6Pxj79N9QXbhHr1wkceocij9w0Lf2xvCFI6T9fiRVQ5QVZFVF1nwIosTIe+cQZZl2
      ucTEB1dwHBuz2yU+MeXVAIeZYG4Uo9WkVy2x8dXvCWSHAeeJ+bMUblyjU9jCMQ1is6fQojEc
      08RoNRFkmcjkDMHsKIF0lvjcGdr5jX0vnzUYUHxwl3axgPuMmXPXdWnmt3Y/93eMs57eb3Ta
      u9893vcqiJI0fOAFgVAqjR6Jovh8u5YokqwQyY6g6DpaIEgwlUbx6XtrgLCuMRo7eNff/UI5
      bDbeL4kL9KpljFaTYG4UQRTRIjGMZh3XncDstAiNTdHeWkdSNYb1/JNOqYCAbRoMWo3h/jfU
      Ye1USsg+nfKjBZRAgNrKEmowSCCepPxogcSJkxR+vEO7mCdz+ixmr4soy5QWf8TotAlnRygt
      PiA6PkFjc51Bp027WCA+PUO/XqNbr5I5fZbSwo/gumROn0UQ9/edvUcA79rqF/eI3pEaCBIe
      m0IJBFGDIXzRBJKmYe7kwfKnsvTrNTIXPsS1bURFRtb94DgIkgiCSOb8FVxcEvNnERWF8Pj0
      C37qK+C6lB8uIEgikiyDILDxw7ek504jqSqSoiBrPoKpDK38Np1KGWdjjdy5C+Tv3ATAHPRY
      +eoPnPn3/5HVa1+ROnmK0sJ9/Ikk7VIBLRii36zjjycZtFv4wq8XAPNT9gig1RuwWXt31r0o
      ksjoiw87dAiiRCCT292WtKG1yOM2vKRqBHb88JGHf0LpJ346YmBvTS6J6hsoqEBy5iTV1SVa
      xTyyquILR4mOT9Fv1Cn8eBdV9yPKMrY5XE7i2jaOZWEZw0WJiqYz8eHHbN0ZenZKigICVFce
      EZ+cwbFtVD2AKMu4rvNLpXklvE6wxyvjjyeGbe7sCGa3Q6vTJnPqPURJolevkj1zDrPfR/Hp
      aMEQeiSKpGlUlh6Snhu6uCWmZ9DCEURJRpRlBEkkPjVDv9XEtSwCyRSObSNK8tDXc595pgAE
      IKSrmLZDz7AQBYGgT6EzMLEdF0GAoKbSNUwifo1q++CTJXi8fRSfvuezP/5khjh3dmh+9bQr
      9GPP0OyZc7v7HvuABpJPnKJ94ci+N3WexzMFENJVfjM7imk73For8v5Emu16m3bfYL3a4urM
      CK2+QbtnkIsFafcNFvI14gEfUb/GQr5GSFcJagquC0GfOszq3eohigLj8RC310tHtIXu8S7x
      3CaQ7bqYto1fU6h3+gwsm4BvWAXVOn1y0SDbtTbzusaPWxXOjSXJNzqMJcIMLJuPT47y/1x/
      yKdzY1Q7fTaqLd4bS7JYqKFIIh9MZbi+UnhrN+rx7uFXZc6l4691jecKYGBaREgzYcsAABR3
      SURBVHSNcqvLTDrKD6sFPj89wY9bFdYqTZaKdX57aoJ6t0+rbyCKAvO5OJVWF0WSuLtZptU3
      qHR6dAcmtU6P0XiQ90aTPCrUGHmHhls9Doa+ZbPZfj3LzWcKoG9YO8a2DhG/jwf5Kh/O5HiQ
      H/qFJoM6uViQm2sFJFHEcVzWyk3iQR2fIlNqdZE7w/HatXIT03YwLIe1chNdlYkHddYqzWf9
      aA+Pt8ozBWDYDtXOsGPb2jHE3XpqeHS92mK9utePpdDsUmj+PAHD06a4nkGux2Fh0OmgBQLv
      /jDofDKyx/fnMON5g746zUKeh19/yQf/y9+x/eM9uvUasdFx4uMTbN65idHroQWDRLIjaIEA
      W/fvMHXxyrsvgAflBrfyhz/5NMAnU+mDLsKRpbqxRnpmlkG7RatcYv6zzwFwHYduo0F27hTt
      SolWqYgkjwCwcv1bbzGcx9HHcRwahTy9RoPCwwVc236yOE8QcGyLUCpNq7I37ZRjWe9+DeDx
      7mMNBkx+cJlINkdx6SHxiUmWvvmKSG6E5OQ02bnTLF37Cj0UwR+NIakqoVQaVdePjwAUSeRC
      No4L3NyuYjoOM/EQcV0j3+6x/gsd9LPpKHd2bFPOZWLcLgybVHFdo9obPPc8j7eDquuo+nBW
      OjNzEoDQUzmIo7kRormRPeckd+KCj40ALuYS3MhXGVg2ALIokAnqfLU2tM8bjwQYjwR4WGly
      Jh1FEAR6pkXfsglrClfHUlR7A7JBHb8is93q4ldl4rrKeCTANxsluqZ9kLfo8QocGwHIkgCu
      y9+eGufL1SJd08KwHU7EQpyIh9hqdnGB0bCf5sCk2hvQ7JtMx0O0DYvrWxU+Gk9R7Rvc2q5w
      Oh1FkSRsx+H7rcq+PPyZoI58BLLZeLYoR5DFcpOPxtP0TXuYbNqy0WWJhF+j2TeI6iqO62I5
      LoLg4jguLi6W7aDJIlfHUtR7Bpos4cLwOBwGtr1bq7wuhXaPu0fAFuWT8dSLDzoiHBsBFDt9
      ip38nn1/XH3xWqRar/rM/T+1UjxOjIYD6MrB1wLpgP5mlkJ4HF2sXncYHfYGKXV7LNUPfimL
      LL1+qOfhb3AeQ4x2k5Xf/wPrX/wTRqdFe3uDtX/9xz2B54UfruHYNv16Fce2cB2HfqNGZeEu
      tmlgtFu4rksnv4VtmvQbtTcSUXXU8WqAw4jrEpmcwTYG2IMB3VIefyqLPegj7wSh2KaB1evQ
      q5ZorDxCEATUSBTXssh//ydk3U9odILG2hKiotCrlugUtkjMvXfAN/dsXNdFOAC3Oa8GOIS4
      QHXxHq2NFbRwhG6pyKDVoLm+vOe41sYaZqeD0Wniui7RqVkEWaZXLYPr4lhD+/fm2jL2YIDR
      3F83t061zNLXX7J5+waVlSWWvv6C/IP7AFTXVlj9/hoAP/7TP9Iu/9zE62nWrn+7r2V7Wbwa
      4BAiKSq5yx+D69JYXSJ9/jJ6IkVj9RGu61C6e4NAJoekanSKefREGtUfpHjre7RQBHXuPYx2
      CzUQAgG0SBSj00ZP7O/oTbdWQ9E0MvNnKC8/JJzJ4Y8NA1QsY0CvUcc2DXrNBuagz8atH+hW
      KyRPzLJx8zqZU2dobG2SnJ6h16izfO0r9EiU7PyZfS3nL+EJ4BAi+/Tdpo4/ld3dH52aBSB9
      9uLuvmBubPdzeGKv9Ulra51gdvTNWKIAyROzdColFv/wT0RHJ7CMwa77A0AonWH1u29InpjB
      Nk16jTr9dguz32P8g8uEUhm6lQqDdgs9EmX8wiU2b994I2V9Hp4A3mFCIy9OEPE6tEoFqqsr
      6JEYis+34+w2dGZTfDqhdJaVa18Rn5zeNZ1S/QEU3Y/q92NbJqIs4zgOWnAYIagFXt6+0SfL
      zMbCr3UPngA8XplwOks4/aSGSk7P7H6OjU0AcPov/mZ3X3T0SW31mMnLV/dsp0+eeumf37cs
      Vhqv52PldYI9jjWeADyONZ4APN4JLMNg895tAPKLP7L83Te7ibLr+S2Wvv2a0vKjPefUtjb2
      9gFGk2Guzv+8nXZUkUXRM986JhQePqBVKmJbFr1Gg6mLV1j48g/Mp9I0C3kmzl/k0TdfoQWC
      lJYfER0Z5cEf/nmvALbqHa69Q2ZViiRy+dzUQRfD4w3jui7l5SUQoLaxTq/R4PY//jcys3PA
      MPRx9fq3qLqO6ziIokjx0SKJSS9Bhsc7gNnvER+f4Nxf/Qfq+U30SISpS1doFgvDB16Wmbx0
      henLV6msreALhxEEAUlW9mcYVBZFLMdbaOVxMMiaj5Ez5xAliamLHw4fbkVBj0RBEBg9M0yR
      BDB58QpGr0vqxCyiKD5bAAFN4W/OTvF/fr/I1RNZBqaNT5ERBFjI16h0+vz5qXEGlk2l3UdX
      Je5tPQk3FAUBx3WHeUt2PieDOuV27639UjyOD6Iowo73k/yUhbqy40wtKU/8liRZRg89mTx7
      pgBEQUAUBPyqTEBVcByXsK7ysFCnsuMY1+6bXFvJ8+nJUWzH4YOJNLIo7ERUDR3lppMRGt0B
      G7U2yZAnAI/Dx3ObQAv5Gh+dyFFsdtFVmf95b42ZVITzYylubjxZ2ScAA9Pm9mZ5RwQif3q0
      xSezIxSaXe5tVZiIh97GvTyTM5kYuno0JrxDPs8Z7m3zzCfDsh1K7R5hv8pKpUkuEuDiZBpV
      klgsDi1BFFnkoxM5VitNZFHEcV1q3T648PHsCI9KDYKaguU4tPom5gH1ERYqTW4Xj4Yz3NWx
      5IsP8thXnimAnmmxWW+zWR+us1h8Rvzrlw9/ntJysVB/5vHrtdbPjvX4OZmAjpR5+0Ehvxbt
      iGbffBZHo21wQGiSyMB+ezVXodPjzhGoreL+zEEXYd84VgL4yxMj3CpUKXT66LLEvzs5xv91
      f5VLuQS267LZ7FDqDtBlib5lczYd426pTt+ykQQBUWA3bM94i8I4bCiiiO8QeAPJ++D6fWwE
      oEki+XaP8UiAQqePKAgYtkNYU1AlEdNxGI8ESAd0JFFgrdEhG9SRRZHtdpePxlL8ab2EKomM
      hPx8v10+tk5wPlkmrGoHXYx9aYodGwFMx0KENYWoT0XcaWavNtqcz8TJt3tEdkZglust3s/E
      Sega2+0uS7UWuaCfe8U6m60On09lUSUJnyy9MQE4tk31wR1ERSU2ewqr16Hy4x180TiRqVma
      68tEJmdefKE3RKXbZ6V+8P268D7kUzg2AjBthy/Xi+R2vD1N26HU6eOTJdabHWxXx3EhqA5H
      rrqmhe26GLZDc7CT5NmFjmHRFx0G1ptrArW31pF1/264o9FqEhqdwOr3aK4vU3lwh165ROLM
      +9SXFsBx0KJxAtkRire+Jzo1i+u6tDZXh3HBoojZbqGGI7thlR5Djo0AHu2MRG0/NRm33e7t
      bi89lQKq2Nmb97hrPkn99M3mXo/5N0FodJzyvVsUb31H7vInu/sD6Ry1pQcEc+ME0lkG9Qqu
      bdPOb6BFY1R+vI3V69BcXyY2M78TVP8IfypD6twlSre/f+NlP2ocGwEcJYxWE9mnM2jWceyh
      tUlrc43m+gqxmXlam6sAmN0OVr+LpKjo8RTb337F2Cd/TvneDbqlArJPRxBFQBh23vfZd6e2
      vkJjYw0tFMEa9MmdvUDxwV2SM/OY/R75ezfRQmFy712gub1JMJXGdV169RpqIIg9GOBPJGls
      rhNMZ3Edm36jTig7Qr9Rw+h2CedGn+sX5JMlLyb4XUQNR0EUCY1PISkq/mRm1ylCVDXUUBhB
      FNGTGQKZUURFQVI1Zv7d3yFpGqPR3yGpGma7SfTEPMJOpyd5+v19Laes+bBNk1A6i+u6NLbW
      MXtd1EAAx7FwLJtgKoNjmVjGgPXvvkaQZWLjk6x/9zVaKESnWsa1bXyRCNt3bhDJjVFZWqT8
      8AGR0QlkzUcg8ewJwv1Ik+othz6ECIKAFoog7yzmEiQJLRJD0nwIgoAoKwiihChJqMEQ8s5+
      2acjCOLuthqKIKkqojzsLD7+f78IJFJMf/o5+Xu3CCRTNDbXUfxDVwc1EGT2t39BdfkR5UcL
      uLaF4zioup9gKksok0X1B4hNTCGIArXVZWRVI5QbxWi3Caaz+OMJHMt8QSleD68G8HhlerUq
      1dUlIqPjCKJIIJEkOjYJgNHpUFq4hz+eIJwbpbL0kGAqgx6LIUoSwdRwMs3sdjF7PSKj4xjd
      DoV7txk59wHtchEtGHotu8RBp4Pq9z/3Gkav5wnA49UJJFMEkk/c5jKnz+1+9oXCjF/6aHfb
      fymx59xQJrfnOo9JTA9HqSIjLx+a6zoOt/77/0skk2Ps3AUkRaHXbLB+6wdOfPgxsqJgGQaK
      z8fm3dv0mg0GnTaR3IjXBPJ4N3AsG4RhZ79VLlJYfIA1GFBYfIDR77H87dcAuK7DyJmzSKo6
      jBY74HJ7eOwLsbFxpi5eQVIUWsUiuVNnCOz4lD6N67oUHy0yfu48kix7TSCPdwBBIJR8kmQ8
      c3Ke5e++QRAEUidmWb/1A+JOVFgwkSScyiApCuZg4AnA4+gjCAKJicndbVlVOfnxZ7vbsx99
      uvs59lTfIpr1+gAexxxPAB7HGk8AHseaPX2AkWiQD6eyzzv2yCHtQxZBj3ebvdaIzS7fblYO
      qiz7jiKJXI0FD7oYHoeYd34UKKwpxPWDj156GZR9CPHz+HW88wLwKzKhI+ILJB1AmtDjznOf
      jPFYEMOyqfUGzCQjlNs9Su0+qjR8SymSiOOCi4tlO1jO0Ijcr8r0TRvHPRzG5Pl2j9XG6y2Z
      fVucz8Y5n/n57OVhQzsEAfH7xTMFMBELEtE16r0B2ZAfy3Y4nY3TXSsiCAJz6SiKJGLYDpIo
      sFCoczIdYbPe4epUhnKnz/3tKjOpCHe3q6RDOgFVYbFYZzYdRRTgzlb1bd/roeeo2KJ8Mr6/
      6VYPkmcKoNDqMZsaPuTldo+5TBTDcjBtB8N20FWZwY5ViCKKDCwb14WPprOs11o8KNQ5nY3R
      6ptoskQqqFNu9zmVjaHuRPI/9hF9m0iCgL1TM2mSiOW4u9uyKOw6RfwaIjuB2Y3Bm123fpjI
      Bv3I4sE315J+32sHxDxTAKok8qflPFcm0zR6Bg8KdaYT4d1mjSwKdGwHRRJxcZnPRNlqdEgE
      fdiOiyqJLBTqxAM+TmdjuO6wyWQ7Li3LwK/IO2u0364A/np2lNvFGs2ByaVcAsO2uVdqUOkN
      +O1klnJ3aJeyUGnSMS2CqowqSQRVmY1ml5lYiI1mB0kUiPrU4b4d39Pr28enRqv2+6w0D94V
      IubX3kxIZM+0OTsSZ6ncoNwZ+n1uNzoENZV6b8D9fI32wEQWRWRJoN03OZ2Nc2uzQrXT53Q2
      xmq1Rcyv8d1qkWRQJ6DKLBTqaIqEJApvPZ+AX5F4VGuRCfhoDkyWai3Wmx3OZ+JUegMGtk19
      YBLzqcwnItwsVDmbjuFXJO6VGszEQqiSiCyJfJCNs93qkQvqb6Ssrc01tGgcXBej1SCQHaV4
      81twIXH63G4S7cqPt4nNntr3SK+jwn6kSX22Oa7jcGPjWe4HwwDtYuvnNuc3n3JLuLUzl3B9
      fegivfVUJ9QcHIyj2kwshK7IJP0ayzuep3Fdo208sTw5GQ9xM19jPBJAEgUE4Ga+xrlMjOvb
      FTIBnZPxMOmAj55pU+8bb6SsvmicxuojEATC41O4jkO/VmH0N78DATa+/P0wPlhRKd6+jiCI
      CLKEHk3Qq5YQJJlgbozm2hJqMIxtDLANA1nXScyffSNlPqocm4HnSm/Atc0yf1ov4biQCeok
      /RoLlSYwtE35p6Vtoj6VQqfHmVSU7XaPhF+j0h0gCgIhTWat0ebbzQq269AxTbZaPbae8UJ4
      HWR/AKvfw+p1UQIhREkid+VTCje+oXLvFq7jYLRbgEv63EUEUUQQxN2H3zFNBo0aCCLdUh7b
      NEifu4hj7n8/pV0ukf/xLo49NAnrNYbGyJ1qhUF72EyqbazhWNavuq7rutS3NqlvbeC+wRHF
      ozFAvg88fkhrO2/tr5/KcQDD4VKAxepQEJvNLj/lcTu/zIDVxnBf19z/pB+CICDr/t0IJ8ey
      qC7cRRAlQhNT1BbvDwPeNQ0QkHw+AukRKvdvou84SNiGgSAwrCkkmeKd68Nqbh9pFvLUtzZI
      z85j9rpowRCbd24y+8lvKS8/wnUdJj64zL3/7x+4+L/+Z6qryyh+P1ogSCCeoF0qIsoy1mBA
      IJGk32zgui7tcomRM+doFrbBdYjkRn+xHK7jUFx6iD8Sxez3KTxaQFY1snPzhJLpnYR402zd
      u83YuQt7YoSPjQCOGk9bmIiyTPbiU/G1ifSeYxNz7wEw+pvPn3mtxspDuuUiodGJfS1js7BN
      6sRJCgv3CWeyaMEniVAkWcYyBlRWV0hOzYDrIogiW7dvMv+7v+TW3/9XTv/F35C/fxdRlug3
      G5j9Pr1GndjEJOWf5PR9cVmGYpz9+DNapSITH1xk8cs/Evo0TadWpVOtkJw6QXV9jcraCqnp
      E6zfunF8mkDHmcjULLnLH+9aLe4XoXSG8tIi8YkpOtUKRm9vrRnJjVJ4cA9/LE6nWgFBwBcO
      Y3Q7+KNx+q0mCKD4dGob60RGRhl02tiGgRb6dVmFBp02jm0jCMNHWhDEHVOwoddqt9lAUhTa
      lRKiJNIo5NEjUa8G8Hh1wpkcAgLNwjbZ+TMUFn9k6spvAEiemEUNBJE1H4rPh+LTKT1aYOTs
      eSRZYf53f0m3ViV76j1EUSSYSBFMpzn5Z/+G2sYqoVQazR946YHy+PgkgVic0tJDWpUSD//0
      BcmpaYDdtKnL311DFEUEUULVdRSfjuA+1cP437+6x3/54u6+/6IOCkUSuXp24kilSDoKM8G/
      m86wVG8edDE4nYy+9jCo1wTyONZ4AvA41ngC8DjWeALwONZ4AvA41ngC8DjWeALwONZ4AvA4
      1ngC8DjWeALwONb8xBkuwIeT6ecde+SQJZG5RBjliDjEzcRCR8IaZTwcPBQxwaOhAPJrein9
      /0+cadz8lofqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='MOST RUNS' width='192'>
      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
      oTQJQCjtfwHIIvy4UWqPjQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='MOST SIXES' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MOST WICKETS' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Match Analysis' width='192'>
      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
      orC4vpQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Player Analysis' width='192'>
      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
      4ncenN1PAyYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Prac5_1' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='RUNS &gt;= 1K' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      ENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoC
      ENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoC
      ENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoC
      ENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoC
      ENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoC
      ENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoC
      ENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoC
      ENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoC
      ENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAx7d/mGgflTb+ZKAAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TOSS/WINNER' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Title_Winner' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAGZUlEQVR4nO3ZX2hbbQHH8V/aLtuatGvSvmmXvH1DZ+O2COvsFLKO2P2RgTBer7zfhd55
      I3rpxbzQS4c3giCi4J0XY8h4cW6DDanghE1DKSu6P2lLmy59t5j0T3qSHK9W7Qp7QdjG6+/7
      ucrhPDnPk5DvyTmcSBiGoQBTXe97AcD7RACwRgCwRgCwRgCwRgCw1vPqRaPRULvdfp9rAd65
      CM8B4IxLIFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFjbE0DQ3FSlsqpWJ1Rre0ur1TV1wlBh2FG93pAktVvbqlRWFbQ773zBeHc6nY6eP3+uer2u
      MAzf2jxbW1vqdDoKgkCtVmvP/jAMtbi4+JnHCYJAKysrbxyzsLCwa7vn9QG//91vtfzpS8U+
      nNTGP/6sjU5bX5z6ptrlv+ovTz7VT374ff3651e1vX9AX7/0LeUyyc9cGD6fZmZmFIvFFIah
      JiYm1NW1+3wZhqEikcjOdqPRUKvV0sDAwJ59r3u1PxKJ6M6dO5qenla5XNb+/fs1Nja2Z2yp
      VFImk3njcZvNpubn55VKpXbG/Pf4V8cZHR3dec+eAC5842P96c4fdHCkT39byegH3/lYV3/x
      ib733W/r2c+uqtNc19zjZxocDvWvel0SAfy/isfjajQayuVyWlhY0Pr6uhqNhoaGhnTr1i1l
      s1klk0k9ffpUg4ODymQykqQbN24oFovp3Llzun37tqLRqPL5vO7evaujR4+q0WhobW1NZ8+e
      VTqd3jVnEAS6du2aisWiZmdn9fLlSyUSCW1tbenevXsKgkCRSETr6+vq7e3VxMSEbt68qcXF
      RV2+fFnz8/Oq1WoaHx/X2tqaHjx4oMnJSTWbTUlStVrdNd9rl0Bt/fTHP9Ja64D6+/oVvnim
      X/3yN0qPH9G9P36iubk5/f2fKxpNp/Vhql9z80/f2peP9298fFxTU1O6f/++Njc31el0dn5I
      R44cUbFY1ObmpuLxuM6fP69oNCpJunjxovr7+zU7O6vl5WXFYjEFQaB0Oq0zZ86oUCjo+PHj
      KpVKe+aMRqMaGRnR9evXVSgUFIlENDU1pWg0qsePH6u7u1v79u1TT0+PLly4oFqtpmw2q2PH
      jmljY0O5XE6nT59WpVLR8vKyLl26pBcvXqhWq2l6eloDAwO75uu+cuXKlf9shvoo+wUNDiY1
      +EFK584W1ffBRyp+9UvqtNs6OfkVDaWGNV2cUm9iRF8rfFldb/ibw+dbpVLRw4cPNTIyolwu
      p0ePHikMQ42Njam3t1eJREI9PT1KJBJKJpOKRCI6ePCglpaW1Gw2derUKR06dEjb29vKZrOK
      x+NKJBJaWlrS6uqq8vm8+vr61NXVpWQyqe7ubsViMQ0PD6tcLuvkyZMKgkBPnjxRJpPRiRMn
      VK1WNTw8rFQqpWQyqQMHDqhcLisWiymbzWplZUXValWFQkFBEKheryuTyWh0dFSlUklDQ0M6
      fPjwzmeMhG/z7gb4H8zMzCifz+85W78NBABrPAeANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKAtX8DFt6jpXFoqNgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='VIRAT RUNS' width='192'>
      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
      uUE+zX73KCoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='WINNER/TEAM' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAc3klEQVR4nO3daWwk55nY8X9V9X2TzWvI4TEzPDTDOWRJllbSys7KMiDba0Mrx9mFkwXy
      IQskgG0gQAIEiIH48wYBEiBAHATw5kvWSGI48SaWpdVakm0pOua+eN83m32w76OONx/I4WjM
      bmnIbjaPfn/AQGyq6umnm/V0VVc99b6KEEIgSQ1KPewEJOkwyQKQGposAKmhyQKQGposAKmh
      yQKQGtqBFoBlWQcZXpKqdqAFIC8xSEedPASSGposAKmhyQKQGposAKmhyQKQGposAKmhyQKQ
      GposAKmh2fa6ghCC6Ymb5IwwFwfbGBufIZ1JM/DEIBPj0yiqytNPP4VNVQ4iX0mqqT0XgKIo
      9A8NMTYSQ7W7aQq6SWay5OKrdA9exozOkMzrhFwapmnKq8HSkbbnAvg0IQQdp89QymXJlgSO
      YhHLNHFoKpqmAez8V5KOon0cAulMjs6QzuhEN5ysR6IomoOBgXPMTo6hOAP4nFXVlSTVjXKQ
      N8Wbpin3ANKRJs8CSQ1NFoDU0GQBSA1NFoDU0GQBSA1NFoDU0GQBSA1tX71AMxO3MbQ2BnpD
      jIzNUNJLDAwNMjU2DnYXVy4NI1uBpONgzxfCthbPMT4aY+h8NwiL+7du4vE5sbcMYMVmCHQN
      ENzuBVJVuZORjq59NcPtECa3rl+ne/AiWmaZtGUhhEBRtpZ78E+Sjqp99gJNE43laYkopHWV
      yPIivWd62ByfQHV46HHZd4pA7gGko0z2AkkNTX48Sw1NFoDU0GQBSA1NFoDU0GQBSA1NFoDU
      0GQBSA1tzwUghCCXThBLZBBCkNmMEk/lEUKwvDDDSiSGHAhFOi72tQfYTG2wvhIDYZLcjLAW
      SZGLL5EyvWyuLZDXP39qJCEEq6urFItFhBB8/PHHJJNJhBB88sknrKys7Cc1SdqTffUCdXZ1
      kUrGUFQbXZ0dpBZ1sukUweYBTDNBrqjjVG2fOTBWMpnk7bff5pVXXmFsbIwzZ87wxhtv0N7e
      ztDQEC6XC8Mwqn6BkvRZ9tELZJHcTJLOpCgWi+SSSTJpg+7eFiYX51BKWc6fcaBpW01wlVoh
      wuEwV65cQdM0crkcp0+fxuVysbCwgK7r5PN5XnvttepenSR9jn0cAgmKBYXT3WFMy6Joujjd
      7sPma6G/u5X+J4Zxap/fAWqaJqVSiWKxSCgUYn5+HtM06ezsZHh4mFKptI+XI0l7c2jNcNFo
      lJGREVRV5fnnn+f27dsMDAzg8/m4ceMGAwMDBAKBg0pNkgDZDSo1uLoN4vmXf/0BUyvxqmL8
      8+/8Aed7W2uUkSTVsQBiqTzr8WxVMUq6WaNsJGmLvBIsNTRZAFJDkwUgNbR9FYBplMjliwCk
      N+NsprKAIJmIksrka5mfJB2ofQ2MtTA3RqYQ5Py5IBNz6zjIYXR1shTJQnGO85efwmmTOxfp
      6NtXL9CZ/nOMjcTIJ6OETnUTLKyxuLRI+9knMTcM0gUdm/vRXqBaXG4wTUv2B0k1VdVpUJc/
      RHYxhrCydLS3sxmLI3J5Wpx2NG1rD/DgQlgtBsjSNBWbTc4/JtXOPgfGmsewLLKijY5ADl3r
      oqMtDEvzKJ19uOzy8Ec6HvZxCGRn8MKFh7/w9ez8eKq7rxY5SVLdyI9qqaHJApAamiwAqaF9
      ZgFksrl65SFJh6JiAeiGwU/++ueMjE/XMx9JqquyZ4Hy+QL/4b/8N3K5PLq88CSdYGULoKQb
      PP/MFUBwZXiozilJUv2ULYBgwMeXX3jmc1c2S1nu3p9EqDYuXuhn5N4o2F1cGj4vJ8mTjoWK
      F8Ii8+NknR2c6QhWXDkdXSbQ2Y89OcfU5DhN3UNY8VlSeZ2AS0MIgWU9GCSr+l4g65F4klS9
      ymeBrBI/+c//iV+/8w7zq7GyiwQ7ziKSy6zFkqiKut3vo8ihEaVjo+IeINh+hq+//BxCc2N3
      2MsuI4SFrhu4Q62c6+/h3t0RVIebHrcdVdnqAH04SV71x0SqnHSvIa2vr7O+vs6lS5dQFIWZ
      mRnOnDlTkwbLilvTysRVbo3Ns7o8zfu3y58KVTUHTwwPc/H8IDa7iyefeorLF+Xxv1Rb77zz
      Dqqqcv36debm5vjpT3+KadZmgISKBRBq6SSXWOfGnUmG+jpr8mSStFdCCEqlEteuXaOtrY17
      9+5x6dKlmsWveAgU6ujlyqULlGwBzve21ewJJWkvTNPEbrfz0ksvcf36dUzTZGRkhOHhYc6d
      O1d1/IoFMH711ySd3QzZF/jlB3f5ky9drvrJJGmvbDYbL7zwAktLS3zzm99E0zReeuklWlpa
      ahO/3C/nJ27z/+7MEElPE3MZDP3hcE2eTJL2o6+vj76+vp3HbW21OyIpWwC9g1f4h53dvPvb
      DzEFnG6Rg9RKB2/0w39LdPmjqmIMffEHtPV++bGXr3gItDDyCTlXJ3/vyV7cXn9VSUnS48hn
      VsnEJ6uKoZfSe1q+4lkgp8vNjQ9+zS9+8QumFiNVJSVJR1XFPYBA0NzaQW9vJwGfu/wylsH4
      2Bim4mBo4CxTE6MoDj+D5/qowTUKSTpwFfcA3pYezrR7SSaTFEt62WX0bJySFsStFFicn8TZ
      3IfNyJAuyhZq6XiouAdw+0IMDg6yNnGDmdUkgz3tu5YRio1iZhkDi5AfnE4HpqZhmBamacqB
      saQ9EVYNGib3uI1ULIBMYoPr16+TT8UYPlehF8gysCxQhEGgpY+ZyTsomp3Oc3Y09dFJ8uTA
      WNLnUWrQQ6PucRspu6SlFyng4stf3jqdFAqXP+/qCrTx3Bcf/r+WZ8N7yVWSDl3Z7wCWUWB2
      dpaROzf48X/899yYXK53XpJUF2X3AIqqkVhfoaC4+N6//CEd4aZ65yVJdVF+D1DMUVScBH0u
      bl/7mPm18jfESNJxV3YPYA+08Wf/4Nv1zkWS6q7i1+WN+fv891++T8Dn5qkXv8LFc131zEuS
      6qJsARh6ic2NVU5feI5XnunH4XTVOy9Jqouy3wHWF6e5M5/EjE3z1ltvMbsivwNIJ1PZPUDX
      2fNcji2yaBvkgmuFTxY3GOrdfSXY1IvEEklApSncTCmXBpsLr9t50HmfaNFoFCEENpuNWCyG
      3W6nt7f3sNM6kSr2ArWdPsPVv/tf/I83P+Rc9+6N/wFFUZiZHCWZiDA+u8L4/buUTDkwyn4t
      LS1x8+ZN0umttl5FUXjrrbcOOauTq+KX4NWleV759p/TpyzzyUqE4d7WXctodictTX6W/GGs
      TIyO3gHMjRlS+RJNcpK8fbl9+za6rnPt2jVee+011tfXefrpp0/864Yj1AtUSq3zP3/xJrrn
      Dp3Nfr7x9/+sYoCZiXHODAxjz62ylNhEFAqEHbadHiDZC7Q3XV1dOJ1OxsfHEUJw7949Xn/9
      9YYYD+nI9AI5Au38qx/+iGvXblI0TIRRvh0aBKH20wRdNnCdxpuZQWk9jduh7Sd3Cbh8+TLX
      rl1jaGgITdN47rnnGmLjPywVS2Xqxnt8dC9Kf6udj+4H6eloLrOUQjgc3vn5dG/1w1Q0OlVV
      efbZZ3ced3d3H2I2J1/FAjh76Xm+dSrNjQ/f5w8uyw275koZ+OAvq4uhOeBLP6xNPg2qbAEU
      Nqb54b/7K4bPD+Jy2MlkstAqR4aQTp6yB5fO5h7+6T/+UzpamnE6nTjs5W+IkaTjrnw3qKmz
      sLhMJpdHszvxeRz1zkuS6qJsARjZGPenFrHZ7WAZpLOFeuclSXVR9juAs6mb7/+zv6h3LpJU
      d2X3ADfff5O/+Zv/za3Z+OcGyKbiLCytYglBLLJCPJmpeZKSdFDKFkD/E8Pcv/o+P//pf+XH
      P/4xtyYWy65slrJMzq3T0uQnl1hjJaGzNDNOwZDzeEnHQ9lDIH9LN//iX/8b3n7rbQqKh8EK
      E2TkE6vEswVG7o8Q8jsId17A3MiTKejYZS/QZzPNyhdhHpMAzJPyfnCEeoEApm/+lmJogEvu
      ZX75wV2+80dP7lrGFWgh5LNo9xgUFCeJjQ1ENker046mbe1cZC9QBVb17SIKnJz3g8PpBarY
      ZNI79CRLt9/jbz+e5IsXzpZdxuYKcrYziOVu4eyZs7R6LNp7BnDaZe+KdDxULBVXUyff+/73
      PnttRSEUbie0/bCtU/atSMdL2Y9qIQT3PvwVn0xG2Ji6zi8/uFfvvCSpLsruAfR0hP/71m8p
      eafoCgf4xuvfqXdeklQXZfcAjkA73//BD7gy2EN7W5hsNlvvvCSpLirfEjlzFyvQw0tXevH4
      5BRJ0slU8XRNoKWLxfsf8cYbbzC9FK1nTpJUN5XPV6p2moI+0okNMoVKt0RK0vFW8RCouaOH
      r389zPr4x4xtbAJyXBrp5KlYAOlEhI+v30O1OXj5haGyywjL4OrVq/hDLZzt7eL+/VEUu4sr
      l4apwUU9STpwFQvAocHM9CyaKui/9AxN/t3jg1pmkWLBpNnhJBVZoPXMMFZshmS+RNBlw7I+
      3RRXgz4Pa2vusRPBsqi2GUIA1kl5P6hNv5jY4zZSsQBWZkbpuPA8F1yr3J1cZKBz9yQZqubm
      D7/0IstTo8QKBh6PhRACRVEe+VcrtY53qGr0Ok7M+8FWb1P1Qfa2jZQtACEE/U//EUt/9zbT
      KSdf++pw2ZXNYpaxmQVMUzA0NMjE6Biq00OPy46ibP1xHo5pU/3LezTeMVeDDVcBlJPyfkBt
      3pM9biNlC6CYmOdn703zj17/Y1bHPuLXV8f44xd2F4HN7efi8MPfX35yd8eoJB1lZUtFc3pZ
      nr7HwtIyn1y7RSggL4RJJ1PZArB7W/gnf/4n3L15nd6nv8qLwz31zkuS6qLCl2CFcEcP3/im
      3PClk+0EfYOSpL2TBSA1NFkAUkOTBSA1tKoLwCrl+OjaLSxTZ+TuHUYmpqnBFW1JqouqxtQQ
      QjA5NY2qWiTX5/C0n8VKzJEqGgSc2s4ytVTreIep2uueApCfNrvtZRupqgAysSXWNkvouTgp
      nw1bqx1TVTFNC8tSsCyr5gNjnZhmuBoMjLUV5oS8H9RmG9lrw2RVfwNPqIOnLzcxMTlO++k+
      7t2/i2JzcNpjR9vu65ADY1UgB8bapRbbiKrWYJK8x6XZ7Ph8dp76wtMAPPPFZ6oJJ0l1J88C
      SQ1NFoDU0GQB7EM+n+c3v/kNk5OTWJbF5OQkpVLpsNOS9kEWwD4YhsGzzz7L9evXicfjXL9+
      nUxGTgxyHMkC2Aefz8dHH31EsVikubmZ/v7+w05J2idZAPuwurpKf38/LpeLTCZDIpEgFoud
      qIt0jUIWwD60tLSQTCZ5+eWXsSyL1tZWCoWCLIBjqOpWiFhkDewews0BUvEoOHwEfe5a5VdV
      bjMzM3i9XlRVZXl5GYfDwYULF6q+4OJwOLh48eLO4yflvdDHVnUFYBaxVAfRhUlKxQ4iiSIU
      5jl/+SmctsPduUSjUQzD4L333uPVV1+lq6uLX/3qV1y4cOGxY4hCkuxffaO6RGxOfH/x6+pi
      SAemqgJQbS7M/DJrm3mCgSRtXQOYGzrpgo7tkCfJa2pqYmVlBY/Hg9frJRKJMDw8vKc+EWEY
      iMLmftPdojnL5ywnydvlSE2S9zj0Qo5gWw9DepG8sKPHYohcnpYjMEne3NwcsViMb33rWwgh
      uHPnDt/+9rf3lIfQqu/XQanQryN7gXY5UpPkPQ7NbmNtcRbd2cTZs/2EHEWaO8/gOgKT5Llc
      LnRd591330XXdV588cUTNYqaVBvVHQJpDs4ODO48PnW6r9p8aqajo4OOjo6dx6dOnTrEbKSj
      6tjvP3XT4m8nElXFUBWFrz3RXKOMpOPk2BeAAKLZ6r4IyiOjxnX4B+uSdIhkAUgNTRaA1NBk
      AUgNrcovwWJ75AcFVVMQpgUnaRIL6cSrqgBMPc/4xBy5TIqes2eZmVlAUQRPPf0Mdk2eWpGO
      vupGhbB76D/Xw+07YxSSEbqHLmNFp0kVSoRc9ekFMs3atCCX6x8RtRhzR5SPLXuBdjt2vUCW
      UeDW7TGuPPUFiokFNrI5hG7QZLPt9AAddC+QpVgVlt6bcv0jsheovo5dL5BVKqA5HExPTmIP
      dUF2FdXbjNdZgw1Hkuqgqo8PmyfE018I7Tw+N3i+6oSkgyOEIJFI0NzcTCqVYn19nb6+Pux2
      +2Gndmjk6ZoGMjs7y89+9jMAIpEIlmXx5ptvHnJWh0sWQAM5e/YsfX19wNZ9zR9++CGdnZ2H
      m9QhkwXQoHRd57vf/S6zs7OHncqhkgXQQMbHxymVSjsDev3ud7/j5ZdfrknsUqnEnTt3AIjH
      47z77rvk8/maxD5IJ+ccmvS5hoaGGBoaeuRxraytrTE6OsqlS5d45513+MpXvsJ7773H1772
      tZo9x0GQBXAC3V6+wf+59/OqYlzouMTrV/70sZfv6elhbGwM2Lo2EQqFKBaLVeVQD7IATqDN
      /CYj6/eqihFwBfe0fCwWY319nUgkgqZp3Lx5k3A4XFUO9VDVdwAhLJZmRlmKpBCWwdj9u4xN
      zcppqxqQaZo899xz6LrOq6++SnNzMy+++OJhp/W5qtsDCEFzOMR8NE/SjOAM92FtzpMuGgRc
      cufSSNra2mhra9t5/OB061FX1VaqqBoetxPQMXQdh9+BqWkY25PZyWY4DqUZzrKq74+yhCib
      98jmbd5dfaOq2IPBYb7a+a1dvz+WzXATY9MsxQxOfWGImYm7KJqNznN2NLU+k+TJZrjdsWtx
      P4aqKGVjKyoYQq8qtoVZIXb9m+GqHhrxictf5Intx88+K4cWkY4XeSFMamjym6rUEISRQ5Q5
      dJMFIDWE/MJPMJK3dv1eHgJJDU0WgNTQZAFIDU0WgNTQalYAQljMz0yysBJBtgJJx0XNCiAT
      XaRoayIXXyFXqkELgSTVgSJqNLltZO4+RtMA5sYM7o4zNLlt6Lq+PXSiYGkjRVHfalt40Kui
      qgqKomCaW48VBVRVw7LMnY5STVMRQmBZgq5WPz6385EYoJAomDvPs7WOtr3Og+dRH1lHUVRU
      VdmZME9RFNr8zkdiqKoKlomxfn9nGUVRHnleVVW3Hz9cRwixE0NRVBRVhZYndmI8WEdYJmRW
      0VQNS/ze8z6Sq4KqqJjWdq48eI+srWf1d+5aJ1vKsJGNYFkPPojK5apt5/rwPdl6fVvr+JwB
      TgU7H5lUUNM0sqUMm6X4w1wFWKJSrp96vdvPq6kqTs1NwBbaibG1DZjkUosYpRSqqm5vEw//
      npb1MNey75GqYpomnsBp7M7Q9joP31f0KMLMYm33G6nbf8+aFUApE+PO5CqKVeTSk0/h0LZe
      lFaLfhpJOiA1KwAQFHI50By4nFvjzMgCkI66GhbAbqZpypGipSPtQFshPn0cXmuWZR1YcR1U
      7OOY80mPfaB7ACHEgczN+/BL5vGLfVBzFcvY+4t9oMcniqIghMDQdSxLkMmk9xXn9/cinz4j
      o2/HrpUHsQ1dxzDM37umIcikM2TSGR5ktHM2BrAsE90wKt79pigKYifnR1+TpefJFgzSn3qP
      HixjWebWOp/xWfXgD22Zu3N4vD1x5WW2YosDi/3wdVqPfcQghIW1fcbNssrH//3Y5Wg/+tGP
      fvRYz7hPkyN3iG6mUTQHS3OT6KaKP+AjsbFGSWhgGmxuxtCFhjB1EtEI2FxYpSxLaxsEAn6i
      0Sher3dX7KWpOyxsZFiYnaOt8xTJaISSUHHaNVaXF1EdbvKpOKmcjtBzrMeSBPwe0slNIvEk
      AZ+34ifEh++/RzaXIVNU8Ls1VtZj+H0+ZqfnyKST6EYJxeYivRnH5fWimAWuXr1JoVjC5/Oz
      sryIzenBYX/0JMDaxCiz8STLc3MEWzvIJ2PkSgJ7Mc5i1k5seZqibuH3+4lGN/B6vYzcu00q
      nWF2bpH2jnbWlhawNCcux6OD2pYyMW7enyKXTePw+DENHUWY6KYgGovhUGF5dR2fP0AxnyOV
      ymDpedbjKVw2k3fffZ9guHX7NtdHFdMxbo3MkMukcHr8mIaBYhkYliAajWNXLZZXN/D5/Tux
      zVKOjXgap/bZscdHx/HYLSYXoyiWjk1VSW7GKZoKboeNlaUFDMWGahZZXosSCPgx82nujs9j
      ZDYoak5mxqfo6GgrG9ttM5lajhP02FjbSOD3ecmmEsRSuYNvhcgZgvNPDNHaHCCTzWHTE8zO
      zbIYLzE/Oc7CzCRFxcHC7DTTE6OoLh8zM1OUSiVEaZPRyRVisXjZ2Kpm58y5QYZ7g0xOz7G6
      WWB6aoL5yTE0dwAzF2N2NYXLYaNU0sltzDG7keD+vRnU9BqRzxi4LNx+iuHhy2Q3I9y/P4pL
      1ZleXAfAKObRXB7mZqaJb+eWXJ6mY/ALDA70Y8MAReHu3XJDk9g4MzDA8GA3y3NTTC1tsjY/
      SWH7dHsmk8Wl5FiMpInFY1uv0+5icHCI3jYvG5tZDKFw9+7dXZHnZpYYfvLC1oapG8wtLJLe
      WGU9kWZ9I0apVMIqZhidWuDqRx9QslRKJZ302iyraYvm5maCfk/Z92NuZpmLV86DaWAYOnOL
      iyQjy0S2Y+ulEmYhydjMEp98+AG6UCnpOsnVadZyfGbsfCbBjdE5nhjoJR6LsbYwQ8bUWJqf
      ZXp8BIevicX5ecbGxnHa7RhCYPcECNkLrGYV2kLl4wLk0glujc1zvv80o6OTeG0lxsYmmFrc
      wOt2HHwBWIaJaQlMy6KpOYzf5yWXThGNRRGKhqU4aGlpxm7T0JweWpqC2FSV+YVF3L4AVunh
      VmqZW7EevelZEE3kcKkG0Y0IQmgUTUEw6MehWrj9IXxeFwuLywT8HvJFnabmZgI+J4YBCIFh
      mJhlDl0MPY9QbKSTcdajSZyOrXMGNqeH5qYQtk/dw+oOhkjGoliWxdLCAorNgaqCaRq7bzAX
      gmQiicuuEIlG0VF3njvY1Izf78M0Hr2aLoQgmc5hJtfImBqqqmCZJtan3o8mv5NIokBXR4hY
      LA1CbA1MsB1jYWEBl8eDaRq0nurhVKufhYUV/D43JUNgd9ixbZ+2NgwDy9p6vwFCfgcbm0U6
      2wLE41kQ7Irt9ngxDJ22zh46WnwsLqwS8Lkp6Z8d2+1rojvsJZLIbgVT7bS0NGG3aRRNaAr6
      0FSFgcFBEmvzxFJFhLBIFQROK4/+qYERtuI+vDHe42+iq9nDxmYGzeYkEGqmkEng8gbweb0H
      fwgU8DqZnp1Dsbnwup14PV7czR04SmlsLh8t4RBujwdVUfB6vHg8HhQFPE4byWyJ5nAYv8+N
      x+MhuxkhZzmIRdYJBoMIQ2dhcQl3qJ2+7i6MfAaby8u53i5mpqZxBjqwMusk8wZep0peh3C4
      Fa/LicfrRnN6cKomSyvr5HNp3F7/zs38G6tLxFMF+gcGaAp4yeSLhFtacTsdeL0e3B4PiqLg
      2f7Z7gpgZDZYWd+gra2NaCxOIBiCYhrh9BNZXScYDIBiML+wiOoK0dvTi83MotjdtIbD2OxO
      PA4bHo8HVXPgdtrxeDyIUp6FpRUCrZ20tzYRXV/HFwjhFEXyOIlFVgkGg3ibwiSWZ4kmi5zu
      7kLPJUnmSrS2htncTHKqNcRmOk9zc5iAz43H40UvZskbCuGWNuxWgbyh4PO6WVpawkGJlG7D
      67ThDbUQX54lni7R1d2JnkmQzBm0tjazmUzREQ6SyhRoCrcQ8HrweLyUihmKhkJzaxs2K0/e
      1PB5XFuxRZG06cDj3PpQ6ezpIRmLEggG8Ho9uNxuNFWlvSXE5PQ8mXwRr1Mlpyt0nWrHKqZx
      +lvpagmQLlh4XU58Pi+5zShpUyO+sbWNPIi9GYsT8jmZX9lg6OIVjPQG0WT+YM8CSUdDdG0R
      wxago2Vvo709VuzVBUxHiPZwoOaxAVLxCIurEZrbTnOqNfT5K+yRLACpocnLtFJD+/8PeXbp
      wEK9VAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='WINNER/VENUE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Year_Filter' width='192'>
      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
      QCjtfwHnqgKq4TmtbwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
