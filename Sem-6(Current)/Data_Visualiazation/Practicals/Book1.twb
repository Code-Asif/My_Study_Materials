<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Heatmap />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ipl_match_ball_by_ball_data' inline='true' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ipl_match_ball_by_ball_data' name='textscan.0s1y3m3056shoo0zjam1u1irapof'>
            <connection class='textscan' directory='C:/Users/safet/Downloads/archive (5)' filename='ipl_match_ball_by_ball_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.0s1y3m3056shoo0zjam1u1irapof' name='ipl_match_info_data.csv' table='[ipl_match_info_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='match_id' ordinal='0' />
              <column datatype='string' name='season' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='city' ordinal='3' />
              <column datatype='string' name='venue' ordinal='4' />
              <column datatype='string' name='team1' ordinal='5' />
              <column datatype='string' name='team2' ordinal='6' />
              <column datatype='string' name='toss_winner' ordinal='7' />
              <column datatype='string' name='toss_decision' ordinal='8' />
              <column datatype='string' name='player_of_match' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='integer' name='winner_wickets' ordinal='11' />
              <column datatype='integer' name='winner_runs' ordinal='12' />
              <column datatype='string' name='outcome' ordinal='13' />
              <column datatype='string' name='result_type' ordinal='14' />
              <column datatype='integer' name='results' ordinal='15' />
              <column datatype='string' name='gender' ordinal='16' />
              <column datatype='string' name='event' ordinal='17' />
              <column datatype='integer' name='match_number' ordinal='18' />
              <column datatype='string' name='umpire1' ordinal='19' />
              <column datatype='string' name='umpire2' ordinal='20' />
              <column datatype='string' name='reserve_umpire' ordinal='21' />
              <column datatype='string' name='tv_umpire' ordinal='22' />
              <column datatype='string' name='match_referee' ordinal='23' />
              <column datatype='string' name='eliminator' ordinal='24' />
              <column datatype='string' name='method' ordinal='25' />
              <column datatype='date' name='date_1' ordinal='26' />
            </columns>
          </relation>
          <relation connection='textscan.0s1y3m3056shoo0zjam1u1irapof' name='ipl_match_ball_by_ball_data.csv' table='[ipl_match_ball_by_ball_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='match_id' ordinal='0' />
              <column datatype='string' name='season' ordinal='1' />
              <column datatype='date' name='start_date' ordinal='2' />
              <column datatype='string' name='venue' ordinal='3' />
              <column datatype='integer' name='innings' ordinal='4' />
              <column datatype='real' name='ball' ordinal='5' />
              <column datatype='string' name='batting_team' ordinal='6' />
              <column datatype='string' name='bowling_team' ordinal='7' />
              <column datatype='string' name='striker' ordinal='8' />
              <column datatype='string' name='non_striker' ordinal='9' />
              <column datatype='string' name='bowler' ordinal='10' />
              <column datatype='integer' name='runs_off_bat' ordinal='11' />
              <column datatype='integer' name='extras' ordinal='12' />
              <column datatype='integer' name='wides' ordinal='13' />
              <column datatype='integer' name='noballs' ordinal='14' />
              <column datatype='integer' name='byes' ordinal='15' />
              <column datatype='integer' name='legbyes' ordinal='16' />
              <column datatype='string' name='penalty' ordinal='17' />
              <column datatype='string' name='wicket_type' ordinal='18' />
              <column datatype='string' name='player_dismissed' ordinal='19' />
              <column datatype='string' name='other_wicket_type' ordinal='20' />
              <column datatype='string' name='other_player_dismissed' ordinal='21' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ball]' value='[ipl_match_ball_by_ball_data.csv].[ball]' />
          <map key='[batting_team]' value='[ipl_match_ball_by_ball_data.csv].[batting_team]' />
          <map key='[bowler]' value='[ipl_match_ball_by_ball_data.csv].[bowler]' />
          <map key='[bowling_team]' value='[ipl_match_ball_by_ball_data.csv].[bowling_team]' />
          <map key='[byes]' value='[ipl_match_ball_by_ball_data.csv].[byes]' />
          <map key='[city]' value='[ipl_match_info_data.csv].[city]' />
          <map key='[date]' value='[ipl_match_info_data.csv].[date]' />
          <map key='[date_1]' value='[ipl_match_info_data.csv].[date_1]' />
          <map key='[eliminator]' value='[ipl_match_info_data.csv].[eliminator]' />
          <map key='[event]' value='[ipl_match_info_data.csv].[event]' />
          <map key='[extras]' value='[ipl_match_ball_by_ball_data.csv].[extras]' />
          <map key='[gender]' value='[ipl_match_info_data.csv].[gender]' />
          <map key='[innings]' value='[ipl_match_ball_by_ball_data.csv].[innings]' />
          <map key='[legbyes]' value='[ipl_match_ball_by_ball_data.csv].[legbyes]' />
          <map key='[match_id (ipl_match_ball_by_ball_data.csv)]' value='[ipl_match_ball_by_ball_data.csv].[match_id]' />
          <map key='[match_id]' value='[ipl_match_info_data.csv].[match_id]' />
          <map key='[match_number]' value='[ipl_match_info_data.csv].[match_number]' />
          <map key='[match_referee]' value='[ipl_match_info_data.csv].[match_referee]' />
          <map key='[method]' value='[ipl_match_info_data.csv].[method]' />
          <map key='[noballs]' value='[ipl_match_ball_by_ball_data.csv].[noballs]' />
          <map key='[non_striker]' value='[ipl_match_ball_by_ball_data.csv].[non_striker]' />
          <map key='[other_player_dismissed]' value='[ipl_match_ball_by_ball_data.csv].[other_player_dismissed]' />
          <map key='[other_wicket_type]' value='[ipl_match_ball_by_ball_data.csv].[other_wicket_type]' />
          <map key='[outcome]' value='[ipl_match_info_data.csv].[outcome]' />
          <map key='[penalty]' value='[ipl_match_ball_by_ball_data.csv].[penalty]' />
          <map key='[player_dismissed]' value='[ipl_match_ball_by_ball_data.csv].[player_dismissed]' />
          <map key='[player_of_match]' value='[ipl_match_info_data.csv].[player_of_match]' />
          <map key='[reserve_umpire]' value='[ipl_match_info_data.csv].[reserve_umpire]' />
          <map key='[result_type]' value='[ipl_match_info_data.csv].[result_type]' />
          <map key='[results]' value='[ipl_match_info_data.csv].[results]' />
          <map key='[runs_off_bat]' value='[ipl_match_ball_by_ball_data.csv].[runs_off_bat]' />
          <map key='[season (ipl_match_ball_by_ball_data.csv)]' value='[ipl_match_ball_by_ball_data.csv].[season]' />
          <map key='[season]' value='[ipl_match_info_data.csv].[season]' />
          <map key='[start_date]' value='[ipl_match_ball_by_ball_data.csv].[start_date]' />
          <map key='[striker]' value='[ipl_match_ball_by_ball_data.csv].[striker]' />
          <map key='[team1]' value='[ipl_match_info_data.csv].[team1]' />
          <map key='[team2]' value='[ipl_match_info_data.csv].[team2]' />
          <map key='[toss_decision]' value='[ipl_match_info_data.csv].[toss_decision]' />
          <map key='[toss_winner]' value='[ipl_match_info_data.csv].[toss_winner]' />
          <map key='[tv_umpire]' value='[ipl_match_info_data.csv].[tv_umpire]' />
          <map key='[umpire1]' value='[ipl_match_info_data.csv].[umpire1]' />
          <map key='[umpire2]' value='[ipl_match_info_data.csv].[umpire2]' />
          <map key='[venue (ipl_match_ball_by_ball_data.csv)]' value='[ipl_match_ball_by_ball_data.csv].[venue]' />
          <map key='[venue]' value='[ipl_match_info_data.csv].[venue]' />
          <map key='[wicket_type]' value='[ipl_match_ball_by_ball_data.csv].[wicket_type]' />
          <map key='[wides]' value='[ipl_match_ball_by_ball_data.csv].[wides]' />
          <map key='[winner]' value='[ipl_match_info_data.csv].[winner]' />
          <map key='[winner_runs]' value='[ipl_match_info_data.csv].[winner_runs]' />
          <map key='[winner_wickets]' value='[ipl_match_info_data.csv].[winner_wickets]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_id]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[winner_wickets]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>winner_wickets</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[winner_runs]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>winner_runs</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>outcome</remote-name>
            <remote-type>129</remote-type>
            <local-name>[outcome]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>outcome</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result_type]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>result_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results</remote-name>
            <remote-type>20</remote-type>
            <local-name>[results]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>results</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[event]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>event</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_number]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>match_number</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reserve_umpire</remote-name>
            <remote-type>129</remote-type>
            <local-name>[reserve_umpire]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>reserve_umpire</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tv_umpire</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tv_umpire]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>tv_umpire</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_referee</remote-name>
            <remote-type>129</remote-type>
            <local-name>[match_referee]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>match_referee</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eliminator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[eliminator]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>eliminator</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method</remote-name>
            <remote-type>129</remote-type>
            <local-name>[method]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>method</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_1</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_1]</local-name>
            <parent-name>[ipl_match_info_data.csv]</parent-name>
            <remote-alias>date_1</remote-alias>
            <ordinal>26</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_id (ipl_match_ball_by_ball_data.csv)]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[season (ipl_match_ball_by_ball_data.csv)]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue (ipl_match_ball_by_ball_data.csv)]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>innings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[innings]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>innings</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[striker]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>striker</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>runs_off_bat</remote-name>
            <remote-type>20</remote-type>
            <local-name>[runs_off_bat]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>runs_off_bat</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extras</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extras]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>extras</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wides</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wides]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>wides</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noballs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[noballs]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>noballs</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>byes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[byes]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>byes</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>legbyes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[legbyes]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>legbyes</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>penalty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[penalty]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>penalty</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wicket_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[wicket_type]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>wicket_type</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_wicket_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[other_wicket_type]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>other_wicket_type</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[other_player_dismissed]</local-name>
            <parent-name>[ipl_match_ball_by_ball_data.csv]</parent-name>
            <remote-alias>other_player_dismissed</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='INDEX' datatype='integer' name='[Calculation_1089308200261566464]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='Sum' caption='Runs Off Bat (copy)' datatype='integer' name='[Runs Off Bat (copy)_1089308200272740353]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[runs_off_bat]' />
      </column>
      <column caption='ipl_match_ball_by_ball_data.csv' datatype='table' name='[__tableau_internal_object_id__].[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]' role='measure' type='quantitative' />
      <column caption='ipl_match_info_data.csv' datatype='table' name='[__tableau_internal_object_id__].[ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95]' role='measure' type='quantitative' />
      <column caption='Ball' datatype='real' name='[ball]' role='measure' type='quantitative' />
      <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
      <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
      <column caption='Byes' datatype='integer' name='[byes]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date 1' datatype='date' name='[date_1]' role='dimension' type='ordinal' />
      <column caption='Eliminator' datatype='string' name='[eliminator]' role='dimension' type='nominal' />
      <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
      <column caption='Extras' datatype='integer' name='[extras]' role='measure' type='quantitative' />
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column caption='Innings' datatype='integer' name='[innings]' role='measure' type='quantitative' />
      <column caption='Legbyes' datatype='integer' name='[legbyes]' role='measure' type='quantitative' />
      <column caption='Match Id (Ipl Match Ball By Ball Data.Csv)' datatype='integer' name='[match_id (ipl_match_ball_by_ball_data.csv)]' role='dimension' type='ordinal' />
      <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
      <column caption='Match Number' datatype='integer' name='[match_number]' role='dimension' type='ordinal' />
      <column caption='Match Referee' datatype='string' name='[match_referee]' role='dimension' type='nominal' />
      <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal' />
      <column caption='Noballs' datatype='integer' name='[noballs]' role='measure' type='quantitative' />
      <column caption='Non Striker' datatype='string' name='[non_striker]' role='dimension' type='nominal' />
      <column caption='Other Player Dismissed' datatype='string' name='[other_player_dismissed]' role='dimension' type='nominal' />
      <column caption='Other Wicket Type' datatype='string' name='[other_wicket_type]' role='dimension' type='nominal' />
      <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal' />
      <column caption='Penalty' datatype='string' name='[penalty]' role='dimension' type='nominal' />
      <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Reserve Umpire' datatype='string' name='[reserve_umpire]' role='dimension' type='nominal' />
      <column caption='Result Type' datatype='string' name='[result_type]' role='dimension' type='nominal' />
      <column caption='Results' datatype='integer' name='[results]' role='measure' type='quantitative' />
      <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
      <column caption='Season (Ipl Match Ball By Ball Data.Csv)' datatype='string' name='[season (ipl_match_ball_by_ball_data.csv)]' role='dimension' type='nominal' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
      <column caption='Striker' datatype='string' name='[striker]' role='dimension' type='nominal' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Tv Umpire' datatype='string' name='[tv_umpire]' role='dimension' type='nominal' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Venue (Ipl Match Ball By Ball Data.Csv)' datatype='string' name='[venue (ipl_match_ball_by_ball_data.csv)]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Wicket Type' datatype='string' name='[wicket_type]' role='dimension' type='nominal' />
      <column caption='Wides' datatype='integer' name='[wides]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column caption='Winner Runs' datatype='integer' name='[winner_runs]' role='measure' type='quantitative' />
      <column caption='Winner Wickets' datatype='integer' name='[winner_wickets]' role='measure' type='quantitative' />
      <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
      <group caption='Action (Player Of Match,Season (Ipl Match Ball By Ball Data.Csv))' hidden='true' name='[Action (Player Of Match,Season (Ipl Match Ball By Ball Data.Csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[player_of_match]' />
          <groupfilter function='level-members' level='[season (ipl_match_ball_by_ball_data.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (Wicket Type)' hidden='true' name='[Action (Wicket Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[wicket_type]' />
        </groupfilter>
      </group>
      <group caption='Action (Winner)' hidden='true' name='[Action (Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Bowling Team, Bowler'>
          <field>[bowling_team]</field>
          <field>[bowler]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:winner:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Punjab Kings&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lucknow Super Giants&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gujarat Titans&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>%null%</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='ipl_match_ball_by_ball_data.csv' id='ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68'>
            <properties context=''>
              <relation connection='textscan.0s1y3m3056shoo0zjam1u1irapof' name='ipl_match_ball_by_ball_data.csv' table='[ipl_match_ball_by_ball_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='match_id' ordinal='0' />
                  <column datatype='string' name='season' ordinal='1' />
                  <column datatype='date' name='start_date' ordinal='2' />
                  <column datatype='string' name='venue' ordinal='3' />
                  <column datatype='integer' name='innings' ordinal='4' />
                  <column datatype='real' name='ball' ordinal='5' />
                  <column datatype='string' name='batting_team' ordinal='6' />
                  <column datatype='string' name='bowling_team' ordinal='7' />
                  <column datatype='string' name='striker' ordinal='8' />
                  <column datatype='string' name='non_striker' ordinal='9' />
                  <column datatype='string' name='bowler' ordinal='10' />
                  <column datatype='integer' name='runs_off_bat' ordinal='11' />
                  <column datatype='integer' name='extras' ordinal='12' />
                  <column datatype='integer' name='wides' ordinal='13' />
                  <column datatype='integer' name='noballs' ordinal='14' />
                  <column datatype='integer' name='byes' ordinal='15' />
                  <column datatype='integer' name='legbyes' ordinal='16' />
                  <column datatype='string' name='penalty' ordinal='17' />
                  <column datatype='string' name='wicket_type' ordinal='18' />
                  <column datatype='string' name='player_dismissed' ordinal='19' />
                  <column datatype='string' name='other_wicket_type' ordinal='20' />
                  <column datatype='string' name='other_player_dismissed' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='ipl_match_info_data.csv' id='ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95'>
            <properties context=''>
              <relation connection='textscan.0s1y3m3056shoo0zjam1u1irapof' name='ipl_match_info_data.csv' table='[ipl_match_info_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='match_id' ordinal='0' />
                  <column datatype='string' name='season' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='city' ordinal='3' />
                  <column datatype='string' name='venue' ordinal='4' />
                  <column datatype='string' name='team1' ordinal='5' />
                  <column datatype='string' name='team2' ordinal='6' />
                  <column datatype='string' name='toss_winner' ordinal='7' />
                  <column datatype='string' name='toss_decision' ordinal='8' />
                  <column datatype='string' name='player_of_match' ordinal='9' />
                  <column datatype='string' name='winner' ordinal='10' />
                  <column datatype='integer' name='winner_wickets' ordinal='11' />
                  <column datatype='integer' name='winner_runs' ordinal='12' />
                  <column datatype='string' name='outcome' ordinal='13' />
                  <column datatype='string' name='result_type' ordinal='14' />
                  <column datatype='integer' name='results' ordinal='15' />
                  <column datatype='string' name='gender' ordinal='16' />
                  <column datatype='string' name='event' ordinal='17' />
                  <column datatype='integer' name='match_number' ordinal='18' />
                  <column datatype='string' name='umpire1' ordinal='19' />
                  <column datatype='string' name='umpire2' ordinal='20' />
                  <column datatype='string' name='reserve_umpire' ordinal='21' />
                  <column datatype='string' name='tv_umpire' ordinal='22' />
                  <column datatype='string' name='match_referee' ordinal='23' />
                  <column datatype='string' name='eliminator' ordinal='24' />
                  <column datatype='string' name='method' ordinal='25' />
                  <column datatype='date' name='date_1' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[match_id]' />
              <expression op='[match_id (ipl_match_ball_by_ball_data.csv)]' />
            </expression>
            <first-end-point object-id='ipl_match_info_data.csv_2EA02B4D878B4E7CBC85FACAAC80BC95' />
            <second-end-point object-id='ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
      <datasources>
        <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
      </datasources>
      <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
        <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
        <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]'>
        <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 5 (generated)' name='[Action5_6D1E06A1402743098E189F78D47DF68F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Practical5' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='MATCHES/CITIES'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>NUMBER OF MATCHES PLAYED IN EVERY CITY</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[match_number]' derivation='Count' name='[cnt:match_number:qk]' pivot='key' type='quantitative' />
            <column caption='Match Number' datatype='integer' name='[match_number]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:city:nk]' />
              <groupfilter function='member' level='[none:city:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Latitude (generated)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Longitude (generated)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#898989' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
            <format attr='color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' />
              <lod column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]' />
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Latitude (generated)]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4B5C89DE-800B-42DB-8D32-55E81EC7AB69}' />
    </worksheet>
    <worksheet name='MOST FOURS'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>TOP 10 FOURS HITTERS </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='INDEX' datatype='integer' name='[Calculation_1089308200261566464]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' caption='Runs Off Bat (copy)' datatype='integer' name='[Runs Off Bat (copy)_1089308200272740353]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[runs_off_bat]' />
            </column>
            <column-instance column='[__tableau_internal_object_id__].[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' pivot='key' type='quantitative' />
            <column caption='ipl_match_ball_by_ball_data.csv' datatype='table' name='[__tableau_internal_object_id__].[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]' role='measure' type='quantitative' />
            <column-instance column='[Runs Off Bat (copy)_1089308200272740353]' derivation='None' name='[none:Runs Off Bat (copy)_1089308200272740353:ok]' pivot='key' type='ordinal' />
            <column-instance column='[striker]' derivation='None' name='[none:striker:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
            <column caption='Striker' datatype='string' name='[striker]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1089308200261566464]' derivation='User' name='[usr:Calculation_1089308200261566464:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Runs Off Bat (copy)_1089308200272740353:ok]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:Runs Off Bat (copy)_1089308200272740353:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' direction='DESC' using='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' />
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Runs Off Bat (copy)_1089308200272740353:ok]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' value='50' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' value='140' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Runs Off Bat (copy)_1089308200272740353:ok] / [federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk])</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]</cols>
      </table>
      <simple-id uuid='{E70F7A8B-E202-4D50-AABE-42A6C2E37587}' />
    </worksheet>
    <worksheet name='MOST POTM'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>MOST PLAYER OF THE MATCH</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column-instance column='[match_number]' derivation='Count' name='[cnt:match_number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_of_match]' derivation='Count' name='[cnt:player_of_match:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
            <column caption='Match Number' datatype='integer' name='[match_number]' role='dimension' type='ordinal' />
            <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:player_of_match:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:player_of_match:nk]' />
              <groupfilter function='member' level='[none:player_of_match:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:player_of_match:nk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:player_of_match:qk]' />
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:winner:qk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:player_of_match:nk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2EAD0DCA-50D0-4BD5-BC3F-E27B0843282D}' />
    </worksheet>
    <worksheet name='MOST RUNS'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>TOP 10 RUNS SCORER IN IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='INDEX' datatype='integer' name='[Calculation_1089308200261566464]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[striker]' derivation='None' name='[none:striker:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
            <column caption='Striker' datatype='string' name='[striker]' role='dimension' type='nominal' />
            <column-instance column='[runs_off_bat]' derivation='Sum' name='[sum:runs_off_bat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1089308200261566464]' derivation='User' name='[usr:Calculation_1089308200261566464:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' direction='DESC' using='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk]' />
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='187' />
            <format attr='height' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' value='56' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' value='156' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{D9FFE860-8683-460F-B461-F9EB39D89AE1}' />
    </worksheet>
    <worksheet name='MOST SIXES'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>TOP 10 SIX HITTERS </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='INDEX' datatype='integer' name='[Calculation_1089308200261566464]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' caption='Runs Off Bat (copy)' datatype='integer' name='[Runs Off Bat (copy)_1089308200272740353]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[runs_off_bat]' />
            </column>
            <column-instance column='[__tableau_internal_object_id__].[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' pivot='key' type='quantitative' />
            <column caption='ipl_match_ball_by_ball_data.csv' datatype='table' name='[__tableau_internal_object_id__].[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68]' role='measure' type='quantitative' />
            <column-instance column='[Runs Off Bat (copy)_1089308200272740353]' derivation='None' name='[none:Runs Off Bat (copy)_1089308200272740353:ok]' pivot='key' type='ordinal' />
            <column-instance column='[striker]' derivation='None' name='[none:striker:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
            <column caption='Striker' datatype='string' name='[striker]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1089308200261566464]' derivation='User' name='[usr:Calculation_1089308200261566464:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Runs Off Bat (copy)_1089308200272740353:ok]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:Runs Off Bat (copy)_1089308200272740353:ok]' member='6' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' direction='DESC' using='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' />
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Runs Off Bat (copy)_1089308200272740353:ok]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' value='50' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]' value='140' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Runs Off Bat (copy)_1089308200272740353:ok] / [federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk])</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[__tableau_internal_object_id__].[cnt:ipl_match_ball_by_ball_data.csv_EA7E0D882DD7471B9564B6B5DF72BF68:qk]</cols>
      </table>
      <simple-id uuid='{07135C8D-E2A8-4F2C-B3E3-991A6FA03175}' />
    </worksheet>
    <worksheet name='MOST WICKETS'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>TOP 10 WICKET TAKERS IN IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='INDEX' datatype='integer' name='[Calculation_1089308200261566464]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[wicket_type]' derivation='Count' name='[cnt:wicket_type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[wicket_type]' derivation='None' name='[none:wicket_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1089308200261566464]' derivation='User' name='[usr:Calculation_1089308200261566464:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column caption='Wicket Type' datatype='string' name='[wicket_type]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:bowler:nk]' direction='DESC' using='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:wicket_type:qk]' />
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:wicket_type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:wicket_type:nk]' member='%null%' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;bowled&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;caught&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;caught and bowled&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;hit wicket&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;lbw&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;obstructing the field&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;retired hurt&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;retired out&quot;' />
              <groupfilter function='member' level='[none:wicket_type:nk]' member='&quot;stumped&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:wicket_type:nk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[usr:Calculation_1089308200261566464:qk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='204' />
            <format attr='height' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:bowler:nk]' value='54' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:wicket_type:qk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:wicket_type:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:bowler:nk]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:wicket_type:qk]</cols>
      </table>
      <simple-id uuid='{339468B4-C44B-4A4A-B291-717FA9BBF079}' />
    </worksheet>
    <worksheet name='Practical1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>NUMBER OF MATCHES PLAYED EVERY YEAR</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column-instance column='[match_number]' derivation='Count' name='[cnt:match_number:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Match Number' datatype='integer' name='[match_number]' role='dimension' type='ordinal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{DA959D91-920F-474D-9226-7814AB664749}' />
    </worksheet>
    <worksheet name='Practical2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>TOSS WIN BY EVERY TEAM</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column-instance column='[toss_decision]' derivation='Count' name='[cnt:toss_decision:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:toss_decision:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:toss_decision:qk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]' value='TEAMS'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='12'>TEAMS</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]' />
              <wedge-size column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:toss_decision:qk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:toss_decision:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{18CBB2C9-9DAD-4BF0-B326-D38667415295}' />
    </worksheet>
    <worksheet name='Practical3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>Runs Scored on every ball</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='Ball' datatype='real' name='[ball]' role='measure' type='quantitative' />
            <column-instance column='[ball]' derivation='None' name='[none:ball:qk]' pivot='key' type='quantitative' />
            <column-instance column='[runs_off_bat]' derivation='None' name='[none:runs_off_bat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
            <column caption='Wicket Type' datatype='string' name='[wicket_type]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Wicket Type)]'>
            <groupfilter function='level-members' level='[wicket_type]' user:ui-action-filter='[Action5_6D1E06A1402743098E189F78D47DF68F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Wicket Type)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:ball:qk]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:runs_off_bat:qk]</cols>
      </table>
      <simple-id uuid='{6CE0FCE8-0BE7-4A03-B228-6C37F9F54A4F}' />
    </worksheet>
    <worksheet name='Practical4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>Match Win by Every Team</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column-instance column='[match_number]' derivation='Count' name='[cnt:match_number:qk]' pivot='key' type='quantitative' />
            <column caption='Match Number' datatype='integer' name='[match_number]' role='dimension' type='ordinal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{45628E52-0DB9-4D88-81B8-D82E113C3346}' />
    </worksheet>
    <worksheet name='Practical5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>Number of dismissed by different wicket type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column-instance column='[player_dismissed]' derivation='Count' name='[cnt:player_dismissed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wicket_type]' derivation='None' name='[none:wicket_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
            <column caption='Wicket Type' datatype='string' name='[wicket_type]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:player_dismissed:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:wicket_type:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{7D11BFB2-E5FC-4E18-ACF8-24CD9786A14E}' />
    </worksheet>
    <worksheet name='Practical6'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>Most Player Of The Match</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column-instance column='[match_number]' derivation='Count' name='[cnt:match_number:qk]' pivot='key' type='quantitative' />
            <column caption='Match Number' datatype='integer' name='[match_number]' role='dimension' type='ordinal' />
            <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
            <column-instance column='[season (ipl_match_ball_by_ball_data.csv)]' derivation='None' name='[none:season (ipl_match_ball_by_ball_data.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column caption='Season (Ipl Match Ball By Ball Data.Csv)' datatype='string' name='[season (ipl_match_ball_by_ball_data.csv)]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' />
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:season (ipl_match_ball_by_ball_data.csv):nk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:player_of_match:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0E196E03-73A1-4555-9D3A-F52C2237F712}' />
    </worksheet>
    <worksheet name='Practical7'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>Match played at different venue</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[match_number]' derivation='Count' name='[cnt:match_number:qk]' pivot='key' type='quantitative' />
            <column caption='Match Number' datatype='integer' name='[match_number]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Wicket Type' datatype='string' name='[wicket_type]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Wicket Type)]'>
            <groupfilter function='level-members' level='[wicket_type]' user:ui-action-filter='[Action5_6D1E06A1402743098E189F78D47DF68F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:city:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:city:nk]' member='%null%' />
                <groupfilter function='member' level='[none:city:nk]' member='&quot;Abu Dhabi&quot;' />
                <groupfilter function='member' level='[none:city:nk]' member='&quot;Bloemfontein&quot;' />
                <groupfilter function='member' level='[none:city:nk]' member='&quot;Cape Town&quot;' />
                <groupfilter function='member' level='[none:city:nk]' member='&quot;Centurion&quot;' />
                <groupfilter function='member' level='[none:city:nk]' member='&quot;Dubai&quot;' />
                <groupfilter function='member' level='[none:city:nk]' member='&quot;Durban&quot;' />
                <groupfilter function='member' level='[none:city:nk]' member='&quot;East London&quot;' />
                <groupfilter function='member' level='[none:city:nk]' member='&quot;Johannesburg&quot;' />
                <groupfilter function='member' level='[none:city:nk]' member='&quot;Kimberley&quot;' />
                <groupfilter function='member' level='[none:city:nk]' member='&quot;Port Elizabeth&quot;' />
                <groupfilter function='member' level='[none:city:nk]' member='&quot;Raipur&quot;' />
                <groupfilter function='member' level='[none:city:nk]' member='&quot;Sharjah&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Action (Wicket Type)]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Longitude (generated)]' field-type='quantitative' max='10209580.124371599' min='7256806.0806528563' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Latitude (generated)]' field-type='quantitative' max='4079217.2789019062' min='1026739.0705075164' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]' />
              <lod column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]' />
              <geometry column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Latitude (generated)]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{551F5D10-00F7-455F-8543-8A9D91DD7BBF}' />
    </worksheet>
    <worksheet name='RUNS &gt;= 1K'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>PLAYER WITH MORE THAN 1K RUNS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column-instance column='[striker]' derivation='None' name='[none:striker:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
            <column caption='Striker' datatype='string' name='[striker]' role='dimension' type='nominal' />
            <column-instance column='[runs_off_bat]' derivation='Sum' name='[sum:runs_off_bat:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk]' included-values='in-range'>
            <min>1000</min>
            <max>6634</max>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk]</cols>
      </table>
      <simple-id uuid='{4820D0E6-58FC-4C05-BF9F-02B21A263108}' />
    </worksheet>
    <worksheet name='Sheet 18'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{136F55F0-9751-41AA-8BFC-08A2FFD7EAEC}' />
    </worksheet>
    <worksheet name='VIRAT RUNS'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>VIRAT RUNS IN EVERY SEASON</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[striker]' derivation='None' name='[none:striker:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Runs Off Bat' datatype='integer' name='[runs_off_bat]' role='measure' type='quantitative' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column caption='Striker' datatype='string' name='[striker]' role='dimension' type='nominal' />
            <column-instance column='[runs_off_bat]' derivation='Sum' name='[sum:runs_off_bat:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:striker:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Ashish Reddy&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Badoni&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Chandila&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Chopra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Choudhary&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Dananjaya&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Flintoff&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Kumble&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Manohar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Mishra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Mithun&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Mukund&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Nehra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Nortje&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Symonds&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Tomar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Uniyal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;A Zampa&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AA Bilakhia&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AA Chavan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AA Jhunjhunwala&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AA Noffke&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AB Agarkar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AB Barath&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AB de Villiers&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AB Dinda&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AB McDonald&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Abdul Samad&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Abdur Razzak&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Abhishek Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AC Blizzard&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AC Gilchrist&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AC Thomas&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AC Voges&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AD Hales&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AD Mascarenhas&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AD Mathews&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AD Nath&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AD Russell&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AF Milne&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AG Murtaza&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AG Paunikar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AJ Finch&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AJ Turner&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AJ Tye&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AK Markram&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Akash Deep&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AL Menaria&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AM Nayar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AM Rahane&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Aman Hakim Khan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AN Ahmed&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AN Ghosh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Anirudh Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Ankit Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Ankit Soni&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Anmolpreet Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Anuj Rawat&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Anureet Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AP Dole&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AP Majumdar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AP Tare&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AR Bawne&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AR Patel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Arshdeep Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AS Joseph&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AS Rajpoot&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AS Raut&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AS Roy&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AS Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AT Carey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AT Rayudu&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;AUK Pathan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Avesh Khan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Azhar Mahmood&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Akhil&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Chipli&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Indrajith&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Kumar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Laughlin&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Lee&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Sai Sudharsan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Stanlake&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;B Sumanth&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BA Bhatt&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BA Stokes&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Basil Thampi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BAW Mendis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BB McCullum&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BB Samantray&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BB Sran&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BCJ Cutting&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BE Hendricks&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Bipul Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BJ Haddin&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BJ Hodge&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BJ Rohrer&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BMAJ Mendis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;BR Dunk&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;C de Grandhomme&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;C Madan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;C Munro&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;C Nanda&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;C Sakariya&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CA Ingram&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CA Lynn&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CA Pujara&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CH Gayle&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CH Morris&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CJ Anderson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CJ Ferguson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CJ Jordan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CJ McKay&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CK Kapugedera&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CK Langeveldt&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CL White&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CM Gautam&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CR Brathwaite&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CR Woakes&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CRD Fernando&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;CV Varun&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;D Brevis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;D du Preez&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;D Kalyankrishna&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;D Padikkal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;D Pretorius&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;D Salunkhe&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;D Wiese&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DA Miller&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DA Warner&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DAJ Bracewell&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DB Das&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DB Ravi Teja&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DE Bollinger&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DH Yagnik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Bravo&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Harris&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Hooda&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Hussey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Jacobs&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Malan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Mitchell&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Muthuswami&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Thornely&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJ Willey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJG Sammy&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DJM Short&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DL Chahar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DL Vettori&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DM Bravo&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DNT Zoysa&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DP Conway&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DP Nannes&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DP Vijaykumar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DPMD Jayawardene&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DR Martyn&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DR Sams&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DR Shorey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DR Smith&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DS Kulkarni&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DS Lehmann&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DT Christian&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DT Patil&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;DW Steyn&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;E Lewis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;EJG Morgan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;ER Dwivedi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;F Behardien&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;F du Plessis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;FA Allen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Fazalhaq Farooqi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;FH Edwards&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;FY Fazal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;G Gambhir&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GB Hogg&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GC Smith&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GC Viljoen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GD McGrath&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GD Phillips&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GH Vihari&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GHS Garton&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GJ Bailey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GJ Maxwell&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;GR Napier&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Gurkeerat Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;H Das&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;H Klaasen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Harbhajan Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Harmeet Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Harpreet Brar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Harpreet Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Harshit Rana&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;HE van der Dussen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;HF Gurney&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;HH Gibbs&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;HH Pandya&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;HM Amla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;HR Shokeen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;HV Patel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;I Malhotra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;I Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;I Udana&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;IC Pandey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;IK Pathan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Imran Tahir&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Iqbal Abdulla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;IR Jaggi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;IS Sodhi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Ishan Kishan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;J Arunkumar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;J Botha&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;J Suchith&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;J Syed Mohammad&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;J Theron&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;J Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JA Morkel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JA Richardson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Jaskaran Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JC Archer&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JC Buttler&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JD Ryder&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JD Unadkat&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JDP Oram&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JDS Neesham&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JE Taylor&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JEC Franklin&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JH Kallis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JJ Bumrah&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JJ Roy&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JJ van der Wath&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JL Denly&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JL Pattinson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JM Bairstow&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JM Kemp&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JM Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JO Holder&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Joginder Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JP Duminy&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JP Faulkner&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JPR Scantlebury-Searles&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JR Hazlewood&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JR Hopes&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;JR Philippe&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;K Goel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;K Gowtham&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;K Kartikeya&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;K Rabada&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;K Upadhyay&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;K Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KA Jamieson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KA Pollard&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KAJ Roach&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Kamran Akmal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Kamran Khan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Karanveer Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Kartik Tyagi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KB Arun Karthik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KC Cariappa&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KC Sangakkara&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KD Karthik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KH Pandya&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KJ Abbott&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KK Ahmed&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KK Cooper&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KK Nair&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KL Nagarkoti&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KL Rahul&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KM Jadhav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KMA Paul&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KMDN Kulasekara&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KP Appanna&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KP Pietersen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KR Sen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KS Bharat&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KS Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KS Williamson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Kuldeep Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KV Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;KW Richardson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;L Ablish&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;L Balaji&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;L Ronchi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LA Carseldine&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LA Pomersbach&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Lalit Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LE Plunkett&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LH Ferguson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LJ Wright&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LMP Simmons&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LPC Silva&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LR Shukla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LRPL Taylor&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;LS Livingstone&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Ashwin&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M de Lange&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Jansen&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Kaif&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Kartik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Klinger&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Manhas&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Markande&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Morkel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Muralitharan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Ntini&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Prasidh Krishna&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Rawat&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Shahrukh Khan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Theekshana&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Vijay&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;M Vohra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MA Agarwal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MA Khote&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MA Starc&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MA Wood&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mandeep Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mashrafe Mortaza&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MC Henriques&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MC Juneja&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MD Mishra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MDKJ Perera&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MEK Hussey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MF Maharoof&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MG Johnson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Misbah-ul-Haq&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MJ Clarke&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MJ Guptill&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MJ Lumb&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MJ McClenaghan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MJ Santner&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MK Lomror&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MK Pandey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MK Tiwary&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;ML Hayden&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MM Ali&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MM Patel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MM Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MN Samuels&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MN van Wyk&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mohammad Ashraful&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mohammad Asif&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mohammad Hafeez&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mohammad Nabi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mohammed Shami&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mohammed Siraj&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mohsin Khan (2)&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MP Stoinis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MR Marsh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MS Bisla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MS Dhoni&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MS Gony&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MS Wade&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mujeeb Ur Rahman&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mukesh Choudhary&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Mustafizur Rahman&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;MV Boucher&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;N Jagadeesan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;N Pooran&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;N Rana&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;N Saini&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NA Saini&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;ND Doshi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Niraj Patel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NJ Maddinson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NJ Rimmington&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NL McCullum&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NLTC Perera&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NM Coulter-Nile&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NS Naik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NT Ellis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;NV Ojha&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;OA Shah&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;OC McCoy&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;OF Smith&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Awana&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Chopra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Dogra&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Dubey&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Kumar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Negi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Parameswaran&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Ray Barman&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Sahu&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;P Simran Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PA Patel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PA Reddy&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Pankaj Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Parvez Rasool&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PBB Rajapaksa&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PC Valthaty&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PD Collingwood&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PJ Cummins&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PJ Sangwan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PK Garg&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PM Sarvesh Kumar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PN Mankad&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PP Chawla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PP Ojha&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PP Shaw&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PR Shah&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PSP Handscomb&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PV Tambe&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PVD Chameera&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;PWH de Silva&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Q de Kock&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Ashwin&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Bhatia&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Bishnoi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Dhawan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Dravid&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R McLaren&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Ninan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Parag&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Powell&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Rampaul&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Sanjay Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Sathish&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Shepherd&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Shukla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Tewatia&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;R Vinay Kumar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RA Bawa&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RA Jadeja&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RA Tripathi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Ramandeep Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Rashid Khan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Rasikh Salam&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Ravi Bishnoi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RD Chahar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RD Gaikwad&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RE Levi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RE van der Merwe&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RG More&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RG Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RJ Harris&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RJ Peterson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RJ Quiney&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RK Bhui&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RK Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RM Patidar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RN ten Doeschate&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RP Meredith&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RP Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RR Bhatkal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RR Pant&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RR Powar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RR Raje&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RR Rossouw&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RR Sarwan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RS Bopara&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RS Gavaskar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RS Sodhi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RT Ponting&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RV Gomez&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RV Patel&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;RV Uthappa&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Anirudha&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Aravind&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Badree&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Badrinath&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Chanderpaul&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Dhawan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Dube&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Gopal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Kaul&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Kaushik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Ladda&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Lamichhane&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Nadeem&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Narwal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Rana&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Randiv&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Sohal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Sreesanth&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Sriram&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Tyagi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;S Vidyut&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SA Abbott&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SA Asnodkar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SA Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Sachin Baby&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Salman Butt&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Sandeep Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SB Bangar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SB Jakati&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SB Joshi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SB Styris&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SB Wagh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SC Ganguly&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SD Chitnis&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SD Lad&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SE Bond&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SE Marsh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SE Rutherford&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shahbaz Ahmed&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shahid Afridi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shakib Al Hasan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shashank Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shivam Mavi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shivam Sharma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shoaib Ahmed&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shoaib Akhtar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shoaib Malik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Shubman Gill&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Simarjeet Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SJ Srivastava&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SK Raina&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SK Trivedi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SK Warne&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SL Malinga&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SM Curran&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SM Harwood&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SM Katich&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SM Pollock&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SMSM Senanayake&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SN Khan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SN Thakur&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SO Hetmyer&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Sohail Tanvir&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SP Fleming&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SP Goswami&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SP Jackson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SP Narine&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SPD Smith&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SR Tendulkar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SR Watson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SS Cottrell&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SS Iyer&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SS Prabhudessai&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SS Shaikh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SS Tiwary&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;ST Jayasuriya&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;STR Binny&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Sunny Gupta&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Sunny Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SV Samson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SW Billings&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;SW Tait&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Swapnil Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Banton&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Henderson&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Kohli&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Natarajan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Shamsi&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Stubbs&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Taibu&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;T Thushara&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TA Boult&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TD Paine&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TG Southee&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TH David&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Tilak Varma&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TK Curran&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TL Seifert&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TL Suman&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TM Dilshan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TM Head&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TM Srivastava&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TR Birt&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TS Mills&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;TU Deshpande&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;U Kaul&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;UA Birla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;UBT Chand&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Umar Gul&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Umran Malik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;UT Khawaja&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;UT Yadav&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;V Pratap Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;V Sehwag&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;V Shankar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VG Arora&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VH Zol&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Virat Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Vishnu Vinod&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VR Aaron&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VR Iyer&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VRV Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VS Malik&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VS Yeligati&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VVS Laxman&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;VY Mahesh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;W Jaffer&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;WA Mota&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Washington Sundar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;WD Parnell&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;WP Saha&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;WPUJC Vaas&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;X Thalaivan Sargunam&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Y Gnaneswara Rao&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Y Nagar&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Y Prithvi Raj&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Y Venugopal Rao&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;YA Abdulla&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Yash Dayal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Yashpal Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;YBK Jaiswal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;YK Pathan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Younis Khan&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;YS Chahal&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Yuvraj Singh&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;YV Takawale&quot;' />
                <groupfilter function='member' level='[none:striker:nk]' member='&quot;Z Khan&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk]</column>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='107' />
                <format attr='maxwidth' value='107' />
                <format attr='minheight' value='20' />
                <format attr='maxheight' value='20' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:striker:nk] * [federated.1gkiicz0c3m0xf12gzta81uq73lj].[sum:runs_off_bat:qk])</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:season:nk]</cols>
      </table>
      <simple-id uuid='{49DF5FB4-2B7E-444C-BE73-279CDFE137E9}' />
    </worksheet>
    <worksheet name='WINNER/TEAM'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>NUMBER OF MATCHES WIN BY EVERY TEAM</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column-instance column='[match_number]' derivation='Count' name='[cnt:match_number:qk]' pivot='key' type='quantitative' />
            <column caption='Match Number' datatype='integer' name='[match_number]' role='dimension' type='ordinal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' field-type='quantitative' max='139' min='-3' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]' />
              <text column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:match_number:qk]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{57E99D41-65E5-4D25-B984-64F3D3AAA2EA}' />
    </worksheet>
    <worksheet name='WINNER/VENUE'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='20'>MATCH WIN AT EVERY VENUE</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
          </datasources>
          <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
            <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:winner:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:winner:qk]</rows>
        <cols>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:venue:nk]</cols>
      </table>
      <simple-id uuid='{15EC450F-30B9-4871-A8DF-51B67B8CFBF5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5eddc' />
        </style-rule>
      </style>
      <size maxheight='1000' maxwidth='1800' minheight='1000' minwidth='1800' sizing-mode='fixed' />
      <datasources>
        <datasource caption='ipl_match_ball_by_ball_data' name='federated.1gkiicz0c3m0xf12gzta81uq73lj' />
      </datasources>
      <datasource-dependencies datasource='federated.1gkiicz0c3m0xf12gzta81uq73lj'>
        <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
        <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='53500' id='15' name='Practical1' w='33111' x='66333' y='12400' />
        <zone h='53400' id='17' name='Practical2' w='32500' x='33611' y='12500' />
        <zone h='42000' id='18' name='Practical4' w='66389' x='33667' y='66100' />
        <zone h='97200' id='19' name='Practical6' w='33222' x='111' y='12300' />
        <zone h='10700' id='22' mode='dropdown' name='Practical2' param='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]' type-v2='filter' values='database' w='8889' x='77000' y='47600' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='23' param='vert' type-v2='layout-flow' w='99112' x='444' y='800'>
                <zone fixed-size='280' h='97200' id='19' is-fixed='true' name='Practical6' w='33222' x='111' y='12300'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53500' id='15' is-fixed='true' name='Practical1' w='33111' x='66333' y='12400'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10700' id='22' mode='dropdown' name='Practical2' param='[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]' type-v2='filter' values='database' w='8889' x='77000' y='47600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53400' id='17' is-fixed='true' name='Practical2' w='32500' x='33611' y='12500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42000' id='18' is-fixed='true' name='Practical4' w='66389' x='33667' y='66100'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{03F20B1B-BB38-414D-A5FA-D0E8EE314AD5}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='900' maxwidth='1800' minheight='900' minwidth='1800' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='95222' id='3' name='Practical7' w='42000' x='57778' y='1889' />
        <zone h='95667' id='5' name='Practical3' w='30556' x='27222' y='1000' />
        <zone h='96667' id='6' name='Practical5' w='26500' x='722' y='333' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='9' param='vert' type-v2='layout-flow' w='99112' x='444' y='889'>
                <zone fixed-size='280' h='96667' id='6' is-fixed='true' name='Practical5' w='26500' x='722' y='333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='95667' id='5' is-fixed='true' name='Practical3' w='30556' x='27222' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='95222' id='3' is-fixed='true' name='Practical7' w='42000' x='57778' y='1889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C2F30B54-1701-4CBA-9A65-FBA5B1357F2B}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' show-side-pane='false' source-height='44'>
    <window class='worksheet' name='MATCHES/CITIES'>
      <cards>
        <edge name='left'>
          <strip size='156'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{7BBA1421-B2C4-4ECF-99BF-829301B777CD}' />
    </window>
    <window class='worksheet' name='Practical1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{9A65DB0E-AC4D-4472-86D1-B7E5C358B346}' />
    </window>
    <window class='worksheet' name='WINNER/TEAM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{6BE6E215-1581-4CE7-AF55-B107DB70B2EB}' />
    </window>
    <window class='worksheet' name='WINNER/VENUE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B5D51D15-2116-4173-87D0-B44F35BCD926}' />
    </window>
    <window class='worksheet' name='Practical2'>
      <cards>
        <edge name='left'>
          <strip size='226'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B92D3BB7-B622-4535-9857-3F1A854CE9EC}' />
    </window>
    <window class='worksheet' name='MOST POTM'>
      <cards>
        <edge name='left'>
          <strip size='164'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:match_number:ok]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:player_of_match:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E05CA4B7-0623-4D56-869E-012ACC985A9D}' />
    </window>
    <window class='worksheet' name='RUNS &gt;= 1K'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{D7540D12-1EE7-4E93-A184-7E37F64536AF}' />
    </window>
    <window class='worksheet' name='VIRAT RUNS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{2A1632C7-1D67-41E1-A34A-B25EC055410B}' />
    </window>
    <window class='worksheet' name='MOST RUNS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{622CFBE3-EF35-47E1-AE36-A80ED634CC65}' />
    </window>
    <window class='worksheet' name='MOST WICKETS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{2D57A30F-F988-48CC-8583-E11927F1201A}' />
    </window>
    <window class='worksheet' name='MOST SIXES'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{2C932115-F282-4D76-BE32-545A27A00858}' />
    </window>
    <window class='worksheet' name='MOST FOURS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{1635C28B-AAF4-4B15-9BD1-0F6671EBE857}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Practical1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Practical2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Practical4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Practical6'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{DDA4A516-07DA-4CE3-9C02-F2DC8AA9481A}' />
    </window>
    <window class='worksheet' name='Practical4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:match_number:ok]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02CA28AC-51D8-4484-A476-14CAEF908984}' />
    </window>
    <window class='worksheet' name='Practical6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:match_number:ok]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:player_of_match:nk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:season (ipl_match_ball_by_ball_data.csv):nk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D811D5DD-0117-4ACB-A14B-357917706D76}' />
    </window>
    <window class='worksheet' name='Practical7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:bowler:nk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:city:nk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:match_number:ok]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:other_player_dismissed:nk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:other_wicket_type:nk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:player_dismissed:nk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:venue:nk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:wicket_type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{76FC3101-CD8F-45C5-9B35-D57DAD598A35}' />
    </window>
    <window class='worksheet' name='Practical3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:Runs Off Bat (copy)_1089308200272740353:ok]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:bowler:nk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:bowling_team:nk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:season (ipl_match_ball_by_ball_data.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{197CFAEF-87F7-46B9-8290-2574CB975645}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Practical3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Practical5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Practical7'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{D4DA2FED-510B-46E5-BA48-0C58B4181BCA}' />
    </window>
    <window class='worksheet' name='Practical5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[cnt:player_dismissed:qk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:wicket_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74EFAAB4-8527-4A8E-B332-0B9AF6FA4F80}' />
    </window>
    <window class='worksheet' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:batting_team:nk]</field>
            <field>[federated.1gkiicz0c3m0xf12gzta81uq73lj].[none:bowling_team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BA0E08C-0D3B-4A7B-9C82-CEEC5E6CEBD9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2deXBcx3ngf3MP5sIxB3EDxEXwFCmKlyheNiWZli0p0W7iWtspZ72pVGqz
      W9ndSlUqZW9S60pSldraysZJHKtsOc5hO9qyY1myLFESxUO8SRDiTdzEjcHMYGYwGABz7h+D
      Gczx5gKH4ADzfv8Ar79+7/W8977u/r7+ulsyZ+8LIyJSokifdAFERJ4kogKIlDSiAoiUNKIC
      iJQ0ogKIlDSiAoiUNKICiJQ0ogKIlDSiAoiUNKICiJQ0ogKIlDSiAoiUNKICiJQ0ogKIlDSi
      AoiUNKICiJQ0ogKIlDSiAoiUNKICiJQ0ogKIlDSiAoiUNKICiJQ0ogKIlDSiAoiUNKICiJQ0
      ogKIlDSiAoiUNKICiJQ0ogKIlDRyiVSORCp/0uUQWWeEAgtPugg5IZer9CjKqp50OUTWGV5H
      P+6QlgDFXbkWd+lE1jQB5PhQPOliZES0AURKmsK0AMEAF26P8NA2h9FYwQs762Oiy939DNjn
      qbVUcmBrHcoVqtydnhFujrgAkEokNNeb2dNuoX9wnGuDDp57uo2GSnUhfo0gD0etXO2dJhCG
      1kYLz7SakUgiMqfTzacDNnwyJcefqkcCnDx/B/tC6uY7n93TxpWbAyh1hoTnlIkH/WN0Dc0g
      U6h47XA7sqX03oHIb68s13JgawPlZfm9TofDyQc3RtmyqYHt9eV5nbteKEwLIJOzq0HP+5f7
      +M6/XWV6PghAcMHLLy/08pOPbtPUVJPzxz80OMKVQVdC2tb2DZw8fZtpn4zDm8381T+e4o3T
      fVi0Mn7y0W1GZhYL8lOE+NWp63zzR9fYs6OFV/a38P5H1/hfb14nEAZCfv7k7z/AtRjkH35x
      HZc/cs6w3csrhzfjtlr5yaVhvvSZLeiC87iCcgb6Rzn56VjO99/UWsudW338y3vXufbQvZQa
      5pPrkWcr0+jTfvy+hXl+fqFfUFZVpebdj25ze9QlKH8szHv4k++f493zvfzp377Hn77xCe+e
      u8c337gQEc95+fE71/jBu7d458xd/ubNK9wecQIQ9Pt4871u3vmkh1+eu8/Pz0d+19DQBP/0
      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
      TxDl8KKgIgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29eXhc9Znn+6lTp/ZNVaXSvkuWZG3G+waGgE3SLAESIOnkIb3MzJ3l6Xtv
      d09359476ZlMmO7OnUx3uunpm8l00hNCEyAEAgQSwDbYBhtjYxvbWqzFkqxdKpVqU+1V59w/
      JAsbl2yfkpG8nM/z+HH51O/7O4vrPb/1fV+NLMsyKiq3KMJKX4CKykqiGoDKLY1qACq3NIoM
      wDsd4BfvtPP8u11EU3NDh47uYV5+v4fp2WROFzA7G+WV/R3s75zISX85ZCnD4dNDvHm4l+lI
      6uIvpQwHjvXx3N4OIhmYmprhrRPDOZ1nKdrz+GaC/OKddg52T11wVObQ8T6e29tFYkm1qyyG
      IgPw5Oehic/y/O6T/O1rp5CB5voSjKKWfKs+pwuwWs2c7ujnwGdgAG/t+5hnDw8zPDjCux2T
      F38paDGR4vm9nUQzcKZvhOf295DJ4TxL0Z7H7XJw/GQPhy4yAA0k4zy/94xqAJ8RolJBcUUJ
      j29K88KRLp4vcfLbWysw6QXSySRdIwHMZiNWUWYqlKCsyAnJBCMzUYo8DmLhWcw2K26zSPfw
      DBWlbsy6T2xwZGIGnclMocMIQCKeoG8iRG2ZG72coWPYj9lspMCiJZzWUOI0L2hlWaJ/ZAad
      yUhFvpVoNMaJs17icT1f/Mo2Cu3GhbLpVIre0QDJzPkJMAlPURH//uESNEA0GuPcdJTSfBtW
      nWbhvPkmgemYRG2RnbFJPxqDkeI8w6Jau1lPOBxlNJig1G3BZtLPX6cPu8OOx24AYGo6SEzW
      otFoFn3us7NRxgMJ6kudzATCjPljoNXSUGSlezRIWZETp1mn9L/zsgRDszz92hH2dk5x3x3N
      BKe8jMXgD768hTqP+coVXA1yhp/+6iPSOiNGLUzGZP7ooduuTd0XEI/Feeq5A3SERJ7+w7sX
      jucwBtDw2w9uYWt1Hi+88SGHB/wAiHodb+87zg/e6sKqSfGtH73DieEQDqvAd3/0Dv/jVyd4
      fvdJ/o//voeX3uvif/7yA/7ixeMLtc74Q4xOh/jj77/OxyNh/L4ZvvXTDyiyavjTHx4gpdVx
      4NApvvv8YZ598wTfe+XkJ5ckSzz10730BiWOHe3gx/v6Fr36TCLON5/6NTHRxNkR38JjODc4
      zLd+8gEpKcV/+MFeTBYjv9h/BkEnsv/gSf7qucO8/kE3f/bUb/ifvznFC3tO8gd/+ya+hGZR
      bSYR409/uA+HVcfL7/eCnOFvf7KXoMbIP76wj46JCMdOdPPdVzuwCinGQ6nFrprekQAvvnGY
      v/tNJxaDlh/+/D1ePz6K3qCnb3gau0nxu+yKOOxWWipdANy3o5U/feIOZiemeObdM9fsHOf6
      R9g3EOEbX2jja/euocpluGZ1X4jRZKQ833LJ8ZwGwRqtyB9+7Q7KbFr+7rmDBFIAGnTauepE
      4ZM3mSAKiEBLYwWPbKkmEg6zZk0jG2vdjHhDC+VcTjubW6qocAjsOzXMviO9RDMwFkpSoJcY
      CyYRtQKSqOdff3kr33x4zYJ2emySd7p9lBc6KPPYeH1fF4LZhMuqx2g0XPT27+wZps+XoabE
      SnNV/sJxvU4790GSiMVj/Pk/vkt1ZcHcfYla8lwOvv6FNbh1MnqrjUe31pBOJhgPJhfVSpkM
      kXCY//Dj92msLmRqdJJ9vX6i0RglhXn0j/l541A3FcV5uN1Oiu2LvcG1rG0sYUtjEfuPDyCa
      zTx+xyqOnuxndDpERUUx2su0HteKRCxBIgP5djNk0vyvVw/z3145yfTkNH/+j+/wXs80gUCQ
      J38898L7i5/s45kDcy+j050D7Pl4mF/sO8OFo0WbzUxoaoo//sG7vN81yRc2rQIgHo3x6vvd
      PPfmcQ6f9QEy+w53su/0CC/s7WA2KTHjm+Hb//gOv/lokL9+9gBHBwP4ZwK8crCXX+5rZyyY
      QJYyvPjWCQ52jXFuOnLJPeU8C2S0WPjWE7ejTUQI5jb+hUWW4MxGPemMRCiaorG6hG/9izsp
      ts694cwGHRpBS5Hz0iZYFATSkrRQteH8D/MCMhkJkEhlFjm5IPLNb9xFsRmeeuGDeeO+gE/9
      zuQLb+JT2rDGwJ//3p3Y5AR//cJRovPntlit/O4XN7OrpYh0RiaVlrJfS5ZTG416BGD7xnrc
      2iR/96tOWqucV6VfCs+/fph/97dvs35zM/9qZwNoRTSpBD1jAfKdJnoGppieTZKXZ2F4eIpZ
      dOyod/OLt9uZBV7YfZKjfV5qC+0XjZVcBR7+49c3kwoH+d4z7/Kd548Sz8g889phQhoDVS4D
      L73fR1/PIN9/q5/trWUEJif48d5uXG4zAwNTnBgKsrEuH1mWeeq5A5idebh1Ej98s4MPPzrD
      Kx0+tq0uwZNlnKrIAGRZontwklBi7haKSgr4s0fXcf5nVlHoYGJimh+93QlAOiMhpSTSQDKV
      IZ2e02UkiVRaIiNJSDIgCEjpNNHZWWYx8uDGSm5fW006NMNfPPsBr3wwgFbUkExlSCTTSJ9a
      vM4vKWRHnYuhqSAjU2Hu27EaEzLJVIZUOsOFxZvqyyixafj1wT66RgKAxNBUmFQqA5JEWkry
      1rFx/tPv76A4z4ZJK5NKZUilMkgZibQ0Z0Tnf7SZjLy4NhVhb0+Q//w72/C4rVSUFdJaZOEf
      nn+P597pxBdNs2tjDae7RzhyZpRgPIN3JrQww3aePKuIL5igbzzI1+5pRgC0eiMPbammqbYI
      /Wf/8udL97Rh1kLngJerMdf8PAtmowhSmngK7ttWz7ETPfz9r08TjX1iAkNjMzSuruYf/uRB
      /s8HW+ntOcfhs366znmJJ9Js3dTM935nM73DM+iMOnSATqelb2RmoY6qEic7NjexqdJI72iU
      ofEZnMVFfO32Gs6O+edemoDZeGkLq/32t7/97at9CDOBWWw2C5FEGo/dBEBhoZsajxmDTqSh
      ppjmchfb1lSxobEUj9WAFg1tq8sodpqwmI1sb6vCpge3K4/tjYUYjHo2tVRyZ1MhA1MRHt/Z
      htMkYrNbuXdDNeUeO1tbStFm0ljyHGxe5UGn12PWX/B212jYels1xGOUVZZwT0sxs7MxrM48
      NtXlIwsC1vmb1+r07NxQg8UgsmF1Gbs2r6KuwEwaHXfdVo4g6FhXm8+oL8aX7m7CSAZznoN1
      1S4kWcOa1eWUusxYLUa2tVbiMAlYzJasWotRT22RjYlgksfvbEAvity5vpbG0jzW1JdQaDdQ
      WV7IxloXeXl2trdWsGt9NVbDJ/fmyLPx2N1N+L1+WppqWF/t+uS2MxIN9aXY9Z/dcs7ZwXGO
      nPXx4N1r2VJl5dUDZ/AmtWyt99DZO0KvP83WagevHRlkTVMlq4st/GpfJ+U1ZRTq0+zvnOKL
      dzWTSkt8cXMVB472UllbQXneXF9/aHCE3T0hbqtyU13q5sjJfu7c0ohvfIrDZ33cvqaSmcAs
      dr3MW6eneGxHPYeP92IvKGBrvZNX9p5hVUM5rWUO0Gg58nEfvpSWL92+ivBsHE0qwf4z03zx
      9lV83D7AYEjmkS3VnzxDdS/QjcfQwDD/dfcgX99WxdaW8s/sPMHQLL860EXXeJg7NjSwc20p
      e/af5L2eGR64u40ai8QPf91OeamLwSEfLa017Gp08vcvHaOsppxqY5Ld7VP87iNbONs9SGFB
      Hn2jAR7asZrzNjs4PMVoIMbQVIh4PEXDqnK21XuYDYX5p9+cJJDU8OW7W2kutfHOoU4Em4PR
      iQAP3dlEIuTn7355kurqUp7Y2YAIDI9M8ew7XWhNZn7//rU4dTI//fVxMFsxyUm8cXj0riaK
      5mfgVAO4AUklErxx+Cxb1tZRZM9t/UVlDtUAVG5p1L1AKrc0n4kB+GaC/Nu/fJHvvdYOpPnj
      777ML4+NAbDn/VP84LWj/P533+DjvjH+49MH+c4P32R3x9TlK1XIyFRQUflfvPEBf/L04azf
      7d5/gof+n+cZvnQa+RK8U8Gs2xaUXo/K8vCZGIDb5cBlPr8yqeXhnS2sq3ICKZ5/u5M8j4fH
      7ljFoY968Cfh4R2rqfZcukqXK1OTXn74ZqcizYbWah7aVJ31uyKX9arqSMbjfP/5I5cYQNAf
      4KnXTmbV3GhI0tWtWWQjnU7nrM1kct9pdTntNV0/j87O8rN9vaxbVUAwIZHH3BaH906NENSY
      8U8mCKehvWeUf3lvE3uPdhNMatHYWii1aHj5wBkMGolV9RUUGDL8/UvHWNtWTV/fCBs3NtHk
      0rK/y4ucSrB57SoyAR//4+0z1Ja6GBr3s3VjIztq7fzXnx1iKqXjl4cHFqa8BgdH+dHubta2
      1VJAhDdPTfC1BzYz1j9IRXUph0+eYyyh447VhQyPTNExEaH/3BQP77p4X8qb+08SEMx8cUsd
      0xNTtI9HCIej3Hd7A8/+8gM6JgK8vLedR+5owaGHVCLO3zx3kHN+iecO9OKUo7zX4+PRL2yg
      UBtjT3eIZhe8fGSY5rpiJiZn2Lqhga11+Ux7/Rzs9ZGOx7ljUwMF1mu71ycXljJkTCaTiGJu
      P7mlnPdy2mvaAvzsjaN401rW1Rejm18hdTkdTIxPMRaIcVtTKUagpaGc6mInqwotOJwOWssc
      PP3KB0S0RmrcBr7/yxMLK4pHz86wub4AZC5Z5SuwG2gfmMLqdrPKreP5fWcwWSysKrLhcDou
      mu+tqirBlI5yrG+KIo+dwaEpeseDWOw2Gkry0MtpzowEkFIJ/vLpA1RWlSJFQxzo/GQXaTgY
      YlZr4Su3r8JIgid/coDqmjJSIT8/PzREW7UHEPnSPXM/fgCdwUhjWR5Gi4Xf3rGKu9bXMDTi
      pXs0gJyWuP22Sgpsc/exqq6crTV5/PVzHxDJSPzNP+/H6XFjF5L8aHfXtfyvWhG02ktX5lea
      a2oAfaN+zHodaATMhmw3K6C94IwX7hnqGfEx4Q2SNtr4d7/VtHC8usTJ1vUNbK81X7LKd578
      PDNmg45Y8nJNrIadG2ro6BpiMKrlruYC9n7YhWAwXVQq5PMzFkkTS6T4gyd28dUtFQvf/fPr
      R3jr+BBJWSboCzAVy9B7boo1axq4p6Xwqp6R0Wrj/vVlvHHwDH2BNDXOT6YxjQaRfIeZVCzC
      hC9MjzfO4JiPoooyHttceVX1X88spRvzWXFNDaC8wM6EfxZkiXgqW19R4MIWUHuBNZR57PSN
      +KgocWG80HbOb/ISDJS5DfQOz1BX7kaQL63/fFMnaOa2YUzOzF70/YbWKhzaNAVuB/esr2F8
      OkpLTf5FZexOO06DwOsHu0mlM4x4wwvf/f7DW9CEffzsvQHseTbsOg1940EaypxImQwaAUDC
      55slccHlCRoN6YzExPz13Hf7ahIzM2QMl457Eqk0OpOFIreVcruOnpEZ6stdkOV+VZaOoq0Q
      V6K+3M2ZvjGmYxmMooDTbibfquPsWAib1YzTpGFgKoLNaqTUaeLMuWnQallV5mZDfREjYz4O
      dY2zrqkSOR6lazSE2WyktcaDVqOhocJN7+AkH52dZtuaKgL+EEMzMUoKHMTDUSRBy5q6Iorz
      jPQN+/AU5lPm+uQNL4g6LGYjWxsLcblsWA06mitcSKkUH5+dAq2W5lWlbK7Lp6NvjJPnAmxo
      KmNs3EcwLtFQW0qBUaZ9wEtFRTFb61x8fGaU7skIO9ZUkG83MTETYjaj47bKTzaoOa16hkZ9
      mPLyqPZYMZhMROMJ7t9Si1YDIX+QXx8fpqm2mJExH7+1o4WafAuN5U7O9E9wfGCG29dUYRRX
      ftZalmUEIbfrkCQp5zGAJElLOu9iWnUhbJk50zeCaM9jcnKG7a1z3avh/iH+4EeH+C9/+DCt
      BcYr1LCyZDKZnPvy0WgUszk3R5p0Op2z8VxOe+29KFQuS3v3MKdmhvg3D21YODY8NecX0T/m
      p7WgeKUubYFIyM/w2CSSoMNlEpgOhiksrcXjvHZT1dcLagugkpVkNER77zB6UaaluZn2jk6a
      Vq8mk8lc1nVzMbrO+TjRO87aVcWsrnQr1h7vGWNdfYli7b6PhxibDvH5TbW47aZLvl/5TqXK
      dUciNM2p3lHWtjXPeRbJGUCLIAgIgoAoior/PLP7FCPeEM/sPpWTdsw3q1jrDcb49eFexnyz
      vPBuZ/ZyK/2wVa4/wtE4FqPAuZExqsqKaO/soba+YUl1jk2HMetFxqbDVy6cRWsx6hRro/EU
      3kAUvU7LYv0c1QBULiG/qIz8ok/+3ZKXv3jhq0Sj0XB2zJ9T90mj0XB2VLlW1ApE4klGvCGc
      tku7P6B2gVSWCUmSKXSakSTlQ05Jkil2WxVr0xkZg05LvsNMZpE9TKoBqNzUXMlkVANQWRYE
      QcOkP4ogKO8CCYKGcd+sYq2onQukMB2Mol1kIeyiMUA0Gr0u92uoLB2TyZTzQtK1QJZl6kqc
      9I35c9OWuei9IBLE1ZDOSFiMeko9tkW7Txc9kVxX6VRUroTbbiaWTGedi78abTSeUqw1G3UY
      DSKSJGMxZd9KrnaBVJYFUSug0WgQc9hGIZ6POKhQa9LrSCTTJNMZrKbswQNUA1BZFvzhGIV5
      ZvzhWE7aErdNsdYXimI26ihxW5nwzWYtoxqAyrKQSksc75246jCQn9Ye6xlXrBUEDd5AlFP9
      U4sOoFUDULmlUQ1AZVmQZJnqIsclcV2vVltb6lSslSQZk16kzGNfdBYoqwE89b2/JBDPcODA
      gYuOP/vsMzzz7LOKLkJFBea6I75QLOd1gOmg8jUEUdQST6UJzsYv8j68qO5sB20OM+/s3Y/X
      6+Wll16CwADPvHFQ8YWrqJxHkmQ8eZact0LkO5Rvo0inMxh1Ig6rcT4s/qVkNQDR4sGUmiGc
      lJAyaWajykfuKjcuqfgs+985QBLo7jzNma5OegeWlgTQZtYTS6axmZXHMrWZ9UTjKcVarSBg
      NuqQJPmTJCafIuvSYFtrK6urinj3xAD1Hh1vHuqkrW0TmrgV+dMZIlRuOnRGK5Vlc55pAjLR
      RAyb3YMkSUiSlFOMHqfNyKg3TKnHpjhAVq7a0nwLdaVOpoMx7rqtMqs2qwGsaWsD4PN3FgBQ
      3bRu/puKbMVVbmLC8RRtrc2c7jyLUOpBluWcfIKn/FHWNxRz6uyU4i0ZU/4o6+uLOdWvTBsI
      xxn3RSh2W+gYnGZDY+klZdRZIJVLiM8GScgSw4PDtDatZuDcGK2tTVcWXq7OZJrhyQDxy8Zu
      Wlw75gsr1vpCMfQ6AYfVyJgvuzON6hCjcglGq4OGBsfCv1fV1Vym9NWxUrtBe0dmGJ0O01qT
      PXCZ2gKoLAvy/DpALuMHeX4dQKn2/G5QxesAKirXGo1Gw8BEcMVcItWtECoriuoSqXJLY9SL
      lBfmYdQrH3Ya9SLFbltOWofVSIl78fwOqgGoLAuFLgvHuscpdCmPLlfosnC8R7m2ON9KKJLg
      VP8UVYV5WcuoBqCyLCRTGe5eW0kypdzlNpnKsGtDjWLt1EyE2hInu9bXMD6T3R9AnQZVWRYm
      /ZG5cPU5DIIn/RF2f9R/xQgPn0ajgY5BLwMTAXUaVGVlUQfBKrc0kiwjCJqc/QEETS5aGY1G
      gyyzaGhE1QBUlgVREBj3RRBzSHIhCgKj02HFWkHQkEhl8IWiaJWsA7z00ktXrDybY8yt6iwz
      MZvkpfZp3h8M5fSGU1k5sg6Cz/Wc5L98p4NHvvQgb7x1AFdRGRYhiceUQFeynsmhcwDsfu0F
      OnoGueu+h3nr1ZcZC6V4Ylkv//qg2xtjwh8hHE+xusCM23xjzy3IUoauzm4aWppIR0L0D49R
      UlaJw6o8ps95dKJAa7WH0wPenLRrags5eXbyyoUvYM4Jx0xNcR7pjIKtEBWr2ti5oZ4TpzrY
      +aUn0CSCOAxaIuYyxo+9Tunque3R50Ym2LJtC/6hTuo2fYG2VWUKb+3moNimx2424DLrsRlu
      /F5lOpVE1GrJAD1nz6ITdZhNS0vd5LSZmAxEF43SfCXtmC+sWOu2mzHNL56VeuxZy2R9VTkM
      EiNSPl97fDsv/fxFNmy/h3Jrmv4AJEW4rbEEa6aVIoeB1/cc5N4HH+bkgTexecoV3trNQX2+
      iUKrDpNOQL+I7+mNhM5gWriPRCJF4+pSOjo6aWtZnbNDTDojUVFgo388oNghJp2RqCpy0jc6
      o0hrMWqpKs4jnZForsrPqlVTJKlcQnw2yKnTneQVl+E0gNcfxu4qoKwoP+ckef/6v72OqNWQ
      zsj88E8eUKzV67QkUxlF2qHJID949SPyrAbMRj3/+5c2XVLmxu6sqnwmGK0ONm3duvBvzzXI
      2xeNp5gLVq58ISwaTxFLpBadylyMjCTRM+zDZBBpqS7IWubGb69VbggykkSx20J6kQWpK2lL
      822KtZI0vxBmN5NR/QFUVhKNRoMkzS1o5aSVc9HOL55pFt+BoRqAyrJwvSbIUA1AZVmQZZna
      EuVujQvaz8glUh0EqywLK5Ugw5Nnnp8FUhNkqKwgK5Ego9hto8hlJTCbYOf67JEtVANQWRZS
      6Qxl+VZSaeUOMal0hppip2LtuG+WWDLN6op83js1lLWM2gVSWRb8s3E+7BrLySHGPxvnYPuw
      YoeYZCpN/5gfXzC66FYItQVQWRZWKi6QJMkLAXKzoRqAyrJwU8YF8nqVb21VuTW5oVwiA95x
      +ofG8HvH6OwZIB0L4w/HmJyYJJOMcbq9i2B4lnf3vEXHmT58Zz/ir/77TwhGkopv7mag1xvl
      L1/v5Lmjo6QWScRwqyPJMjqdeAO4REpRnn7mRUKhML1dp3juR09xuquD4z0T7Nm9h5ee/2eC
      M+d468BJxkaHOfTmr5i6NX/3Cxwb9HH4SAcHTw3giyqPfny9cWGCDJA5+JsXGc8eVeSqcVgM
      SJKMw2LITSsr12oFAatJj0GnxaAkQcZ5Tpw+w6rKIhIpme4zxwl7/VTk65HTaWSgvLqeIiM4
      C0sQ0ieQFY/Tbw4q8m3U1VVQVuTEZlA+z329cWGCjNGBXoor6wBukQQZgpnfeeIxZmIyDz/8
      CPEU5BeX4LD2YndtJ+Id4v1DByls2cWmTfXoBTDleXj8/ttz2uh0M7CtOo9az1qsei0W/Y1v
      ABcSiScITU+iN3kprs49QUYknuLutZUc75tUnCAjEk+xa0MNR7vHFCfIkGRorvLQN+rPmiAj
      a215nmI+HUhudfNcgoSgXsP62+20Njdy4cC6etXqq76wm5FCq/LcV9crFybIqF/dSqq6Gkm3
      eHzNq8EfjnP0zBihWCon7ZEzowRmE4p0wWiCvtEZkukMBl12w1G8EOZwF7LGnT3KlsrNwacT
      ZOiMS/vxw9xMjttuIpDDRMn5LJEzobgiXTqdIZ5IE42nFg2poq4DqCwLwvw6QC7dZGF+HUCp
      VhA0xJJpNT+AispiqAagsixI8/4Aua4D1JYq10qSjEkvqimSVFYes1GHQS8uui//Slq9qFWs
      FUUtRoOI2aBDu0i4GnU3qMqyYDPrmfRHcs4Un4vWYTZQXZyH3WzAk5c9uYbaAqgsG5UFdnJd
      K60pdirWnn/7y4BrEW8ytQVQWRa8gShefyQnfwBvIMp0IKrYdib9EbrOTZNnNZJOS9y7sfaS
      MktqATo7O+c+pGNM+IJXLH/y1KmlnE7lBmZFdoOmJcLRBMl0hngq+xaKrC3A8UN7GY0YqLSn
      OTkQ4JHPb2IqZmLWO0yJx8rruw+x7c7Psf/t1/joRBcb6qz8w4vv8c1v/l8UGuM8/+KrbPzc
      fUQneujqPccDj36VY3tf443DXXy/rU3xA1BRyZUrmcylBpAOcrx7hm98/SE6Tx1DCJ6lvaeA
      iFjMROdp2uUkX/nSvbxxYBCru4RySwpXZT1bPmelwmMl5PVTtaqR9/e9g0WX4Y62Cg6+u4eo
      voK1jcpW8lRuHlY6LlCx25a97ktVFtKBAV7fc5Ajhw4wOR1ANFo48JuXGJyYwWES+NnPXyUD
      mM0WdDodmB2c/XAPw9OzjJzt4kRHDxlkjCYLRr0OncVF95E9nO4bVnzzNwoZSc5pl+Stwg0U
      F0jk3/zRn81//tzC0Q1r1gBw8sP9DB4+Skt1BZubti98/+3v/Ke5D/n30rTl4hqLmuDzd33q
      4E1ENCUx4E+QZ9RSYtPl5PZ3PXFhgoygd4Ipn5+C4gpcDuU5fs9jMujwhWKYDMrXAUwGHdNB
      5VpRKyAIc8F1F8stoHgWaM3mO1mz+U6lspuaaEpiLJwkJekosurQ3ti//4sSZFgdLmw2K139
      o7gc9TnXaRC1eJwWpmYiOWnzHSa8/qginV4nUlPioqrQQXyRHMNZDcDr9eLxeC5b+cTkJEWF
      hVc8ditgNwg05Bux6rXk0MW97rgwQUY06GNg3M+a1qYlOcRoBA16rQaNRqPYIUYjaDDpdYq1
      +XYDggaGvSG2t5Rn1WadBt3z1ht0nz0HyJzt7iAwG2dycpLA9AThWIqpqUl279lDOhGhvasX
      GRgb6ufZF15WdGM3C3qtQIXDgMsk3vDdH5jzB5jyTTM4OMzI2DhmgxafP4ggCAiCgCiKiv8k
      UxmGvWGS6UyO2pBi7fhMlGgijU4UaB/0Zi+X7QH4pqf58O2XGaypxxvTE9z3IW67CbcVNOZC
      gvMt0Us/fwGX3cDw2Cg9PYMkEsocFlSuTy5OkHFt0l7dUAkyRFEkI2vQzXdmZaDEpsdLPgMf
      7WXVbRvmLizko2c0iFWbQCPoSKWVe/uo3BpI84GxrrfdoFlbgPvvv4+U1kpNRTFnuztx77wD
      I3FWxSDTVk9RuZ2CnTtxO6x0nOmjoamFivI+UuLSPYdUbk4EQYMvFMt5HWA6qHwNQRS1xFNp
      grNxZbNA5dWfjPZrG5rnPxkptgLz3sLnB7u33TY3PVpZ26Do4lRuLeZy9loIRPw5aXN1iTTq
      RBxWI5lF4jWpu0FVlgVBo6F/PHDduUSqu0FVlgWnzYjJIBJLKA8clqtWKwjUl8TwJusAABJ+
      SURBVLvJsxqwGLP7EqgtgMqyIIoCJr2IKCr/yYmigNmoU6wt89gpcVsRtQLbWyuyllENQGVZ
      CEeTaIW5v3PR6kWtYm0okqB/LEAmI3Hq7GTWMmoXSGVZiMZTeIMxInHlU+XReIpJf0Sx1heK
      MhtPEorqSGdCWcuoLYDKsrKUdfJctLOxJL5QbFGx2gLcgnhH+3nvw48X/n3Hzvvx2JVHbVaC
      IGjwh+M5rwPM5LCGIGoFEsk04Whi0TzBqgHcglgdbtou8MyzGj/7n4EkyRS7zIzPKNvReV5b
      5rEx4g0r0uWcIOO8r++sd4ieIS8Tk9kHEHH/GJ39Yxfoui4pMzmRXauycqQScaanpxf+LFdS
      D6VRoa8FV9o8kdUA9r/9Gj999iXSQGbWy5NPPsnBY51kItN09o+xf/9+QpPnGPKGEUUdR/a/
      xW/2fUhnZxfd7R8TCPh45umnGRsd5sknn2TPwWPX/s6uI2QZpMtkIbnesLsLKXVo+Plrb/HW
      66/ij128V/7CBBl9Z9ppbz/F4MjUks7psBiQc0hycV574d9XiygK2M0G9KIWo5Lo0Od9fQdH
      hvFJJWzZupXt65tATnD6yC+Z6OthdMLLljWVdPWMMz6Z5BuPreWH3/8NEUmP5/QJ8ssr+fU7
      H7J1y1Z2bl+v8JZvPGRZBo1mSYO8ZUWSuGPbNnpPfUD6Uw3AhQky4hloaWmjvaMDqSQ/Z38A
      o17EqNOS0ouK/QGMehGTXiSVlpT5A9gMtNUWYjXqFk2ukbUFWPD1nScVmODgsS7QGIiOd7H9
      4Uf5uGsYl0EAYx7x8U7e3P8hxbXNGOPTOEvL6T3TQ0NjA0IqwN6bvAWAuUyGN8yPX05x8KNO
      DEIKu6uUIsfFb9b4bJCh4WH6B4cxixra209hcxYuyR8gnkwzHYoRT6Zz0vrCccXaVAaGp4J0
      npsmGElevT/Al7/85YsPrP/3Cx9/74/+MwAbWuYSZtxfDdx+2yV1bN2xc+7DxtZc/5tuGDSa
      pU3vLTuhMYKmCibPnmFbYyHdYyHWVX6SD8BodbDjnruv6SmDkQS1xQ7Ojl85flQ2bX25i57h
      GUU6XyhKMJKgpjiPnmFf1jLqOsCtiN6OPjqO3WqlezxKof2zz26zUvkBvIEop/qn1M1wKhdg
      cvJ7v/uNlb6K6wK1BVBZFjKSRInbSnqR+fgraUvzbYq1kjS/DmA3k1HzA6isJBqNBo0g5NQF
      0swnyVaunU+urVk8Jq9qACrLwg21DqCicq0xGXSY9CLpjPI1BJNBh9moU6wtdFpYU1eI1ain
      rMCRtYxqACrLQiyRQtDIOXmExRIpRK2GWEL5VuqJmQiJZJCS/KsNjqui8hkQjCSQZZlgRHns
      qPMapdpRbxhvIEK+w8TR7rGsZVQDULmpCczGGfPNLvq9agAqy8JK5wdYzB9ANQCVZeF6zQ+g
      GoDKsqCZjwuUS/BgzfxWCKVaUSsQiScvGxcoqwGcPHWKzq5OxRd6K5PKyDnFvbzeGTnXz5mu
      TsamlG1E+zROq5HtreU4rcbctC3KtemMzKoyF3e0VSz6f5N1GvTU6dPoSHDio2Ps+sIuJv1J
      AhMDrGupYyJuprbEqfgmbma8kRTHxiK4zSLrSyw5rXZer8TjMSRZQyIRX1J+gIwk0zfiIyPJ
      iv0BMpJM/7hfsdZh0ZFIZgiEYxQ5rVm1i64DaEQTD3/+dl7d8zHa1BSpmRlOdQ/z1Se+quji
      bwWCiQyR5JxXVUYCQbvCF3QNicRTNK1uoKv3HEJ5CbIso9Uqv0HtfBdEK2gUu0bmqnXZLZR6
      7HgDEe7dtCqrNmsXqLCwgEKnmZ888wobtmzEZYCND30NUZZwL4MD9Y1GpUPPmmIL60ssCyHl
      bxZKCz2c7R+krDx7ZLWrxR+OMzETwR9WninUH44z7ptVrB2aDNI7MucHsPdYf9YyWX/N9+7c
      BcBd9879u75sbutsw/+mbqHNhk4rUOdS3re9EcgvKiW/qHTJ9UiynLNDjCTL1Jcpd4jJSBLR
      eAqX3URykRxh6iyQyrKw0vkBtFp1HUBlBTmfH2Cx+fgrafMdZsVaNT+AynWDmh9A5ZbGbNSh
      FwWSn47BcrVanXbRfvzlyLMasJkNiy6iqS2AyrJg0GmpKMzDoFM+hWrQaakosCvWGvUiBp2I
      x2HGqM+uVVsAlWVBkmTCkdiivrlX0kYTqRy0GmpKnBQ6LYtG7VNbAJVlIZHO4AvHSaaVd2MS
      6QzTwZhircNqoH/Mz7GecfSLtB6qAagsC7FECrfNmJNXVyyRIt9hUqydmongtptYW1fE6HT2
      yNKqAagsC5r5wFjLuRtUo4GOQS+7j/WTzmUatPPgG3ROXLz8PHPuNMe7xy974v1v7yEJHD9+
      /LLl9ux+GwID/GLvzR879FZHkmQKncrn8s9ri91W5esAV5EfIMsgOM0Pvv83hFICOzY08MHL
      z/KexY41Oc6sWECdM8buj6cYb62hb9pPmdXFPV9/gDeeeZ10ZBixoIFzR3czFEkjRL3I/n4O
      no1gNFlw4ccbCNC8/VFW56d45dVX8eR9hWPvf0DXiUP81sY6Dp3som3r/dy1UU28fbNxY+QH
      SM+id9Vye1Mp44EEn3/ocfRSlMamFgLjQ1TWNXDX5x/GYYBHn/hX5BkyxGYjpKUMaTGPxx7Y
      SWPTOh568N6FKh98/HcwCQkiGT2P7NpOSgZPRT2bNm6kra6c9bfvZHVNMX0DQ6zduBVRil3j
      x6CSM3KGwf6zxJLKozlciCBoGJsO3wAukWIea2rtTGmLuWPzBj5+5yU237mLTDpFRUMLVfVr
      mOk9hKOyGYdeQ9vmdbz7xrs0t7WybV0Dr761nzs+t5U339hNa2sbxdVN5BmhrbWV21ZX8otf
      7UGcD71eVeykfXSWpupimlY3cd8DD9DX2YGroFDxQ1L5bOjp6qKwrAJBXloWmUKnhXvWVVHo
      tOSk3bWhRrFWlqG5ysOu9TWIi+wF0si5eDfkyPGDe+gYDvOVxx5Gf5NtG75ZOXr4fewOFxmt
      ica6SjKZTE4D2T//8T6Gp4KUFzh48l/cpVg74g1R5rEr0sqyzPdfPII3EOGr9zSzpvbSF+uy
      dsrWbd/JuuU8ocqS8eTnE01KaLVzyTFydYiZCkRZW1dI59CM4rHAVCDKhoYSTvVPKdIG5v0I
      it0W2gemWd9w6bburO3Cc//0/3Hw4CE+PNmzcGzg2F4Odk4A8MYzzxJQdAsqNypVdY00NTXR
      UFu5pHqiiRSTgQjRHNYBookUEzOzirW+UJRYck4z6s2eKPsSc0rPejl4rJOKhkZ6eoc588Eb
      jAdlHvzcGpBi/M3/+1dMjYXY/oTi+1C5hREFgXFfBHGRweiVtKPTYcXa8wkyZmNJWqoLspe5
      5GRWD1u3zCfFI403EGd9cwWzMSA6jatuE5vaVim+CRWV65GsJtXa1gqilbamVey6ayujgTTl
      1dWUVzdSZvCTtnm4OR0AVT4rpPnAWLmEjpHmA2Mp1UqSjEkvXjYwVtYRRduauSzia5qsQA1r
      tnzyXcUDjyq6CBUVmOuOzITjK+YS6bSZstet+GpUVHLAaTOyvr4Ipy2HwFg2I5saSxVr02mJ
      +jI3W5rKFm09VANQWRasJj17jg1gNSnPSGk16dn9Ub9ibanHhlYr0DHoZUN9cdYyqgGoLAsz
      oThFLgszIeXbXGZCcYrd1py0V0I1AJVlIRxNYNKLhKPJnLRmo06xdtQbJpORaK7y8FFP9h3M
      qkukyrKwMnGBBHpGfPjDMaqKs8ezVVsAlWVBkmRErZCzT7BWUK5NpzPotFo0Go0aF0hl5dEI
      AkvZApmTVjPvE6DmCVZZSQRBw8wSukC5aEWtQCKZJhxNqCmSVHKn/cg+fEucgLmhEmR8mu7j
      +zFWbSUx3E5J8zqsWVQDx/YyZmpme0mMXxyb4dF71meta/fbe9h1786rv4sbhPPP9ybKjQFA
      YGoEWdCRzLCkBBmiVqBnaBpRKyhOkGG3GIgmktgtBsUJMsZ9sySSaVprCq4+Qcb3vvN/c9uO
      z9N+9Aiy1UMx4/QfHKIlT8Bgl/nuP+/jni1NHG/vpbKhjfjYaSbHJ9ny5WYAjr2/h64Th9hW
      Vcz6R+f8hf0TnRTXtfLunr3oHR7u3LxG0UO4npHluf0qGo1mSX3c65GBoVEy0TBer5fiak/O
      /gAZSUYvakimZcX+ALfVFXH0zCgbG0sVaVMZGYNeRK8TiSTSV58go2r1Oj53WyVx0UlFSQGN
      jY3c/9BDC9Zy5+cfRp8MUtOyljyzSEZn5/57ti3oz/v4wnl/YSisWs2XH3mEjRs3sWNTm6IH
      oLJyrN2wmaa2tVSXepZUjy8UxaQX8YWiirWHO0doqS7gcOeIIl00niKeSCMIGiKx7L4EWQ2g
      ubkZMa+KravzSSOyev0dfLz/TWraWnHkFVNb5mLz3fcRG+/DbHdxW2Mlp4ZnKfdYwZi34OP7
      ib9wE83Nc63DuuYq3jvarvARXN9oNHMRjHMY390QmPMKsSnfwXARS4kLNOmPsPujfib9EUW6
      q8kSmbU9aWpqAuCuLzyycOx3n3h84XPe/JrC177xe+cVrNl8gb7GCZTMlfnKxb4DrRt3KLmH
      G4abre9/rZEkmWKXmfEZ5S2AJMmUeWyMeLNHd1uMq4kLpM4CqSwLkiyj04k5+wMIGk0O2rlx
      mSyjBsdVWVlEQWDUq9ytcUGbo0tkIpXBF4ouZJq8pG7FV6OikgNqggyVWxqTQWRVmQuTQfk7
      12QQqc9Ba9SLFDitrKktXFSrGoDKsqAVBIYmA4tuSbiSdsQbUqwtdttwWo10D/vYub4maxnV
      AFSWBX84RrHLij+sfE+FPxyjxG1TrB33hfHPxmkod7NHSaJsFZVrTSot8fHZKXLZ05lKSxzr
      GV90Jmcx4sk0U/4IsUSKYrctaxm1BVC5qQnMxpkORhfdv6QagMqycL3GBVINQGVZWOm4QNpF
      wqOrBqByWTKpOH19/aQyS4uiL0kyLpsx5xRJ+Q7l6ZXS6QxGnYjDarw2LpG+iXGSi6xjxMJ+
      ghHlHv8q1zf+QIiqyhI6OjqXVI/NrCeaSGEzK99VZzPricaVa7WCgNmoQ5LkRdOkZp0F8k5N
      zO3blhJIxjxOv/MCs+6NNOUL6OxWfIFZ9BY7vtEByupWI8f8HHz7dSzNX2B7UxHDA70YHIVo
      Mgk8bgcTkz6e/snTPPb1b1BTUaL4AaisHHk2Myc/bqe+Zc2SHGKcVuNCggylDjFOq3EhQYYS
      rdtuJBxNEo2naKtV4BDzTz94ivu//BjvHDgOSDTmzx3vPdWByZ7h6ZePc2ejk2nBxQcne4jP
      DFHsMGEBgsMdvL6vg0TYR2lJIY89sI3d+y+fLVLl+uWjox/hKCgmHotiMzluqAQZU5NhHFYD
      NcV5DE2Frt4hpq5lPU3VJZw720Nao6OkpIRk8pPuzfa7duK06mg/fQqLfe6hpNIXOxzIgCYV
      Yf/7H5IWjXhcVuQr5uxTud7YcsddrG5owONyLKmeeDLN+Mws8RyS7cWTacZ84Zy0gdk4Y77Z
      Rb/Pak47duxAsHj40z/6t4RTWuoqi5A7eilauxObw4w9X8Rpq8KQfxpncRW6TU3MBKPkF7tw
      WIp44C49BkchNjHNqC9IgzUPs7YFX2RpidZUblwEQcOkX/lMznntUrNELrYQltUAPJ4597ei
      siqK5o+1tjYtfH/eN7+h+bxrox3nBR5z5dWfOMHU2V0Lny/4qHKLIcsydSVO+sb8uWnLXPSO
      zCjSpTMSFqOeUo9NXQdQWVk0Gg3944GcXCI1Gg1nR/2KtVfjEqkagMqyIEkyJfmLv4mvpC12
      W5WvA6gukSrXC0a9iMdhwqhXvv/SqBcpdtty0jqsRkrc1kW/Vw1AZVkodFn4uG+SQlcOmeJd
      Fo73jCvWlnpsePIsTAdjbGzIvv6kGoDKsqAmyFC5pVETZKjc0qgJMlRuaSRJxpNnubF3g6qo
      5Iowvw4g5LAOIMyvAyjVCoKGWDKtrgOoqCyGagAqlyXs99Le0UE0qTwo1YXoRIF1q4rQicp/
      cjpRYH19sWLtXLfLTFtNgboVQiU3BkcnaGlqoL+3d0n1lHnsZCSJMo89J608/7cS3HYzpvnF
      s9JFtBo5i3fDnENMBr3OCJk0RpOIzx/GaM2jKD+P+GyAs6M+mmpLmA6nkZIRej58i2FhFY8/
      sO2Wm1oKxNMcG43gsehoLTTltN/leqWjo4Pm5ibaOzppWr2aVGpu23smM9ciaLXaq/rsD8c4
      3DnK1pZybEZRsfZYzxQbGosUawcmAgxNhtnWXIqgkS8p8/8D8DE0F1N550YAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='MATCHES/CITIES' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MOST FOURS' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MOST POTM' width='192'>
      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
      ggAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='MOST RUNS' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MOST SIXES' width='192'>
      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
      aQCJvfn/VsiVbKPVChUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MOST WICKETS' width='192'>
      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
      A+3/AxDc+kuP7lyQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Practical1' width='192'>
      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
      dvTWMaLw/wFMvPXfdtoTGwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Practical2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO3deWxd12Hn8e99+/64U9wsUTJlibIUSXbiSJZkx9Hi2LETF2iSTjrADDAY
      TAfoP8Us7cwfkz9mgHTaDtqiAYpBZ+oGEzc1ktqOHNuUtVmWREqmRFILtXDf3r7v271n/qD1
      LFkURUpczfMBBNjkffccPb3fO/eeexZFCCGQpDVKt9wVkKTlJAMgrWkyANKaJgMgrWkyANKa
      JgMgzUt3dzcffPABg4ODDz3W4/Ewn07G8fFxotEoiUSC/v7++37f1dVFOp2e9RynTp1CVdUZ
      f5fP5zl79uw9PzPMuXaSBPT39/O9730Pl8vFuXPn2L59O9evX2dgYAC73c5zzz3Hhx9+yNat
      W1EUhWg0ytDQEDt37qSnp4d8Ps/+/fs5evQozz33HNevX2fDhg3s3buXWCyGTqfDaDQyOTlJ
      MBikpaWFbDbLzZs38fv9NDY28tvf/paKigqsVisTExO8+OKLXLlyBaPRSDKZpKOjA5vNRnNz
      Mzdv3mTDhg0EAgEymQwWi+Wev49sAaR5+dGPfsT58+c5c+YMqVQKVVVJp9M0NDTw/PPPEwqF
      qKqqYt++faRSKVwuF8VikXQ6ze3bt9HpdAwMDPDkk0+yfft27HY7uVwOIQSapnH+/HnOnj2L
      yWQiFosxMDCApmns3r2bHTt20NfXh16vZ2Jiglgsxve//30KhQKqqjIyMoLdbufIkSMkk0nC
      4TBGo5Hbt29TLBY5dOgQBsO93/kyANKcCSG4cOECQgiMRiPZbJbTp0+jKApGoxGdTofBYKCq
      qgoAk8mEEAKr1UokEmHjxo3Y7XaeeOIJKisrEUJgNpsJhULl4w8cOMCLL76I2Wxm+/bt+P1+
      Wlpa6Ozs5ObNm7S3t6NpGm1tbbhcLsxmM9FoFE3TMJvNCCHo6OjA7XYTDodRFAWz2Uw2m+XE
      iRPodPd+5BX5JFhaiYQQHD9+nE2bNrFx48ZFK0cGQFqRhBCoqoper0dRlEUrRwZAWtPkPYC0
      7DweDx0dHfzsZz8jm80yMjLCW2+9tSRly25Qadk1NjZSX19PKpXCaDRy/fp1zGbzkpQtWwBp
      RTh//jzf/OY3OX36NNFolL6+PhKJxKKXK1sAadkJIcjlcjQ2NtLU1ATAyZMncblci162vAmW
      1iwhhGwBpLWllCuSCSXJBFNkQkkZAOmrTSup5KIZkp4YaX+cbPjewXQyANJXihACUdJIh5Ik
      xiOkPDFKueIDj5cBkL4ShBDkYhliwyES4+FZP/R3kwGQVjW1UCIxGSU6GCAbScE8u3RkAKRV
      RwhBKVskOhQgOhSglJ3bt/1MZACkVaWQyhG64SU2EkSoj9+DLwMgrXhCCAqpHOGbPmIjIYSq
      Ldi5ZQCkFUsIgVpUGfz0GhPdQzS0NC340GgZAGlF0lSNiZ4hbh7vJZfMApCMJXBVuhe0HBkA
      aUURQpDwRbnymwtExoP3/C4aiuBwO++b1vg4ZACkFaNUKDHwyVWGzvWjFu9f2qSYL5CIxqmo
      rlywMmUApGUnhCA2Gabnn8+TDMRmPTYajOB0u9Ab9AtStgzAAjhx4gT5fJ7W1la2bt0667GZ
      TIbr16/z9a9/nUgkwtmzZ2lpaSGZTHLgwIF7jtU0jXPnzuFwOHjyySdxOp2PVU9N03jvvfcw
      mUy0t7fT2to659d6PB4ymQxPPvnkY9XhvjqpGkNn+7l1+gpqofTQ49VSiXgkRmVt1YLcEMsA
      LABVVXnllVd45513yOfzTExM0NLSQjQaZc+ePfT29lIsFgkGg3zrW98in88D06uYff/730ev
      1/Pmm2+STCZpbW0ll8sxMjLCiy++SDabxWAwkM/n+fjjjzGbzTQ2NjI5OYnRaOTpp5/m0qVL
      6HQ6Nm7cyODgIG1tbYyPj1MsFnG5XKTTaV588UUsFgsOh4MdO3bQ29tLPB5nZGSE559/vryY
      1P79++nq6iKTyXDw4EF6e3vJZDLs3LmTYrHIsWPHSKfT7Nmzh9OnT9Pc3EwqlSKTyfDyyy9j
      s9nm/L5lExl6fnWO4JB3Xu93LBTBXVWxIK2AnBG2ALxeL3/5l3/J008/zdTUFK+99lr5A3jx
      4kWamppIpVIEAgHi8fg9r9Xrp/8RGxoaOHLkCB6Ph0QiQaFQYHR0tHzc5OQkfr+fyclJfD4f
      L7zwAoqicPXqVV5//XVMJhMXL17EYrHQ19dHPB7n1VdfxWw2UywW0bTpvvNbt27R3d1NVVUV
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Practical3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Practical4' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Practical5' width='192'>
      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
      ufMm+CYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Practical6' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Practical7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='RUNS &gt;= 1K' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='VIRAT RUNS' width='192'>
      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
      uUE+zX73KCoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='WINNER/TEAM' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAduElEQVR4nO3deWyc95nY8e/7vnNwTpIzvC/x1GlZsiKt7ShZx7GTOnHbNHWy/mOLFgW2
      7WIRBC2K/NMGQVD0nwLbxRZIgWax6QGs06KLrg/IUZPYtWMnjrKyLVEkdfAcnkMOyRkO5555
      3/fXP0hRB2dkkXPwmN8HEESO3nnmmVfzzHs97++nCCEEklSl1L1OQJL2kiwAqarJApCqmiwA
      qarJApCqmiwAqaqVtQDkGVZpvytrAZimWc7wklQ0uQskVTVZAFJVkwUgVTVZAFJVkwUgVTVZ
      AFJVkwUgVTVZAFJVs+zmSQszk8wsrvPMhTMEJkaJJRI4fO1kwnNkdJPWI8dpbfCUOldJKrld
      FUBbVy/R2C1QFBoa/ESiMWpsNuJoPPXkSQZHp2n2HcU0TdkOIe1ruyqAu4QQuGr99PfoTC6G
      QYBpGqiKhqIoqKqKqsq9LGn/2kUBCGanJoisRZhfXCEZWSRnQnNLF7mYwdDtCfqOnkRRFICt
      vyVpP1LKeVO8YRhomlau8JJUNLl/IlU1WQBSVZMFIFU1WQBSVZMFIFU1WQBSVZMFIFW1XRVA
      fG2VO+MBEIKFmUmGh4cJrycJzU9zY2iEdM4ocZqSVB67KgBTtWBkUgDUN7VxtKedmdkF5kKr
      nOjvYGwiUMocJalsdtUL5PXWorAAikImFmZsZpnTTz7B7ZtDWKx2DD2HaZqyGU7a93bVC7Q0
      P0dwMYi/uZmhazfo7j9KIpFC0bPcvHUbX2MXqqoihJCtENK+toteIEE2k8EwBZrFgjAMTCGw
      WK1oikJWN7DbbSjIXiBp/5PNcFJVk6dBpaomC0CqarIApKomC0CqarIApKomC0CqarsqgEwq
      wexccPPnOLPziwBEV5e4dWecnCEnxpAOhl0VQCwWJ7y6CghisQSrq6sAjAdmOdJSy+jkbClz
      3BHTNBkbGwMgk8nw/vvvk06nyeVyfPDBB4RCoT3LTdp/dtUL1NDUzPJyGFBoaGomtBIGQLNo
      OFwespnVPesFmpmZ4f3336enp4dLly7x3HPP8eabb+J0Orl48SKKoqDrekVzkvavXfUCJeJx
      EokEyVQaYWQ3f84gdJ35+Vm8tb496wXq7e1lbGwMi8WCoig0NDRgtVqZnZ3ld7/7HUIIvv71
      r1c0J2n/2tUuUDqZpKWthXQmRzqZpLW1hUw2yxNPnMLq9NHb2VTqPHdF0zTC4Y2tU0tLC5//
      /OeJxWJ7nJW0nxy6XqDR0VGmpqaora3l3LlzXLlyhWeeeQZFUfjoo484f/48LperojlJ+9eh
      KwBJ2omiBsfdD97+7Sj/79PArp+vKPCnf/LV0iUkHSgHvgBWoinG58O7fr4cu7e6ySvBUlWT
      BSBVNVkAUlXb1THA3RNHiqIghEAACgqw+bOy8Zsk7Xe7KoDg7BRT8xEuPnOOoWtXMVHwtfUR
      mR/DVFQa2vvpbK4vda6SVHJFTZInhIFpcXDmZD+Dt2bAYuPsyRMM3gnQ3lhbkV4gIYrvPJW9
      QdWryNOgCgiBqedQLRaMDBhGDk2zVqwXSFGKP4yxWA782WBpl3bx6RHMTo2zHl9nPhShxe9l
      eHSa/t4jtPrrGBkN0NfXXfJEJakcdvHVp9DZ009nT//m7w20dGz85OzsoaWzZLlJUtnJ06BS
      VZMFIFW1RxaAHNlZOuweWQBvv/MBM5s3v0vSYZT3IDin67z+9jv89uNBEokUbS2N8lShdCjl
      /VRrqoqqqBwf6OXVf/BSpXOSpIrJWwDZnM43vvZleQwgHXp5C6DGbkMIk8/6/AthMnz9U3KG
      SVvvSSJzo6R1k9bu47T43OXIV5JKquCOfTw0yeWPF/iDl3+/8LOFSVaonDk1wPXRWSyonDl9
      ghuj0zTVHZW9QNK+V7AAFM3O2Ke/4iehSQZOX+D3z5/avoyi0dfVxvjUNFa7B5HOIEwTVdE2
      WqIVpQK9QMU3Xssb96tXwQJw1jXx5Il+nA0tOOy2/AspG8Mk5nSF/mOdrMxlGbo1Ru/Rk1sF
      UIoP6KMVH7/8OUp7LZvN8tFHH3Hy5EmampoIh8PE4/HC1wFWp2+wJBqxZiNc+XSowFIbfUGn
      nzyNy27hSN8xzp49i9dZoGAkaY/87Gc/4/z587zzzjsIIXj33XcZHBwsXAC+rifwpAJcuRHg
      ay8+4jhAkg6Arq4u3nrrLWw2G9euXeP06dNomla4AFLRJaaC67TU1TAxI68GSwfb6Ogo3/jG
      N0gmk8TjccbGxrhx40b+Y4BULMLtW7dx+ls5d6aND8em4dnTlc5ZkkrmlVde4de//jUvvfQS
      TU1NGIbBM888k78ADD2HYavn/AkPaxnBV77wuUrnK0klZbVaef7557d+1zSNxsbG/AXgrm/i
      eEeY//zaZXo6W9DcDfR3tVYsWUnaLT0b53eX/uixly94GtTqcKAIgdfrLXwaVJL2GVMYrK/c
      fOzlCxZAaj2Cr/0o586dw+H2liQ5SdpvCp4FsrvqSKxM8Itf/IKhO4ECSwmW5qcZGblJLJVl
      ZXGWoZGbpHU5SZ50MBQsAM3q4Gh/H/X1dTgc9vwLCcHcYpj+Iy1MTc8xs7DMse5Wxiemy5Wv
      JJVUwV0gm6uep59+mkx4ml8OT3H+VP+2ZQQKmshy884Eda09RDNRrHYHem6pYpPkyWY46X6G
      buxo+YIFkI6GePvtdzByGY488Wz+hYRJVjdoaqonth4DPcfo2Bj1/jY5MJa0J0xjZ5+3/P/z
      mRiXfvkBFosFVQEKfMsqqsa5z32OVEany+VEGB2kMjlcLudO85akPZH/69Pm5pVvfYtTfe0Y
      QqW5yV8wgMVqx+N2oSoKmsWK2+WUI0NLB0b+AshE+eH3/w0fT6xw+olTuGvkdQDpcMq/C2Rz
      8S++892tWyKdLkcFU5KkyslfAKqVzs6uCqciSZVX8PRHYnWWn7z2Bl6vh94n8t8SKUkHXcFu
      0Hhsjbr2Y7zy0kUsVnkMIB1OeQ+C10KzvPfbQZIr07z1xv/hvd/dqHReklQRebcA/rZeXvi9
      MJeHU/zDL3Twlz8bhC9uvydACEE8to4pwF7jwKopJNM53G55KnS/yGazXLlyha6uLtbW1lha
      WsLtdnPx4sW9Tm1fKHgM4Os8gfqr1/hvfz3C8y99s2CAZDzGemSZhMWPiAVxuZxYva30tDeU
      JWFpZz744APOnTtHTU0N3d3dJJNJ3nnnnb1Oa98oWADR4CStZ77El47V8eZvbnOyu3nbMoqi
      0NzWQSgU4uTxTm4OrzIwMMDg7QBmq0/2Au0Dk5OTZLNZIpEIr776Ku+++y7PPffcoX3PpekF
      ykT5q//5vxmPqNzq8HP+Sy8XDJCNr0CND5umIExBNpPCYrXLXqB9ore3l+7ubj755BOy2Sxi
      8yanwzoW0k57gfJ/euy1/PF3/zVfPNOPx1tLLpspGCCeMhjo37hm0NnaxFhgkYG+IztKQiqf
      L3/5y6RSKV5++WVUVeWFF144tB/+3Sj41RcLTRHNmPi8Xu5MzvHFz53Mu5yv8d6uUUNLBw0t
      pU9SegymAZnotodV4HR/O5AFkd14IFXgC83qAkuBez8OqYIFUN9xir/3cgeBOzc413+2kjlJ
      u5Fahb/9UXExTrwCLWdKk88Bkb8AUqv8px+/RlPjRheo4Q7R3Vq4I1SSDqoC7dAenjn3BE6H
      gzpfI51t288ASdJhkL8AVCsDA/1YVFhbXWJ6fqnCaUlSZeQvgMQS/+4//DnRtIHb48Vht1Y4
      LUmqjPzHAK5m/vzP/vS+B+RpM+lwyrsFWJq+xeDQEEOTQVRVRVULF4CRSzM5MUE6a5BJxgjM
      LCCn1pMOirxbAKtF5W9e+6+ERS2nelo4+tTnefHZPKdChWBk5Bb9x45vTJg3couerhZGpxY4
      1tNW7twlqWh5C8DXcZx/+/3vc/mX75PDxrnTx/M+WQiDldVllFFw1LVisVnx+ZuYWQ5gmi2y
      F6iSDKPwRZ3HDWEaiAO+Lko2LlBidY7FtItvf76d//XmL/iTP/z725ZRFJXaWh9Hj/ZxcyyI
      qRvE1yM4nG7ZC1RpJVjPmqrBAV8XpRkXCPA0HUEPvcdfvz3GmS8WaIZTVE6dOEpgdomTJ/vR
      k1Hml9cZ6JW9QNLB8IihEX1851/+K4TgkQfBNS4vx45ujB5t9/o46vWVPktJKpOC+w/x5RlG
      phZRcnGu3rhdyZwkqWIK3g/wk7/8C0bDKsdb3bQ88UUuPFnhzCSpAvIXgL2WP/rnf8z//fUg
      zf5amjrkGEHS4VR4mtT1EHPLSZqbm/G65WC30uFUeIYYZy2RhVF+85vfMBpYqGROklQxhc8C
      uf28/LWvAuBvlvcCSIdTwS2Aqmo4nU6U1Aq/ujpSyZwkqWIKbgEyiShXr17FyMTxHnmqwFKC
      4eufoFgdtHX1EJoeJZnVae85QVO9q0wpS1LpFCwAZ10jPreNMB7On81/QzxAJpOlxubCZrWS
      0uHM6VMMjc7QUDuAaZZ/tshS9BoZxs76R/Yl06TYZgjTNBEHfF2Yxs4+cwULIDwzxDItvPpS
      B//9F+/znX+8fXQ4IeCpC89gZuMMj09t3DYgTFAUlM0/qlp8r86jlGKEj3LnWBEl6IlSFAXl
      gK+LR3Ut5POIUSFOYH//Nf7qjTs8/3cKDY0omBy9RSqr09rZS2pljhs3R+keOLlVAOUfg6b4
      +IdinJwSvAVFUUrzjbKXdph//gIwkrz74TX+8J/+MzLRRf52NAQ92wf8URSV/uP3zRtQf2JH
      Ly5Jey3/9i6X4vrwbUwBqfVVRsZnKpyWJFVG/i1AjZ+vnO/mL378X1CtDr717VcrnJYkVUbB
      Y4CnLr7IUxdfrGQuklRxB/uQX5KKJAtAqmqyAKSqJgtAqmrFF4Aw+fij94kkdaZGb3Lt2jUi
      8cITakjSflL0GBhLc1OoNjtZQ7CWzHDm1FGGxqepOzGAEKIC/UDF9wJVomep3BRR/MVgIQTi
      oK+LHfaGFVUAwsxwfWgUtwNCoZXNS+kqCLGxMjf/lFMpwpc7x0oQovhmuEr8f5WbaVawAFBs
      vPjVrxCaG8fi9xNOhxgcuklH74kKDoxVfO9KuXOsiBI0samqWpIBtvaSoe1sPRRVAIqioFks
      tHZvDJ3YeKq6pteRDj55FkiqarIApKomC2CfGB4e5vLly9y4cYO1tTXeeOONvU6pKsgC2CdO
      nTrFF77wBcbGxjAMg5qamr1OqSrIAtgnkskk7733HrW1tfh8vsNxl9oBIAtgnxgZGaGmpob1
      9XVGR0e5du0aV69ePfDn5fe7gz0bwiFy4cIFTNPcun7yve99T24FKqC4AhCClaV5VqIpenp7
      0ZNrzC+v09fbjbbDu/MPig8//JC1tTXOnj3LnTt3SCaTdHZ28tRThcZOepAwDcgm8v7b3c2x
      woNtDdu2AVYHiianri2ForcAdncdPS47t8am0ZOrHOvt4M7kHCf7O0uR375z/vx5VlZWmJiY
      4MUXX+TnP/85PT09j/18c+UOydf+oKgcal7+M6xHv1pUDGlDka0QCugpPh4cpvvU51iej+L2
      1pNZCGCa5qGcJG94eJhgMMhLL71EPB4nmUzidrsfO8ZOB27KG8M0tr+enCQPKOEkeY9DCJN0
      Dp469yR3phYxczrhlRAud+2hnCRPCMHly5d5+umnCYVCBAIBnn322R1NsrfTXpV8VFXb/ppy
      kjyghJPkPQ4FBQ2dxZUcp08NYGTiLK7GGOhuLSbsvqUoCj/4wQ+2fu/o6NjDbKRSKHoXyNfY
      iq9xM5jTwxGnpwRp7b2cYZIzitt9c1hVeSZnnzvY27syGllMMhjMf7bmcf2jc01o8vO/r8kL
      YVJVkwUgVTVZAFJVkwUgVbU9LQAhBCMjI1y5cgUhBO+99x6XLl0iHo/vZVpSFSm6ADKpONMz
      c+iGIJuKM7ewtKOBSlpbW4lGo+RyOcLhMH19fYyPjxebliQ9luIKQAiWV8LUuS0M355gaPgm
      VpFkLBB8rKcrioLP59sMJUin09y8eROv11tUWpL0uIq+ENbW0sz164N0DpxkfjpGU3MrC7cD
      mGbzZ/YCmabJhx9+yMcff0xHRwepVAqr1UosFnvs3ppy9QKZJYhrGDrCfPBCgOwFKq+K9gIh
      BNevXePE2Qs4bBqzEyaJeJQah+uxe4FeeOEFXnjhBWDjtsCdKlcvkFqCuJpm2dYWLnuByqui
      vUACgcfrYXLsNg3NHQz0HWF+eZ2Bvu3twblMGj2XLeblcLjlrpFUWkUOjKUycPzBb+1jdQ15
      l/3k53/Dzd/8ctevpVlt/JN//+NdP18qLSEEc3NzdHR0sL6+zvXr1zlz5gx1dXV7ndqOyOsA
      0q7Mzc1x+fJlDMMgkUhw4cIFLl26tNdp7ZgsAGlXOjs76evrA8Dn8/HWW2/h9/v3OKudkwUg
      FS0cDvPtb3+bSCSy16nsmCwAaVcmJibIZDIPXMW/ezavGJFIhJ/+9Kdks1lmZ2d54403uH79
      egkyzu9gn/OS9kxfX9/WLhBAe3t7SeLa7XZaW1sxTZOrV6/yzW9+k9dff52zZ8+WJP7DZAFI
      jxRJhvnRh/+xqBh/99Q3earj/GMt63Q6N+YpYKNToNx31MkCkB4pZ2S5tTRSVIyLvc899rKB
      QIDBwUEMw6Cnp4fXX3+d+vr6ol7/UYosAMHC9CQLkTTnz55i9OYgiXSOjt6TNNY5S5OhVFW6
      u7v57ne/u/V7uXZ97ip6C9Da1cta4jYAyazgzOlTDI3O4PduTJJnGBu9GaUYH+hurPvt57im
      aW4b1m2nc1jlI4S5LWfFFEWf0TCFiXgobknyNcW2fAUma7nizho5NRd29cFRtHfaa1VkASg8
      sIumsDFr3X37bvf+Lu6V7o/14GPliVv0lIvc3Yd9+LHi426s94cDlyTqtgRLtX4fzjepJ/kf
      oz8qKu7zrV/nrP/3tr3WThTdDDczNc7y8jLzS414a6wMjtyme+DU1ptW1ftHvCyOmnciuPLE
      VUoQd+P9PxhHlOAT9eB63XqwJHGVh+KW5CBU2b6OS9HEqOSLu8MxaYtuh+7qHaCrd2Dj9+b8
      fUCStF/JC2FSVZMFIFU1WQBSVZMFIFU1WQBSVZMFIFU1WQBSVStpAURWFrl5e5RsCYb+kKRK
      KGkBTE7P09PmY2xitpRhJalsFFHCWeyuD17jzKkTXL8d4MzJo+i6Ti6XQ1VV4pEV4mvhrWXv
      XsI2zXtbC1XTEPcNpnX30rxpmihAY1fftuctryWJxNMgHhzMSlU1hHgolqJuPm/jMVXZmMFl
      oKP+vudtxI+ldZJZY+syvjDFvQa5zRaH+5vdFHWj9eP+Zqxmr337ezQz6KHbCPNeXurme7wb
      X1VVFAUM4/51o268R9NE9XWj1NShadq955k5lPjifbHuvp+NvB6IpaqAuNfopoCmqpg1PoTF
      8UBemVyaydWJB9aXYd5rbNNUFXHfe1TuW/fmZhIt3lbqnb4H3qNQBKHUAob5cF4Pri9NVTHF
      vXWvbC5nmiZeWz0ui3tzfSkYhoEQBtHQ0Mb/GSC2YilbY1VtDaamKKUtgGufXMVf70W3+ejt
      aMQwjLJPkidJxShpAeSyKaKxNH5/PQrIApD2vZIWwMMMw5CTxEn7WtlviSxHAZRry2IYxtb+
      ZCmZplmW+1sPYlwo1NZenN1+Jsq6BRBClKUAyhkXSl+0Mm55496NvZu4Zb0Q9qiEEvEYumGS
      y2TQ77/tztRZDUeJRlbRC1xOuBtXz2VYWgqRTSeJxJIlyVeYBkuLQdZiiR1N9PFZcRVFwdQz
      BINBYonUQ0sYhFfXWF29d5Yslbq3TDoZI7QS3jqr8nDcdDJGMLhIOvvg0OaZeJR4JkN4dW3z
      EbEVN5tOEAwGSWVyBfPNZVIsLi6RfWjI8WTis9dNLpPe9v/3WXFTiQSfdQUpX9y7sTOZDEII
      Uqn0A+vvUbQf/vCHP3ysJUts5MYnJLIqmeUghttDLpNDZFIYimBuYRk9EcXla8RSqESFzqef
      DFLvr8fMJJmcDZJKZaiv9bAwM0Xa1FByKYJLi6RyYGRThIIL6KodcgnGp2Zwe+uwPjRceWY9
      xMxKEj22xHrOisVIMBNcpa7Oy8rSPMtrSZxWGJuYwuV2E5gYB0sNZjpJcGmBnNBwOex5U06t
      BJhL2EmGAuhWD3oiTHB1nTqvg+lAkGh0hVg0it1dRzIWw+lykktFuXE7QJ3Hib3GuW24dYCx
      sVE8Xi+jt27hb2kjNBcgqauQDBNXbCxMThKNJ6itqycWXcfpcjJ/Zwzqapm5cxO3rxn7Qyva
      yCa4NnQHv6+WrC7QsxnsVo3IeoJUIkFNjY2JsTGExU4umyEWXgHNQmBiHMXmZPTTD5iNGDS3
      +NHu+yI09TTXBm/h99eRzZnouQx2q4XIepxUIonDYWdibAxTs6HnMsQjq5iqRmByHCwOJgc/
      ZGrVoLnZ90BcgLE7YxjpNdZ1K+gZDD1HaGmBjKnhsKlMjI2RMVVUI8VkYA5vXf3etULYXPWQ
      jpA2BOgp5pbCRIILRPN8I+Wjx8PYfO00NjTidtgQqh01E2dhLkBK9bA8N8ni3AwWbxMri3PM
      zEzja+4gOBNAABZyjNzKPxWT21tH3/HTrC9Pc2dinkaHzp2JKUJRndbGem7dGaO3txtFCCxW
      C0PDwyzNTONqaGVpfvqReXvq6jl69CjLy/NMTC/hMmMsRDa+rXLZLJ3d7QQmplkOLQMQWZqj
      rfc4TU1NWAt8Gyiqhs/fwNEuH6O3bxFTPCzNTnH3+zWrC1prrcyvrrO8vLL5qEqdz8/R3g6W
      l9e2xYyvLuDrHCC1HmY9lmRufg6MDIHZIIuLQYQwsVitDA0NMTN5h/Us2DRl67HGpmYGjh3D
      +tCHNB2ex9PeTzq+RjSW2Ihr6gRm5llcDGLeF3cuMMZayqDGomK12hgavkFDYxP9x45hy3Mc
      EV1dZGoxwZEWH8vLyyzOzuD0txJamGHs1i1aj/SxGgoyMTZBXb0PRSl+IIGi9PZ1MzUxDYqC
      ME0ymfRj73ZoDg/p6MrGbCmGgbfWi0WzoOtZZgKTZIWGqlpwu5yomopqteN22tFUlfHxKVra
      OrGoOqlUCtPQSWcfLLxYOIjVUUdkZYmZUBSHRUGzWFE1DVVVUVWVpZkJbN5GnA4bqmbD5XKg
      bW5Rctk0urGxOX5YeHUJl9vDcnCexbUUNZunImqcbuw2O+p9OwLuWh/h0CK6nsPIZUln9fyb
      dyEIhtapdVqYC0yiG/eieDxerFbL1sW3+58TCq3iqXWRSqXJZtJbu6MOr49oKEh7ZzuR8BpC
      CHLZ7Na/L05NYK1twOWwo9rd9B5pZ2FqAoevEWeNDVVVMQwDPZclmzNIpVIIwO71Ew8t0NbR
      wdrduLkMurERNxSYQPP6cTtrwOqkr6eTxcAEtrrN11JVdEPH0LNkcgbpzbgAtf4WGt0Ky9GN
      3WFFteJxO9BUFUOAzbJxQXDgxEmSq7PMr8T2bhfIYrHgcnuxWTXqGprIRpfJqTYaG/3U2Oy4
      XU7sNQ4K3eOsqFbcdpiansNV68PpqMHlrKGuoRnNSGF3eWnw11PjcGCzanjcHhwOBxaLhVqP
      g6VwjMbGBpLxOE67RiSe3VjpikpwfoassNPf20W910kqY9LedQSRihCJZ+ls8TMZmKWprZ2V
      xUV8/kZ89XUbr2Wx4HA4SKwto2sO1iKreD2ejZwVlbmZaVS7l+72NrweO1lTpbmpEbvNhtvt
      wuGowaJZcHvcOBwOrDVuRDrK/FIYr9PKWsogFYvi8XrurQsjS2B2Hl9rF+2trSi5BLbN92+z
      1+Cw23A4HVhtdlw1dhwOB4pqMj09g8fXSrPPQ2h5GfQ0is2FVVPQrA4sZoqZ+WU6j3ThsioE
      V6I0NDaSWI/S1dfD0nwQX0MD/vo6nA4HDoed4MIivoZGWlrbmA0EcDotpHWN+HoYj8eLqtmx
      qVmm5xZp7zqCt0ZlPrRGQ2MDifV1uvp7Cc0vUOdvoMFXj9PhoMbpYHE+SL2/gZa2dhYCUzid
      VpIZhXgsgsfjRdn8TLV1dBBbX6eu1ovb7aHG4cCqaTQ3+RifnCaVyVHrtBJNCbraW8p7Fkg6
      fLLJdWZCUfq7O0saN5eKEViMMNDTVdK4d0VXQ8wthmho6aLZf2+mIVkAUlWT9wNIVe3/A4GA
      sqZeBG0fAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='WINNER/VENUE' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
